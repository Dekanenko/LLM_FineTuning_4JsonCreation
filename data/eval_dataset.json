{"input": "You are a name and surname extractor. Your task is to identify and extract the names and surnames of characters from the given text.\n### Input:\nIn the quaint town of Maplewood, two friends, Emily Parker and Jake Thompson, spent their afternoons in the local library. One rainy Tuesday, as the sound of raindrops pattered against the windows, Emily discovered an old, dusty book titled \"Mysteries of Maplewood.\" \n\n\"Jake, look at this!\" she exclaimed, brushing off the thick layer of dust. Intrigued, Jake leaned over her shoulder. \"What’s so special about it?\" he asked, adjusting his glasses. \n\nEmily opened the book to reveal faded maps and handwritten notes. \"It seems to contain secrets about the town's history,\" she said, her eyes sparkling with excitement. \n\nJust then, Mrs. Hargrove, the librarian, approached them. \"Ah, I see you've found the legend of the Maplewood treasure!\" she said, her eyes twinkling. \"Many have sought it, but few have succeeded.\" \n\nJake leaned closer, whispering, \"Do you think we could find it?\" \n\nEmily grinned, her adventurous spirit ignited. \"Why not? Let’s uncover Maplewood’s mystery!\" With determination, the duo set off on a quest that would change their lives forever.\n\n### Instructions:\n1. Extract characters' names and surnames clearly.\n2. Ensure that the JSON file contains a list of unique name-surname pairs (no duplicates).\n\n### Format Instructions:\n1. Do NOT include headers, comments, or any additional text—only generate the JSON file.\n2. Strictly adhere to the following JSON format:\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {\"properties\": {\"foo\": {\"title\": \"Foo\", \"description\": \"a list of strings\", \"type\": \"array\", \"items\": {\"type\": \"string\"}}}, \"required\": [\"foo\"]}\nthe object {\"foo\": [\"bar\", \"baz\"]} is a well-formatted instance of the schema. The object {\"properties\": {\"foo\": [\"bar\", \"baz\"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{\"$defs\": {\"FullName\": {\"properties\": {\"name\": {\"description\": \"Name of the character\", \"title\": \"Name\", \"type\": \"string\"}, \"surname\": {\"description\": \"Surname of the character\", \"title\": \"Surname\", \"type\": \"string\"}}, \"required\": [\"name\", \"surname\"], \"title\": \"FullName\", \"type\": \"object\"}}, \"properties\": {\"fullname_list\": {\"description\": \"List of full names for every character\", \"items\": {\"$ref\": \"#/$defs/FullName\"}, \"title\": \"Fullname List\", \"type\": \"array\"}}, \"required\": [\"fullname_list\"]}\n```", "output": "{\n  \"fullname_list\": [\n    {\n      \"name\": \"Emily\",\n      \"surname\": \"Parker\"\n    },\n    {\n      \"name\": \"Jake\",\n      \"surname\": \"Thompson\"\n    },\n    {\n      \"name\": \"Mrs.\",\n      \"surname\": \"Hargrove\"\n    }\n  ]\n}"}
{"input": "You are a name and surname extractor. Your task is to identify and extract the names and surnames of characters from the given text.\n### Input:\nIn the quaint town of Eldridge, Sarah Quinn and Lucas Bennett stood at the park, deep in conversation. The autumn leaves crunched underfoot as they walked along the winding path. \n\n\"I can't believe we’re finally doing this,\" Lucas said, a nervous excitement in his voice.\n\nSarah smiled, brushing a loose strand of hair behind her ear. \"I know! After months of planning, it feels surreal.\"\n\nThey stopped by the old oak tree, its branches stretching wide like welcoming arms. “Have you thought about what you’ll say?” Sarah asked, her blue eyes sparkling with mischief.\n\n“Just that I appreciate everything he’s done for us,” Lucas replied, kicking a pebble out of their way.\n\nAs they watched the sun dip below the horizon, Jack Caldwell approached, his camera slung across his shoulder. “The moment’s finally here, huh?” he grinned, ready to capture the proposal.\n\nSarah squeezed Lucas’s hand, a flutter of anticipation in her stomach as they prepared for a new chapter in their lives. Tonight, under the stars, they would begin a story of love that had been years in the making.\n\n### Instructions:\n1. Extract characters' names and surnames clearly.\n2. Ensure that the JSON file contains a list of unique name-surname pairs (no duplicates).\n\n### Format Instructions:\n1. Do NOT include headers, comments, or any additional text—only generate the JSON file.\n2. Strictly adhere to the following JSON format:\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {\"properties\": {\"foo\": {\"title\": \"Foo\", \"description\": \"a list of strings\", \"type\": \"array\", \"items\": {\"type\": \"string\"}}}, \"required\": [\"foo\"]}\nthe object {\"foo\": [\"bar\", \"baz\"]} is a well-formatted instance of the schema. The object {\"properties\": {\"foo\": [\"bar\", \"baz\"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{\"$defs\": {\"FullName\": {\"properties\": {\"name\": {\"description\": \"Name of the character\", \"title\": \"Name\", \"type\": \"string\"}, \"surname\": {\"description\": \"Surname of the character\", \"title\": \"Surname\", \"type\": \"string\"}}, \"required\": [\"name\", \"surname\"], \"title\": \"FullName\", \"type\": \"object\"}}, \"properties\": {\"fullname_list\": {\"description\": \"List of full names for every character\", \"items\": {\"$ref\": \"#/$defs/FullName\"}, \"title\": \"Fullname List\", \"type\": \"array\"}}, \"required\": [\"fullname_list\"]}\n```", "output": "{\n  \"fullname_list\": [\n    {\n      \"name\": \"Sarah\",\n      \"surname\": \"Quinn\"\n    },\n    {\n      \"name\": \"Lucas\",\n      \"surname\": \"Bennett\"\n    },\n    {\n      \"name\": \"Jack\",\n      \"surname\": \"Caldwell\"\n    }\n  ]\n}"}
{"input": "You are a name and surname extractor. Your task is to identify and extract the names and surnames of characters from the given text.\n### Input:\nIn the quaint village of Eldenbrook, two childhood friends, Clara Winslow and James Hargrove, spent their afternoons exploring the sun-dappled woods. Clara, with her vibrant auburn hair and an insatiable curiosity, always led their adventures. \"Come on, James! Let’s see if the old well really is enchanted,\" she urged one sunny afternoon.\n\nJames, slightly more cautious with his sandy-blonde hair and thoughtful blue eyes, chuckled but followed her eagerly. \"You know it’s just an old stone structure, Clara,\" he replied, suppressing a grin.\n\nAs they approached the well, Clara knelt down to peer inside. \"I think I saw something shimmer!\" she exclaimed, pointing into the darkness. Intrigued, James leaned closer but suddenly whispered, \"Wait! Did you hear that?\"\n\nA soft rustling filled the air. The two exchanged wide-eyed glances. Just then, a small gray cat emerged from the bushes, meowing loudly. They burst into laughter, relieved but exhilarated by the unexpected thrill. Clara gently petted the cat, and they named it Whiskers, creating yet another adventure to cherish in their memories of friendship and wonder.\n\n### Instructions:\n1. Extract characters' names and surnames clearly.\n2. Ensure that the JSON file contains a list of unique name-surname pairs (no duplicates).\n\n### Format Instructions:\n1. Do NOT include headers, comments, or any additional text—only generate the JSON file.\n2. Strictly adhere to the following JSON format:\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {\"properties\": {\"foo\": {\"title\": \"Foo\", \"description\": \"a list of strings\", \"type\": \"array\", \"items\": {\"type\": \"string\"}}}, \"required\": [\"foo\"]}\nthe object {\"foo\": [\"bar\", \"baz\"]} is a well-formatted instance of the schema. The object {\"properties\": {\"foo\": [\"bar\", \"baz\"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{\"$defs\": {\"FullName\": {\"properties\": {\"name\": {\"description\": \"Name of the character\", \"title\": \"Name\", \"type\": \"string\"}, \"surname\": {\"description\": \"Surname of the character\", \"title\": \"Surname\", \"type\": \"string\"}}, \"required\": [\"name\", \"surname\"], \"title\": \"FullName\", \"type\": \"object\"}}, \"properties\": {\"fullname_list\": {\"description\": \"List of full names for every character\", \"items\": {\"$ref\": \"#/$defs/FullName\"}, \"title\": \"Fullname List\", \"type\": \"array\"}}, \"required\": [\"fullname_list\"]}\n```", "output": "{\n  \"fullname_list\": [\n    {\n      \"name\": \"Clara\",\n      \"surname\": \"Winslow\"\n    },\n    {\n      \"name\": \"James\",\n      \"surname\": \"Hargrove\"\n    }\n  ]\n}"}
{"input": "You are a creator of fictional characters. Your task is to create a unique character for the game.\n### Instructions:\n1. Character must be unique and have engaging properties and story.\n2. You must keep the biography concise, no more than 60 words.3. Provide information about character's attack, skill and ultimate concisely, no more than 30 words each.\n4. Be very creative and do not hesitate creating complex characters.\n### Format Instructions:\n1. Do NOT include headers, comments, or any additional text—only generate the JSON file.\n2. Strictly adhere to the following JSON format:\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {\"properties\": {\"foo\": {\"title\": \"Foo\", \"description\": \"a list of strings\", \"type\": \"array\", \"items\": {\"type\": \"string\"}}}, \"required\": [\"foo\"]}\nthe object {\"foo\": [\"bar\", \"baz\"]} is a well-formatted instance of the schema. The object {\"properties\": {\"foo\": [\"bar\", \"baz\"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{\"$defs\": {\"CharacterRace\": {\"enum\": [\"human\", \"elf\", \"ork\"], \"title\": \"CharacterRace\", \"type\": \"string\"}, \"CharacterType\": {\"enum\": [\"mage\", \"archer\", \"warrior\"], \"title\": \"CharacterType\", \"type\": \"string\"}}, \"properties\": {\"name\": {\"description\": \"Name of the character\", \"title\": \"Name\", \"type\": \"string\"}, \"age\": {\"description\": \"Age of the character\", \"title\": \"Age\", \"type\": \"integer\"}, \"character_type\": {\"allOf\": [{\"$ref\": \"#/$defs/CharacterType\"}], \"description\": \"Type of the character\"}, \"biography\": {\"description\": \"Character's biography\", \"title\": \"Biography\", \"type\": \"string\"}, \"character_race\": {\"allOf\": [{\"$ref\": \"#/$defs/CharacterRace\"}], \"description\": \"Character's race\"}, \"weapon\": {\"description\": \"Character's weapon\", \"title\": \"Weapon\", \"type\": \"string\"}, \"attack_description\": {\"description\": \"The description of the attack\", \"title\": \"Attack Description\", \"type\": \"string\"}, \"skill_description\": {\"description\": \"The description of the skill\", \"title\": \"Skill Description\", \"type\": \"string\"}, \"ultimate_description\": {\"description\": \"The description of the ultimate\", \"title\": \"Ultimate Description\", \"type\": \"string\"}}, \"required\": [\"name\", \"age\", \"character_type\", \"biography\", \"character_race\", \"weapon\", \"attack_description\", \"skill_description\", \"ultimate_description\"]}\n```", "output": "{\n  \"name\": \"Elysia Nightshade\",\n  \"age\": 120,\n  \"character_type\": \"mage\",\n  \"biography\": \"Once a guardian of the enchanted forest, Elysia was betrayed by her own kin. Now, she wields dark magic to reclaim her lost honor and protect the realm.\",\n  \"character_race\": \"elf\",\n  \"weapon\": \"Shadowstaff\",\n  \"attack_description\": \"Unleashes a flurry of shadow bolts, dealing damage to multiple enemies in a line.\",\n  \"skill_description\": \"Cloaks herself in shadows, becoming invisible for a short duration and gaining increased movement speed.\",\n  \"ultimate_description\": \"Summons a spectral army to aid her in battle, overwhelming foes with relentless attacks for a limited time.\"\n}"}
{"input": "You are a creator of fictional characters. Your task is to create a unique character for the game.\n### Instructions:\n1. Character must be unique and have engaging properties and story.\n2. You must keep the biography concise, no more than 60 words.3. Provide information about character's attack, skill and ultimate concisely, no more than 30 words each.\n4. Be very creative and do not hesitate creating complex characters.\n### Format Instructions:\n1. Do NOT include headers, comments, or any additional text—only generate the JSON file.\n2. Strictly adhere to the following JSON format:\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {\"properties\": {\"foo\": {\"title\": \"Foo\", \"description\": \"a list of strings\", \"type\": \"array\", \"items\": {\"type\": \"string\"}}}, \"required\": [\"foo\"]}\nthe object {\"foo\": [\"bar\", \"baz\"]} is a well-formatted instance of the schema. The object {\"properties\": {\"foo\": [\"bar\", \"baz\"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{\"$defs\": {\"CharacterRace\": {\"enum\": [\"human\", \"elf\", \"ork\"], \"title\": \"CharacterRace\", \"type\": \"string\"}, \"CharacterType\": {\"enum\": [\"mage\", \"archer\", \"warrior\"], \"title\": \"CharacterType\", \"type\": \"string\"}}, \"properties\": {\"name\": {\"description\": \"Name of the character\", \"title\": \"Name\", \"type\": \"string\"}, \"age\": {\"description\": \"Age of the character\", \"title\": \"Age\", \"type\": \"integer\"}, \"character_type\": {\"allOf\": [{\"$ref\": \"#/$defs/CharacterType\"}], \"description\": \"Type of the character\"}, \"biography\": {\"description\": \"Character's biography\", \"title\": \"Biography\", \"type\": \"string\"}, \"character_race\": {\"allOf\": [{\"$ref\": \"#/$defs/CharacterRace\"}], \"description\": \"Character's race\"}, \"weapon\": {\"description\": \"Character's weapon\", \"title\": \"Weapon\", \"type\": \"string\"}, \"attack_description\": {\"description\": \"The description of the attack\", \"title\": \"Attack Description\", \"type\": \"string\"}, \"skill_description\": {\"description\": \"The description of the skill\", \"title\": \"Skill Description\", \"type\": \"string\"}, \"ultimate_description\": {\"description\": \"The description of the ultimate\", \"title\": \"Ultimate Description\", \"type\": \"string\"}}, \"required\": [\"name\", \"age\", \"character_type\", \"biography\", \"character_race\", \"weapon\", \"attack_description\", \"skill_description\", \"ultimate_description\"]}\n```", "output": "{\n  \"name\": \"Lyra Windwhisper\",\n  \"age\": 120,\n  \"character_type\": \"mage\",\n  \"biography\": \"Once a guardian of the Whispering Woods, Lyra was betrayed by her kin. Now, she seeks revenge, wielding ancient magic to protect the realm.\",\n  \"character_race\": \"elf\",\n  \"weapon\": \"Staff of Echoes\",\n  \"attack_description\": \"Unleashes a burst of wind, dealing damage and pushing enemies back.\",\n  \"skill_description\": \"Summons a phantom ally that distracts foes and absorbs damage.\",\n  \"ultimate_description\": \"Channels the storm, creating a tempest that deals massive area damage and immobilizes enemies.\"\n}"}
{"input": "You are a creator of fictional characters. Your task is to create a unique character for the game.\n### Instructions:\n1. Character must be unique and have engaging properties and story.\n2. You must keep the biography concise, no more than 60 words.3. Provide information about character's attack, skill and ultimate concisely, no more than 30 words each.\n4. Be very creative and do not hesitate creating complex characters.\n### Format Instructions:\n1. Do NOT include headers, comments, or any additional text—only generate the JSON file.\n2. Strictly adhere to the following JSON format:\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {\"properties\": {\"foo\": {\"title\": \"Foo\", \"description\": \"a list of strings\", \"type\": \"array\", \"items\": {\"type\": \"string\"}}}, \"required\": [\"foo\"]}\nthe object {\"foo\": [\"bar\", \"baz\"]} is a well-formatted instance of the schema. The object {\"properties\": {\"foo\": [\"bar\", \"baz\"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{\"$defs\": {\"CharacterRace\": {\"enum\": [\"human\", \"elf\", \"ork\"], \"title\": \"CharacterRace\", \"type\": \"string\"}, \"CharacterType\": {\"enum\": [\"mage\", \"archer\", \"warrior\"], \"title\": \"CharacterType\", \"type\": \"string\"}}, \"properties\": {\"name\": {\"description\": \"Name of the character\", \"title\": \"Name\", \"type\": \"string\"}, \"age\": {\"description\": \"Age of the character\", \"title\": \"Age\", \"type\": \"integer\"}, \"character_type\": {\"allOf\": [{\"$ref\": \"#/$defs/CharacterType\"}], \"description\": \"Type of the character\"}, \"biography\": {\"description\": \"Character's biography\", \"title\": \"Biography\", \"type\": \"string\"}, \"character_race\": {\"allOf\": [{\"$ref\": \"#/$defs/CharacterRace\"}], \"description\": \"Character's race\"}, \"weapon\": {\"description\": \"Character's weapon\", \"title\": \"Weapon\", \"type\": \"string\"}, \"attack_description\": {\"description\": \"The description of the attack\", \"title\": \"Attack Description\", \"type\": \"string\"}, \"skill_description\": {\"description\": \"The description of the skill\", \"title\": \"Skill Description\", \"type\": \"string\"}, \"ultimate_description\": {\"description\": \"The description of the ultimate\", \"title\": \"Ultimate Description\", \"type\": \"string\"}}, \"required\": [\"name\", \"age\", \"character_type\", \"biography\", \"character_race\", \"weapon\", \"attack_description\", \"skill_description\", \"ultimate_description\"]}\n```", "output": "{\n  \"name\": \"Zephyra Windwhisper\",\n  \"age\": 120,\n  \"character_type\": \"mage\",\n  \"biography\": \"Once a guardian of the ethereal skies, Zephyra harnesses the power of winds to protect her realm, seeking balance between nature and chaos.\",\n  \"character_race\": \"elf\",\n  \"weapon\": \"Windstaff\",\n  \"attack_description\": \"Unleashes a gust of slicing winds that damages and disorients enemies in a line.\",\n  \"skill_description\": \"Summons a whirlwind that grants allies increased movement speed and evasion for a short duration.\",\n  \"ultimate_description\": \"Calls forth a tempest, dealing massive area damage and stunning foes caught in its fury.\"\n}"}
{"input": "You are a t-shirt order extractor. Your task is to identify and extract the t-shirt order details from the given text.\n### Input:\nDear [T-Shirt Shop],\n\nI’d like to order a soft, ocean-blue t-shirt adorned with a vibrant, hand-painted sunset in warm hues of orange and pink. It should be a relaxed fit, short-sleeved, with a slightly distressed neckline for a vintage touch. Perfect for summer days!\n\nThank you!\n\n### Instructions:\n1. Extract t-shirt order details including type, size, color, quantity, and gender.\n2. If specific details are not mentioned, use the default values.\n\n### Format Instructions:\n1. Do NOT include headers, comments, or any additional text—only generate the JSON file.\n2. Strictly adhere to the following JSON format:\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {\"properties\": {\"foo\": {\"title\": \"Foo\", \"description\": \"a list of strings\", \"type\": \"array\", \"items\": {\"type\": \"string\"}}}, \"required\": [\"foo\"]}\nthe object {\"foo\": [\"bar\", \"baz\"]} is a well-formatted instance of the schema. The object {\"properties\": {\"foo\": [\"bar\", \"baz\"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{\"$defs\": {\"Gender\": {\"enum\": [\"male\", \"female\", \"unisex\"], \"title\": \"Gender\", \"type\": \"string\"}, \"Size\": {\"enum\": [\"S\", \"M\", \"L\", \"XL\", \"XXL\"], \"title\": \"Size\", \"type\": \"string\"}, \"Type\": {\"enum\": [\"henley\", \"vneck\", \"crewneck\", \"polo\", \"tanktop\", \"jersey\", \"raglan\", \"sleeveless\"], \"title\": \"Type\", \"type\": \"string\"}}, \"properties\": {\"type\": {\"allOf\": [{\"$ref\": \"#/$defs/Type\"}], \"default\": \"vneck\", \"description\": \"Type of the t-shirt\"}, \"size\": {\"allOf\": [{\"$ref\": \"#/$defs/Size\"}], \"default\": \"M\", \"description\": \"Size of the t-shirt\"}, \"color\": {\"default\": \"black\", \"description\": \"Color of the t-shirt\", \"title\": \"Color\", \"type\": \"string\"}, \"quantity\": {\"default\": 1, \"description\": \"Quantity of the t-shirt\", \"title\": \"Quantity\", \"type\": \"integer\"}, \"gender\": {\"allOf\": [{\"$ref\": \"#/$defs/Gender\"}], \"default\": \"unisex\", \"description\": \"Gender of the t-shirt\"}, \"picture_description\": {\"description\": \"Description of the picture\", \"title\": \"Picture Description\", \"type\": \"string\"}}, \"required\": [\"picture_description\"]}\n```", "output": "{\n  \"type\": \"vneck\",\n  \"size\": \"M\",\n  \"color\": \"ocean-blue\",\n  \"quantity\": 1,\n  \"gender\": \"unisex\",\n  \"picture_description\": \"a vibrant, hand-painted sunset in warm hues of orange and pink\"\n}"}
{"input": "You are a t-shirt order extractor. Your task is to identify and extract the t-shirt order details from the given text.\n### Input:\nI’d like to order a vibrant emerald green t-shirt made from soft, breathable cotton. It should feature a striking, intricate white mandala design centered on the chest, with a relaxed fit and slightly rolled sleeves. Perfect for casual summer outings!\n\n### Instructions:\n1. Extract t-shirt order details including type, size, color, quantity, and gender.\n2. If specific details are not mentioned, use the default values.\n\n### Format Instructions:\n1. Do NOT include headers, comments, or any additional text—only generate the JSON file.\n2. Strictly adhere to the following JSON format:\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {\"properties\": {\"foo\": {\"title\": \"Foo\", \"description\": \"a list of strings\", \"type\": \"array\", \"items\": {\"type\": \"string\"}}}, \"required\": [\"foo\"]}\nthe object {\"foo\": [\"bar\", \"baz\"]} is a well-formatted instance of the schema. The object {\"properties\": {\"foo\": [\"bar\", \"baz\"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{\"$defs\": {\"Gender\": {\"enum\": [\"male\", \"female\", \"unisex\"], \"title\": \"Gender\", \"type\": \"string\"}, \"Size\": {\"enum\": [\"S\", \"M\", \"L\", \"XL\", \"XXL\"], \"title\": \"Size\", \"type\": \"string\"}, \"Type\": {\"enum\": [\"henley\", \"vneck\", \"crewneck\", \"polo\", \"tanktop\", \"jersey\", \"raglan\", \"sleeveless\"], \"title\": \"Type\", \"type\": \"string\"}}, \"properties\": {\"type\": {\"allOf\": [{\"$ref\": \"#/$defs/Type\"}], \"default\": \"vneck\", \"description\": \"Type of the t-shirt\"}, \"size\": {\"allOf\": [{\"$ref\": \"#/$defs/Size\"}], \"default\": \"M\", \"description\": \"Size of the t-shirt\"}, \"color\": {\"default\": \"black\", \"description\": \"Color of the t-shirt\", \"title\": \"Color\", \"type\": \"string\"}, \"quantity\": {\"default\": 1, \"description\": \"Quantity of the t-shirt\", \"title\": \"Quantity\", \"type\": \"integer\"}, \"gender\": {\"allOf\": [{\"$ref\": \"#/$defs/Gender\"}], \"default\": \"unisex\", \"description\": \"Gender of the t-shirt\"}, \"picture_description\": {\"description\": \"Description of the picture\", \"title\": \"Picture Description\", \"type\": \"string\"}}, \"required\": [\"picture_description\"]}\n```", "output": "{\n  \"type\": \"vneck\",\n  \"size\": \"M\",\n  \"color\": \"emerald green\",\n  \"quantity\": 1,\n  \"gender\": \"unisex\",\n  \"picture_description\": \"a striking, intricate white mandala design centered on the chest\"\n}"}
{"input": "You are a t-shirt order extractor. Your task is to identify and extract the t-shirt order details from the given text.\n### Input:\nI'd like to order a soft, sky-blue t-shirt, crafted from breathable cotton. It should feature a whimsical sunflower graphic in vibrant yellows and greens, with the phrase “Chase the Sun” elegantly scripted below. Size medium, please. Perfect for casual outings and sunny days!\n\n### Instructions:\n1. Extract t-shirt order details including type, size, color, quantity, and gender.\n2. If specific details are not mentioned, use the default values.\n\n### Format Instructions:\n1. Do NOT include headers, comments, or any additional text—only generate the JSON file.\n2. Strictly adhere to the following JSON format:\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {\"properties\": {\"foo\": {\"title\": \"Foo\", \"description\": \"a list of strings\", \"type\": \"array\", \"items\": {\"type\": \"string\"}}}, \"required\": [\"foo\"]}\nthe object {\"foo\": [\"bar\", \"baz\"]} is a well-formatted instance of the schema. The object {\"properties\": {\"foo\": [\"bar\", \"baz\"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{\"$defs\": {\"Gender\": {\"enum\": [\"male\", \"female\", \"unisex\"], \"title\": \"Gender\", \"type\": \"string\"}, \"Size\": {\"enum\": [\"S\", \"M\", \"L\", \"XL\", \"XXL\"], \"title\": \"Size\", \"type\": \"string\"}, \"Type\": {\"enum\": [\"henley\", \"vneck\", \"crewneck\", \"polo\", \"tanktop\", \"jersey\", \"raglan\", \"sleeveless\"], \"title\": \"Type\", \"type\": \"string\"}}, \"properties\": {\"type\": {\"allOf\": [{\"$ref\": \"#/$defs/Type\"}], \"default\": \"vneck\", \"description\": \"Type of the t-shirt\"}, \"size\": {\"allOf\": [{\"$ref\": \"#/$defs/Size\"}], \"default\": \"M\", \"description\": \"Size of the t-shirt\"}, \"color\": {\"default\": \"black\", \"description\": \"Color of the t-shirt\", \"title\": \"Color\", \"type\": \"string\"}, \"quantity\": {\"default\": 1, \"description\": \"Quantity of the t-shirt\", \"title\": \"Quantity\", \"type\": \"integer\"}, \"gender\": {\"allOf\": [{\"$ref\": \"#/$defs/Gender\"}], \"default\": \"unisex\", \"description\": \"Gender of the t-shirt\"}, \"picture_description\": {\"description\": \"Description of the picture\", \"title\": \"Picture Description\", \"type\": \"string\"}}, \"required\": [\"picture_description\"]}\n```", "output": "{\n  \"type\": \"crewneck\",\n  \"size\": \"M\",\n  \"color\": \"sky-blue\",\n  \"quantity\": 1,\n  \"gender\": \"unisex\",\n  \"picture_description\": \"whimsical sunflower graphic in vibrant yellows and greens, with the phrase 'Chase the Sun' elegantly scripted below\"\n}"}
{"input": "You are a visionary film creator known for generating unique, thought-provoking movie concepts. Create an original film idea that challenges conventions and captivates audiences.\n### Instructions:\n1. Create a bold, innovative concept that hasn't been seen before in cinema.\n2. Develop 2-5 complex characters with compelling motivations and internal conflicts.\n3. The plot should feature unexpected twists and meaningful themes.\n4. The setting should be vivid and contribute to the story's atmosphere.\n5. Consider unique style elements (e.g., narrative structure, visual approach).\n6. The tone should be consistent and serve the story's purpose.\n7. Ensure the budget is realistic for the scope of the film.\n\n### Format Instructions:\n1. Do NOT include headers, comments, or any additional text—only generate the JSON file.\n2. Strictly adhere to the following JSON format:\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {\"properties\": {\"foo\": {\"title\": \"Foo\", \"description\": \"a list of strings\", \"type\": \"array\", \"items\": {\"type\": \"string\"}}}, \"required\": [\"foo\"]}\nthe object {\"foo\": [\"bar\", \"baz\"]} is a well-formatted instance of the schema. The object {\"properties\": {\"foo\": [\"bar\", \"baz\"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{\"$defs\": {\"Character\": {\"properties\": {\"name\": {\"description\": \"Name of the character\", \"title\": \"Name\", \"type\": \"string\"}, \"age\": {\"description\": \"Age of the character\", \"title\": \"Age\", \"type\": \"integer\"}, \"gender\": {\"allOf\": [{\"$ref\": \"#/$defs/Gender\"}], \"description\": \"Gender of the character\"}, \"role\": {\"description\": \"Role of the character\", \"title\": \"Role\", \"type\": \"string\"}, \"biography\": {\"description\": \"Biography of the character\", \"title\": \"Biography\", \"type\": \"string\"}}, \"required\": [\"name\", \"age\", \"gender\", \"role\", \"biography\"], \"title\": \"Character\", \"type\": \"object\"}, \"Gender\": {\"enum\": [\"male\", \"female\", \"other\"], \"title\": \"Gender\", \"type\": \"string\"}, \"Genre\": {\"enum\": [\"action\", \"comedy\", \"drama\", \"horror\", \"mystery\", \"romance\", \"science_fiction\", \"thriller\"], \"title\": \"Genre\", \"type\": \"string\"}}, \"properties\": {\"genre\": {\"allOf\": [{\"$ref\": \"#/$defs/Genre\"}], \"description\": \"Genre of the film\"}, \"title\": {\"description\": \"Title of the film\", \"title\": \"Title\", \"type\": \"string\"}, \"description\": {\"description\": \"Description of the film\", \"title\": \"Description\", \"type\": \"string\"}, \"characters\": {\"description\": \"Characters of the film\", \"items\": {\"$ref\": \"#/$defs/Character\"}, \"maxItems\": 5, \"minItems\": 1, \"title\": \"Characters\", \"type\": \"array\"}, \"plot\": {\"description\": \"Plot of the film\", \"title\": \"Plot\", \"type\": \"string\"}, \"setting\": {\"description\": \"Setting of the film\", \"title\": \"Setting\", \"type\": \"string\"}, \"style\": {\"description\": \"Style of the film\", \"title\": \"Style\", \"type\": \"string\"}, \"tone\": {\"description\": \"Tone of the film\", \"title\": \"Tone\", \"type\": \"string\"}, \"budget\": {\"description\": \"Budget of the film\", \"title\": \"Budget\", \"type\": \"integer\"}}, \"required\": [\"genre\", \"title\", \"description\", \"characters\", \"plot\", \"setting\", \"style\", \"tone\", \"budget\"]}\n```", "output": "{\n  \"genre\": \"science_fiction\",\n  \"title\": \"The Echoes of Tomorrow\",\n  \"description\": \"In a world where memories can be extracted and lived through again, a woman named Elara discovers that her past holds secrets that are not only her own but also connected to a conspiracy that manipulates reality. As she navigates through her past lives, she must confront the moral implications of memory and identity while unraveling the mystery behind a powerful corporation that threatens to rewrite history itself.\",\n  \"characters\": [\n    {\n      \"name\": \"Elara Finch\",\n      \"age\": 32,\n      \"gender\": \"female\",\n      \"role\": \"Protagonist\",\n      \"biography\": \"Elara is a skilled memory architect who specializes in extracting and recreating memories for clients. Haunted by her own fragmented past, she seeks to uncover the truth behind her family's disappearance, which she believes is linked to her work.\"\n    },\n    {\n      \"name\": \"Dr. Malcolm Hargrove\",\n      \"age\": 58,\n      \"gender\": \"male\",\n      \"role\": \"Antagonist\",\n      \"biography\": \"Malcolm is the CEO of Nexus Corp, the leading company in memory technology. He harbors a deep obsession with controlling memories to manipulate society, viewing it as a means to achieve utopia, regardless of the ethical cost.\"\n    },\n    {\n      \"name\": \"Ari Kade\",\n      \"age\": 27,\n      \"gender\": \"other\",\n      \"role\": \"Supporting Ally\",\n      \"biography\": \"Ari is a rogue hacker with a personal vendetta against Nexus Corp. They help Elara navigate the digital landscape of memories while struggling with their own identity and purpose in a world that constantly seeks to define them.\"\n    },\n    {\n      \"name\": \"Lucian Rayne\",\n      \"age\": 45,\n      \"gender\": \"male\",\n      \"role\": \"Mysterious Guide\",\n      \"biography\": \"A former memory architect turned whistleblower, Lucian possesses knowledge of the dark secrets behind Nexus Corp. He serves as a mentor to Elara, pushing her to confront the truths about her past and the implications of her work.\"\n    },\n    {\n      \"name\": \"Maya Finch\",\n      \"age\": 60,\n      \"gender\": \"female\",\n      \"role\": \"Elara's Mother\",\n      \"biography\": \"Maya is a renowned psychologist who disappeared under mysterious circumstances. Her legacy and work on memory therapy provide the foundation for Elara's career, and discovering her fate becomes a driving force for Elara's journey.\"\n    }\n  ],\n  \"plot\": \"As Elara begins to extract and relive memories from her childhood, she uncovers a hidden truth about her family's ties to Nexus Corp. Each memory reveals a piece of a larger puzzle, intertwining her past with the corporation's dark ambitions. With the help of Ari and Lucian, she must confront ethical dilemmas about the nature of memory and identity. The climax reveals that Elara herself was part of a corporate experiment designed to manipulate memories, forcing her to choose between reclaiming her true self or becoming a pawn in a game of power. The film culminates in a tense showdown at Nexus Corp, where Elara faces Malcolm, leading to a shocking revelation about the nature of reality itself.\",\n  \"setting\": \"The film is set in a near-future metropolis where neon lights and towering skyscrapers blend with decaying remnants of the past. The city is a character in itself, reflecting the duality of progress and loss, with hidden underground networks contrasting against the sterile corporate environments of Nexus Corp.\",\n  \"style\": \"The narrative utilizes a non-linear structure, weaving between past and present through visually striking memory sequences. Each memory is depicted with distinct color palettes and styles, creating a dreamlike quality that immerses the audience in Elara's emotional landscape. The film employs practical effects and innovative digital techniques to represent the extraction and recreation of memories.\",\n  \"tone\": \"The tone is a blend of introspective drama and thrilling science fiction, exploring deep philosophical questions about memory, identity, and morality while maintaining an engaging pace and tension throughout.\",\n  \"budget\": 20\n}"}
{"input": "You are a visionary film creator known for generating unique, thought-provoking movie concepts. Create an original film idea that challenges conventions and captivates audiences.\n### Instructions:\n1. Create a bold, innovative concept that hasn't been seen before in cinema.\n2. Develop 2-5 complex characters with compelling motivations and internal conflicts.\n3. The plot should feature unexpected twists and meaningful themes.\n4. The setting should be vivid and contribute to the story's atmosphere.\n5. Consider unique style elements (e.g., narrative structure, visual approach).\n6. The tone should be consistent and serve the story's purpose.\n7. Ensure the budget is realistic for the scope of the film.\n\n### Format Instructions:\n1. Do NOT include headers, comments, or any additional text—only generate the JSON file.\n2. Strictly adhere to the following JSON format:\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {\"properties\": {\"foo\": {\"title\": \"Foo\", \"description\": \"a list of strings\", \"type\": \"array\", \"items\": {\"type\": \"string\"}}}, \"required\": [\"foo\"]}\nthe object {\"foo\": [\"bar\", \"baz\"]} is a well-formatted instance of the schema. The object {\"properties\": {\"foo\": [\"bar\", \"baz\"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{\"$defs\": {\"Character\": {\"properties\": {\"name\": {\"description\": \"Name of the character\", \"title\": \"Name\", \"type\": \"string\"}, \"age\": {\"description\": \"Age of the character\", \"title\": \"Age\", \"type\": \"integer\"}, \"gender\": {\"allOf\": [{\"$ref\": \"#/$defs/Gender\"}], \"description\": \"Gender of the character\"}, \"role\": {\"description\": \"Role of the character\", \"title\": \"Role\", \"type\": \"string\"}, \"biography\": {\"description\": \"Biography of the character\", \"title\": \"Biography\", \"type\": \"string\"}}, \"required\": [\"name\", \"age\", \"gender\", \"role\", \"biography\"], \"title\": \"Character\", \"type\": \"object\"}, \"Gender\": {\"enum\": [\"male\", \"female\", \"other\"], \"title\": \"Gender\", \"type\": \"string\"}, \"Genre\": {\"enum\": [\"action\", \"comedy\", \"drama\", \"horror\", \"mystery\", \"romance\", \"science_fiction\", \"thriller\"], \"title\": \"Genre\", \"type\": \"string\"}}, \"properties\": {\"genre\": {\"allOf\": [{\"$ref\": \"#/$defs/Genre\"}], \"description\": \"Genre of the film\"}, \"title\": {\"description\": \"Title of the film\", \"title\": \"Title\", \"type\": \"string\"}, \"description\": {\"description\": \"Description of the film\", \"title\": \"Description\", \"type\": \"string\"}, \"characters\": {\"description\": \"Characters of the film\", \"items\": {\"$ref\": \"#/$defs/Character\"}, \"maxItems\": 5, \"minItems\": 1, \"title\": \"Characters\", \"type\": \"array\"}, \"plot\": {\"description\": \"Plot of the film\", \"title\": \"Plot\", \"type\": \"string\"}, \"setting\": {\"description\": \"Setting of the film\", \"title\": \"Setting\", \"type\": \"string\"}, \"style\": {\"description\": \"Style of the film\", \"title\": \"Style\", \"type\": \"string\"}, \"tone\": {\"description\": \"Tone of the film\", \"title\": \"Tone\", \"type\": \"string\"}, \"budget\": {\"description\": \"Budget of the film\", \"title\": \"Budget\", \"type\": \"integer\"}}, \"required\": [\"genre\", \"title\", \"description\", \"characters\", \"plot\", \"setting\", \"style\", \"tone\", \"budget\"]}\n```", "output": "{\n  \"genre\": \"science_fiction\",\n  \"title\": \"Echoes of Tomorrow\",\n  \"description\": \"In a not-so-distant future where memories can be purchased, a memory dealer struggles with the ethical implications of her business as she becomes embroiled in a conspiracy that could alter the fabric of reality itself.\",\n  \"characters\": [\n    {\n      \"name\": \"Mira Solis\",\n      \"age\": 34,\n      \"gender\": \"female\",\n      \"role\": \"Memory Dealer\",\n      \"biography\": \"A skilled memory dealer who sells curated experiences to clients. Haunted by her past and the memories she has sold, she grapples with the morality of her profession and seeks redemption.\"\n    },\n    {\n      \"name\": \"Theo Maddox\",\n      \"age\": 40,\n      \"gender\": \"male\",\n      \"role\": \"Corporate Spy\",\n      \"biography\": \"A corporate spy working for a powerful tech company. Driven by ambition, he initially seeks to exploit Mira's talents but finds himself questioning his own motives as he develops feelings for her.\"\n    },\n    {\n      \"name\": \"Juno\",\n      \"age\": 28,\n      \"gender\": \"other\",\n      \"role\": \"Memory Architect\",\n      \"biography\": \"A genius memory architect who creates custom memories for clients. Juno struggles with their own identity and the impact of memories on personal truth, often caught between aiding Mira and their own ethical dilemmas.\"\n    },\n    {\n      \"name\": \"Eliot\",\n      \"age\": 50,\n      \"gender\": \"male\",\n      \"role\": \"Regulator\",\n      \"biography\": \"A government official tasked with regulating the memory trade. Eliot is disillusioned with the system he serves and seeks to expose corruption, finding an unlikely ally in Mira.\"\n    }\n  ],\n  \"plot\": \"Mira discovers a series of glitches in the memories she sells, leading her to investigate a conspiracy involving powerful corporations manipulating memories for control. As she and Theo delve deeper, they uncover a plot to erase dissent by altering the collective memory of society. With Juno's help, they must navigate a treacherous world where the line between reality and memory blurs, forcing them to confront their own pasts and the nature of truth itself.\",\n  \"setting\": \"A sprawling, neon-lit metropolis in the year 2075, where towering skyscrapers coexist with dark alleyways. The city is divided into zones, from the affluent Memory District, where high-end memories are sold, to the underground markets where illicit memories are traded. The atmosphere is a blend of vibrant colors and shadowy corners, reflecting the duality of the memory trade.\",\n  \"style\": \"The film employs a non-linear narrative structure, weaving between past and present memories. Visually, it utilizes a mix of sleek, futuristic aesthetics with gritty realism, complemented by a dynamic score that shifts with the emotional tone of the scenes.\",\n  \"tone\": \"The tone is introspective and suspenseful, blending moments of hope and despair as characters confront their inner demons and the consequences of their choices.\",\n  \"budget\": 20000000\n}"}
{"input": "You are a visionary film creator known for generating unique, thought-provoking movie concepts. Create an original film idea that challenges conventions and captivates audiences.\n### Instructions:\n1. Create a bold, innovative concept that hasn't been seen before in cinema.\n2. Develop 2-5 complex characters with compelling motivations and internal conflicts.\n3. The plot should feature unexpected twists and meaningful themes.\n4. The setting should be vivid and contribute to the story's atmosphere.\n5. Consider unique style elements (e.g., narrative structure, visual approach).\n6. The tone should be consistent and serve the story's purpose.\n7. Ensure the budget is realistic for the scope of the film.\n\n### Format Instructions:\n1. Do NOT include headers, comments, or any additional text—only generate the JSON file.\n2. Strictly adhere to the following JSON format:\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {\"properties\": {\"foo\": {\"title\": \"Foo\", \"description\": \"a list of strings\", \"type\": \"array\", \"items\": {\"type\": \"string\"}}}, \"required\": [\"foo\"]}\nthe object {\"foo\": [\"bar\", \"baz\"]} is a well-formatted instance of the schema. The object {\"properties\": {\"foo\": [\"bar\", \"baz\"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{\"$defs\": {\"Character\": {\"properties\": {\"name\": {\"description\": \"Name of the character\", \"title\": \"Name\", \"type\": \"string\"}, \"age\": {\"description\": \"Age of the character\", \"title\": \"Age\", \"type\": \"integer\"}, \"gender\": {\"allOf\": [{\"$ref\": \"#/$defs/Gender\"}], \"description\": \"Gender of the character\"}, \"role\": {\"description\": \"Role of the character\", \"title\": \"Role\", \"type\": \"string\"}, \"biography\": {\"description\": \"Biography of the character\", \"title\": \"Biography\", \"type\": \"string\"}}, \"required\": [\"name\", \"age\", \"gender\", \"role\", \"biography\"], \"title\": \"Character\", \"type\": \"object\"}, \"Gender\": {\"enum\": [\"male\", \"female\", \"other\"], \"title\": \"Gender\", \"type\": \"string\"}, \"Genre\": {\"enum\": [\"action\", \"comedy\", \"drama\", \"horror\", \"mystery\", \"romance\", \"science_fiction\", \"thriller\"], \"title\": \"Genre\", \"type\": \"string\"}}, \"properties\": {\"genre\": {\"allOf\": [{\"$ref\": \"#/$defs/Genre\"}], \"description\": \"Genre of the film\"}, \"title\": {\"description\": \"Title of the film\", \"title\": \"Title\", \"type\": \"string\"}, \"description\": {\"description\": \"Description of the film\", \"title\": \"Description\", \"type\": \"string\"}, \"characters\": {\"description\": \"Characters of the film\", \"items\": {\"$ref\": \"#/$defs/Character\"}, \"maxItems\": 5, \"minItems\": 1, \"title\": \"Characters\", \"type\": \"array\"}, \"plot\": {\"description\": \"Plot of the film\", \"title\": \"Plot\", \"type\": \"string\"}, \"setting\": {\"description\": \"Setting of the film\", \"title\": \"Setting\", \"type\": \"string\"}, \"style\": {\"description\": \"Style of the film\", \"title\": \"Style\", \"type\": \"string\"}, \"tone\": {\"description\": \"Tone of the film\", \"title\": \"Tone\", \"type\": \"string\"}, \"budget\": {\"description\": \"Budget of the film\", \"title\": \"Budget\", \"type\": \"integer\"}}, \"required\": [\"genre\", \"title\", \"description\", \"characters\", \"plot\", \"setting\", \"style\", \"tone\", \"budget\"]}\n```", "output": "{\n  \"genre\": \"science_fiction\",\n  \"title\": \"Echoes of Tomorrow\",\n  \"description\": \"In a future where memories can be purchased and sold, a memory thief discovers a conspiracy that could alter the fabric of reality itself. As she navigates a world of deceit and manipulation, she must confront her own past and the memories she has stolen.\",\n  \"characters\": [\n    {\n      \"name\": \"Lila Grant\",\n      \"age\": 32,\n      \"gender\": \"female\",\n      \"role\": \"Memory Thief\",\n      \"biography\": \"Once a brilliant neuroscientist, Lila turned to memory theft after a tragic accident claimed her family. Haunted by her past, she now steals memories to feel alive but struggles with the guilt of erasing others' identities.\"\n    },\n    {\n      \"name\": \"Marcus Hale\",\n      \"age\": 45,\n      \"gender\": \"male\",\n      \"role\": \"Corporate Executive\",\n      \"biography\": \"A ruthless executive at the memory corporation, Marcus is driven by power and control. However, his ambition masks a deep-seated fear of inadequacy stemming from his childhood, leading him to take extreme measures to maintain his status.\"\n    },\n    {\n      \"name\": \"Tara Kim\",\n      \"age\": 28,\n      \"gender\": \"female\",\n      \"role\": \"Memory Broker\",\n      \"biography\": \"Tara is a savvy memory broker who sells and trades memories on the black market. She is fiercely independent and hides her vulnerability behind a tough exterior, but her loyalty to Lila complicates her business dealings.\"\n    },\n    {\n      \"name\": \"Eli Roth\",\n      \"age\": 50,\n      \"gender\": \"male\",\n      \"role\": \"Ex-Police Detective\",\n      \"biography\": \"Once a dedicated detective, Eli now works as a private investigator specializing in memory-related crimes. He is driven by a desire for justice and redemption after a botched case cost him his career and family.\"\n    }\n  ],\n  \"plot\": \"Lila's life as a memory thief spirals out of control when she stumbles upon a conspiracy involving the manipulation of memories to control the populace. As she delves deeper, she uncovers that her own traumatic past is intertwined with the corporate machinations of Marcus, who seeks to erase any dissent through memory control. With the help of Tara, who has her own agenda, and Eli, who is seeking redemption, Lila must confront her demons and fight back against the system. The climax reveals that the memories Lila has been stealing hold the key to a larger truth about humanity's collective consciousness, challenging the very essence of identity and reality.\",\n  \"setting\": \"The film is set in a dystopian near-future city, characterized by towering neon skyscrapers and dark alleys filled with memory kiosks. The atmosphere is a blend of high-tech glamour and gritty underbelly, reflecting the stark contrast between the wealthy elite and the struggling masses. The city pulses with the hum of technology and the haunting echoes of lost memories.\",\n  \"style\": \"The film employs a non-linear narrative structure, interspersing Lila's present with flashbacks of her stolen memories. Visual motifs of fragmented memories and distorted realities create an immersive experience. The cinematography uses contrasting color palettes to differentiate between the sterile corporate world and the vibrant yet chaotic underground scene.\",\n  \"tone\": \"The tone is dark and introspective, exploring themes of identity, loss, and the ethics of memory manipulation. It balances moments of tension and suspense with emotional depth, inviting the audience to reflect on the nature of their own memories.\",\n  \"budget\": 15\n}"}
{"input": "You are a travel itinerary planner. Create a detailed travel itinerary that maximizes the traveler's experience.\n### Instructions:\n1. Plan activities that are logistically feasible and time-appropriate.\n2. Include specific start and end times for each activity.\n3. Consider travel time between locations.\n4. Include various modes of transportation when needed.\n5. Be realistic with timing and costs.\n6. Ensure activities are appropriate for the destination.\n\n### Format Instructions:\n1. Do NOT include headers, comments, or any additional text—only generate the JSON file.\n2. Strictly adhere to the following JSON format:\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {\"properties\": {\"foo\": {\"title\": \"Foo\", \"description\": \"a list of strings\", \"type\": \"array\", \"items\": {\"type\": \"string\"}}}, \"required\": [\"foo\"]}\nthe object {\"foo\": [\"bar\", \"baz\"]} is a well-formatted instance of the schema. The object {\"properties\": {\"foo\": [\"bar\", \"baz\"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{\"$defs\": {\"Activity\": {\"properties\": {\"name\": {\"description\": \"Name of the activity\", \"title\": \"Name\", \"type\": \"string\"}, \"start_time\": {\"description\": \"Start time of the activity\", \"title\": \"Start Time\", \"type\": \"string\"}, \"end_time\": {\"description\": \"End time of the activity\", \"title\": \"End Time\", \"type\": \"string\"}, \"location\": {\"description\": \"Location of the activity\", \"title\": \"Location\", \"type\": \"string\"}, \"cost\": {\"anyOf\": [{\"type\": \"number\"}, {\"type\": \"null\"}], \"default\": null, \"description\": \"Cost of the activity\", \"title\": \"Cost\"}}, \"required\": [\"name\", \"start_time\", \"end_time\", \"location\"], \"title\": \"Activity\", \"type\": \"object\"}, \"Transport\": {\"properties\": {\"mode\": {\"description\": \"Mode of the transport\", \"title\": \"Mode\", \"type\": \"string\"}, \"departure\": {\"description\": \"Departure of the transport\", \"title\": \"Departure\", \"type\": \"string\"}, \"arrival\": {\"description\": \"Arrival of the transport\", \"title\": \"Arrival\", \"type\": \"string\"}, \"cost\": {\"anyOf\": [{\"type\": \"number\"}, {\"type\": \"null\"}], \"default\": null, \"description\": \"Cost of the transport\", \"title\": \"Cost\"}}, \"required\": [\"mode\", \"departure\", \"arrival\"], \"title\": \"Transport\", \"type\": \"object\"}}, \"properties\": {\"traveler_name\": {\"description\": \"Name of the traveler\", \"title\": \"Traveler Name\", \"type\": \"string\"}, \"destination\": {\"description\": \"Destination of the itinerary\", \"title\": \"Destination\", \"type\": \"string\"}, \"start_date\": {\"description\": \"Start date of the itinerary\", \"title\": \"Start Date\", \"type\": \"string\"}, \"end_date\": {\"description\": \"End date of the itinerary\", \"title\": \"End Date\", \"type\": \"string\"}, \"activities\": {\"description\": \"Activities of the itinerary\", \"items\": {\"$ref\": \"#/$defs/Activity\"}, \"title\": \"Activities\", \"type\": \"array\"}, \"transports\": {\"description\": \"Transports of the itinerary\", \"items\": {\"$ref\": \"#/$defs/Transport\"}, \"title\": \"Transports\", \"type\": \"array\"}}, \"required\": [\"traveler_name\", \"destination\", \"start_date\", \"end_date\", \"activities\", \"transports\"]}\n```", "output": "{\n  \"traveler_name\": \"John Doe\",\n  \"destination\": \"Rome, Italy\",\n  \"start_date\": \"2023-10-01\",\n  \"end_date\": \"2023-10-05\",\n  \"activities\": [\n    {\n      \"name\": \"Colosseum Tour\",\n      \"start_time\": \"09:00\",\n      \"end_time\": \"11:00\",\n      \"location\": \"Colosseum, Rome\",\n      \"cost\": 30\n    },\n    {\n      \"name\": \"Roman Forum Exploration\",\n      \"start_time\": \"11:15\",\n      \"end_time\": \"12:30\",\n      \"location\": \"Roman Forum, Rome\",\n      \"cost\": null\n    },\n    {\n      \"name\": \"Lunch at Trattoria\",\n      \"start_time\": \"12:45\",\n      \"end_time\": \"14:00\",\n      \"location\": \"Trattoria Da Enzo, Rome\",\n      \"cost\": 25\n    },\n    {\n      \"name\": \"Visit the Vatican Museums\",\n      \"start_time\": \"14:30\",\n      \"end_time\": \"17:00\",\n      \"location\": \"Vatican City\",\n      \"cost\": 35\n    },\n    {\n      \"name\": \"St. Peter's Basilica\",\n      \"start_time\": \"17:15\",\n      \"end_time\": \"18:30\",\n      \"location\": \"Vatican City\",\n      \"cost\": null\n    },\n    {\n      \"name\": \"Dinner at Osteria\",\n      \"start_time\": \"19:00\",\n      \"end_time\": \"20:30\",\n      \"location\": \"Osteria da Fortunato, Rome\",\n      \"cost\": 40\n    },\n    {\n      \"name\": \"Evening Walk at Trevi Fountain\",\n      \"start_time\": \"21:00\",\n      \"end_time\": \"22:00\",\n      \"location\": \"Trevi Fountain, Rome\",\n      \"cost\": null\n    }\n  ],\n  \"transports\": [\n    {\n      \"mode\": \"Walking\",\n      \"departure\": \"Colosseum\",\n      \"arrival\": \"Roman Forum\",\n      \"cost\": null\n    },\n    {\n      \"mode\": \"Walking\",\n      \"departure\": \"Roman Forum\",\n      \"arrival\": \"Trattoria Da Enzo\",\n      \"cost\": null\n    },\n    {\n      \"mode\": \"Walking\",\n      \"departure\": \"Trattoria Da Enzo\",\n      \"arrival\": \"Vatican Museums\",\n      \"cost\": null\n    },\n    {\n      \"mode\": \"Walking\",\n      \"departure\": \"Vatican Museums\",\n      \"arrival\": \"St. Peter's Basilica\",\n      \"cost\": null\n    },\n    {\n      \"mode\": \"Walking\",\n      \"departure\": \"St. Peter's Basilica\",\n      \"arrival\": \"Osteria da Fortunato\",\n      \"cost\": null\n    },\n    {\n      \"mode\": \"Walking\",\n      \"departure\": \"Osteria da Fortunato\",\n      \"arrival\": \"Trevi Fountain\",\n      \"cost\": null\n    }\n  ]\n}"}
{"input": "You are a travel itinerary planner. Create a detailed travel itinerary that maximizes the traveler's experience.\n### Instructions:\n1. Plan activities that are logistically feasible and time-appropriate.\n2. Include specific start and end times for each activity.\n3. Consider travel time between locations.\n4. Include various modes of transportation when needed.\n5. Be realistic with timing and costs.\n6. Ensure activities are appropriate for the destination.\n\n### Format Instructions:\n1. Do NOT include headers, comments, or any additional text—only generate the JSON file.\n2. Strictly adhere to the following JSON format:\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {\"properties\": {\"foo\": {\"title\": \"Foo\", \"description\": \"a list of strings\", \"type\": \"array\", \"items\": {\"type\": \"string\"}}}, \"required\": [\"foo\"]}\nthe object {\"foo\": [\"bar\", \"baz\"]} is a well-formatted instance of the schema. The object {\"properties\": {\"foo\": [\"bar\", \"baz\"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{\"$defs\": {\"Activity\": {\"properties\": {\"name\": {\"description\": \"Name of the activity\", \"title\": \"Name\", \"type\": \"string\"}, \"start_time\": {\"description\": \"Start time of the activity\", \"title\": \"Start Time\", \"type\": \"string\"}, \"end_time\": {\"description\": \"End time of the activity\", \"title\": \"End Time\", \"type\": \"string\"}, \"location\": {\"description\": \"Location of the activity\", \"title\": \"Location\", \"type\": \"string\"}, \"cost\": {\"anyOf\": [{\"type\": \"number\"}, {\"type\": \"null\"}], \"default\": null, \"description\": \"Cost of the activity\", \"title\": \"Cost\"}}, \"required\": [\"name\", \"start_time\", \"end_time\", \"location\"], \"title\": \"Activity\", \"type\": \"object\"}, \"Transport\": {\"properties\": {\"mode\": {\"description\": \"Mode of the transport\", \"title\": \"Mode\", \"type\": \"string\"}, \"departure\": {\"description\": \"Departure of the transport\", \"title\": \"Departure\", \"type\": \"string\"}, \"arrival\": {\"description\": \"Arrival of the transport\", \"title\": \"Arrival\", \"type\": \"string\"}, \"cost\": {\"anyOf\": [{\"type\": \"number\"}, {\"type\": \"null\"}], \"default\": null, \"description\": \"Cost of the transport\", \"title\": \"Cost\"}}, \"required\": [\"mode\", \"departure\", \"arrival\"], \"title\": \"Transport\", \"type\": \"object\"}}, \"properties\": {\"traveler_name\": {\"description\": \"Name of the traveler\", \"title\": \"Traveler Name\", \"type\": \"string\"}, \"destination\": {\"description\": \"Destination of the itinerary\", \"title\": \"Destination\", \"type\": \"string\"}, \"start_date\": {\"description\": \"Start date of the itinerary\", \"title\": \"Start Date\", \"type\": \"string\"}, \"end_date\": {\"description\": \"End date of the itinerary\", \"title\": \"End Date\", \"type\": \"string\"}, \"activities\": {\"description\": \"Activities of the itinerary\", \"items\": {\"$ref\": \"#/$defs/Activity\"}, \"title\": \"Activities\", \"type\": \"array\"}, \"transports\": {\"description\": \"Transports of the itinerary\", \"items\": {\"$ref\": \"#/$defs/Transport\"}, \"title\": \"Transports\", \"type\": \"array\"}}, \"required\": [\"traveler_name\", \"destination\", \"start_date\", \"end_date\", \"activities\", \"transports\"]}\n```", "output": "{\n  \"traveler_name\": \"John Doe\",\n  \"destination\": \"Barcelona, Spain\",\n  \"start_date\": \"2023-10-01\",\n  \"end_date\": \"2023-10-07\",\n  \"activities\": [\n    {\n      \"name\": \"Visit Sagrada Familia\",\n      \"start_time\": \"2023-10-01T09:00:00\",\n      \"end_time\": \"2023-10-01T11:00:00\",\n      \"location\": \"Sagrada Familia, Barcelona\",\n      \"cost\": 26\n    },\n    {\n      \"name\": \"Explore Park Güell\",\n      \"start_time\": \"2023-10-01T11:30:00\",\n      \"end_time\": \"2023-10-01T13:30:00\",\n      \"location\": \"Park Güell, Barcelona\",\n      \"cost\": 10\n    },\n    {\n      \"name\": \"Lunch at La Boqueria Market\",\n      \"start_time\": \"2023-10-01T14:00:00\",\n      \"end_time\": \"2023-10-01T15:00:00\",\n      \"location\": \"La Boqueria Market, Barcelona\",\n      \"cost\": 20\n    },\n    {\n      \"name\": \"Visit Gothic Quarter\",\n      \"start_time\": \"2023-10-01T15:30:00\",\n      \"end_time\": \"2023-10-01T17:30:00\",\n      \"location\": \"Gothic Quarter, Barcelona\",\n      \"cost\": null\n    },\n    {\n      \"name\": \"Dinner at El Xampanyet\",\n      \"start_time\": \"2023-10-01T18:00:00\",\n      \"end_time\": \"2023-10-01T19:30:00\",\n      \"location\": \"El Xampanyet, Barcelona\",\n      \"cost\": 35\n    },\n    {\n      \"name\": \"Flamenco Show\",\n      \"start_time\": \"2023-10-01T20:00:00\",\n      \"end_time\": \"2023-10-01T21:30:00\",\n      \"location\": \"Tablao Flamenco Cordobes, Barcelona\",\n      \"cost\": 50\n    },\n    {\n      \"name\": \"Bike Tour of the City\",\n      \"start_time\": \"2023-10-02T10:00:00\",\n      \"end_time\": \"2023-10-02T12:00:00\",\n      \"location\": \"Barcelona\",\n      \"cost\": 30\n    },\n    {\n      \"name\": \"Visit Picasso Museum\",\n      \"start_time\": \"2023-10-02T12:30:00\",\n      \"end_time\": \"2023-10-02T14:00:00\",\n      \"location\": \"Picasso Museum, Barcelona\",\n      \"cost\": 12\n    },\n    {\n      \"name\": \"Lunch at Café de l'Opera\",\n      \"start_time\": \"2023-10-02T14:15:00\",\n      \"end_time\": \"2023-10-02T15:15:00\",\n      \"location\": \"Café de l'Opera, Barcelona\",\n      \"cost\": 25\n    },\n    {\n      \"name\": \"Visit Casa Batlló\",\n      \"start_time\": \"2023-10-02T15:30:00\",\n      \"end_time\": \"2023-10-02T17:00:00\",\n      \"location\": \"Casa Batlló, Barcelona\",\n      \"cost\": 35\n    },\n    {\n      \"name\": \"Dinner at Cervecería Catalana\",\n      \"start_time\": \"2023-10-02T19:00:00\",\n      \"end_time\": \"2023-10-02T20:30:00\",\n      \"location\": \"Cervecería Catalana, Barcelona\",\n      \"cost\": 40\n    },\n    {\n      \"name\": \"Relax at Barceloneta Beach\",\n      \"start_time\": \"2023-10-03T10:00:00\",\n      \"end_time\": \"2023-10-03T12:00:00\",\n      \"location\": \"Barceloneta Beach, Barcelona\",\n      \"cost\": null\n    },\n    {\n      \"name\": \"Lunch at Chiringuito de El Xiringuito\",\n      \"start_time\": \"2023-10-03T12:30:00\",\n      \"end_time\": \"2023-10-03T13:30:00\",\n      \"location\": \"Chiringuito de El Xiringuito, Barcelona\",\n      \"cost\": 30\n    },\n    {\n      \"name\": \"Visit Montjuïc Hill\",\n      \"start_time\": \"2023-10-03T14:00:00\",\n      \"end_time\": \"2023-10-03T16:00:00\",\n      \"location\": \"Montjuïc Hill, Barcelona\",\n      \"cost\": null\n    },\n    {\n      \"name\": \"Dinner at Tickets\",\n      \"start_time\": \"2023-10-03T19:00:00\",\n      \"end_time\": \"2023-10-03T21:00:00\",\n      \"location\": \"Tickets, Barcelona\",\n      \"cost\": 100\n    },\n    {\n      \"name\": \"Visit Camp Nou\",\n      \"start_time\": \"2023-10-04T10:00:00\",\n      \"end_time\": \"2023-10-04T12:00:00\",\n      \"location\": \"Camp Nou, Barcelona\",\n      \"cost\": 30\n    },\n    {\n      \"name\": \"Lunch at La Paradeta\",\n      \"start_time\": \"2023-10-04T12:30:00\",\n      \"end_time\": \"2023-10-04T13:30:00\",\n      \"location\": \"La Paradeta, Barcelona\",\n      \"cost\": 25\n    },\n    {\n      \"name\": \"Shopping at Passeig de Gràcia\",\n      \"start_time\": \"2023-10-04T14:00:00\",\n      \"end_time\": \"2023-10-04T16:00:00\",\n      \"location\": \"Passeig de Gràcia, Barcelona\",\n      \"cost\": null\n    },\n    {\n      \"name\": \"Dinner at La Fonda\",\n      \"start_time\": \"2023-10-04T19:00:00\",\n      \"end_time\": \"2023-10-04T20:30:00\",\n      \"location\": \"La Fonda, Barcelona\",\n      \"cost\": 40\n    },\n    {\n      \"name\": \"Visit the Magic Fountain Show\",\n      \"start_time\": \"2023-10-04T21:00:00\",\n      \"end_time\": \"2023-10-04T22:00:00\",\n      \"location\": \"Magic Fountain of Montjuïc, Barcelona\",\n      \"cost\": null\n    },\n    {\n      \"name\": \"Day Trip to Montserrat\",\n      \"start_time\": \"2023-10-05T08:00:00\",\n      \"end_time\": \"2023-10-05T17:00:00\",\n      \"location\": \"Montserrat\",\n      \"cost\": 50\n    },\n    {\n      \"name\": \"Dinner at Can Culleretes\",\n      \"start_time\": \"2023-10-05T19:00:00\",\n      \"end_time\": \"2023-10-05T20:30:00\",\n      \"location\": \"Can Culleretes, Barcelona\",\n      \"cost\": 45\n    },\n    {\n      \"name\": \"Visit the National Art Museum of Catalonia\",\n      \"start_time\": \"2023-10-06T10:00:00\",\n      \"end_time\": \"2023-10-06T12:00:00\",\n      \"location\": \"National Art Museum of Catalonia, Barcelona\",\n      \"cost\": 12\n    },\n    {\n      \"name\": \"Lunch at La Cova Fumada\",\n      \"start_time\": \"2023-10-06T12:30:00\",\n      \"end_time\": \"2023-10-06T13:30:00\",\n      \"location\": \"La Cova Fumada, Barcelona\",\n      \"cost\": 20\n    },\n    {\n      \"name\": \"Visit the Barcelona Cathedral\",\n      \"start_time\": \"2023-10-06T14:00:00\",\n      \"end_time\": \"2023-10-06T15:30:00\",\n      \"location\": \"Barcelona Cathedral, Barcelona\",\n      \"cost\": null\n    },\n    {\n      \"name\": \"Shopping at El Raval\",\n      \"start_time\": \"2023-10-06T16:00:00\",\n      \"end_time\": \"2023-10-06T17:30:00\",\n      \"location\": \"El Raval, Barcelona\",\n      \"cost\": null\n    },\n    {\n      \"name\": \"Farewell Dinner at Bodega 1900\",\n      \"start_time\": \"2023-10-06T19:00:00\",\n      \"end_time\": \"2023-10-06T21:00:00\",\n      \"location\": \"Bodega 1900, Barcelona\",\n      \"cost\": 60\n    }\n  ],\n  \"transports\": [\n    {\n      \"mode\": \"Metro\",\n      \"departure\": \"2023-10-01T08:30:00\",\n      \"arrival\": \"2023-10-"}
{"input": "You are a professional chef creating detailed recipes. Create a complete recipe with precise measurements and clear instructions.\n### Instructions:\n1. Provide a clear, descriptive title for the recipe.\n2. List all ingredients with exact quantities and units.\n3. Write step-by-step cooking instructions in a logical order.\n4. Include total cooking time in minutes.\n5. Specify the cuisine type.\n6. Include nutrition facts when possible (calories, protein, fat, carbs).\n\n### Format Instructions:\n1. Do NOT include headers, comments, or any additional text—only generate the JSON file.\n2. Strictly adhere to the following JSON format:\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {\"properties\": {\"foo\": {\"title\": \"Foo\", \"description\": \"a list of strings\", \"type\": \"array\", \"items\": {\"type\": \"string\"}}}, \"required\": [\"foo\"]}\nthe object {\"foo\": [\"bar\", \"baz\"]} is a well-formatted instance of the schema. The object {\"properties\": {\"foo\": [\"bar\", \"baz\"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{\"$defs\": {\"Ingredient\": {\"properties\": {\"name\": {\"title\": \"Name\", \"type\": \"string\"}, \"quantity\": {\"title\": \"Quantity\", \"type\": \"number\"}, \"unit\": {\"title\": \"Unit\", \"type\": \"string\"}}, \"required\": [\"name\", \"quantity\", \"unit\"], \"title\": \"Ingredient\", \"type\": \"object\"}, \"Instruction\": {\"properties\": {\"step_number\": {\"title\": \"Step Number\", \"type\": \"integer\"}, \"description\": {\"title\": \"Description\", \"type\": \"string\"}}, \"required\": [\"step_number\", \"description\"], \"title\": \"Instruction\", \"type\": \"object\"}, \"NutritionFacts\": {\"properties\": {\"calories\": {\"title\": \"Calories\", \"type\": \"number\"}, \"protein\": {\"title\": \"Protein\", \"type\": \"number\"}, \"fat\": {\"title\": \"Fat\", \"type\": \"number\"}, \"carbs\": {\"title\": \"Carbs\", \"type\": \"number\"}}, \"required\": [\"calories\", \"protein\", \"fat\", \"carbs\"], \"title\": \"NutritionFacts\", \"type\": \"object\"}}, \"properties\": {\"title\": {\"title\": \"Title\", \"type\": \"string\"}, \"cuisine\": {\"title\": \"Cuisine\", \"type\": \"string\"}, \"ingredients\": {\"items\": {\"$ref\": \"#/$defs/Ingredient\"}, \"title\": \"Ingredients\", \"type\": \"array\"}, \"instructions\": {\"items\": {\"$ref\": \"#/$defs/Instruction\"}, \"title\": \"Instructions\", \"type\": \"array\"}, \"total_time_minutes\": {\"title\": \"Total Time Minutes\", \"type\": \"integer\"}, \"nutrition\": {\"anyOf\": [{\"$ref\": \"#/$defs/NutritionFacts\"}, {\"type\": \"null\"}], \"default\": null}}, \"required\": [\"title\", \"cuisine\", \"ingredients\", \"instructions\", \"total_time_minutes\"]}\n```", "output": "{\n  \"title\": \"Creamy Garlic Tuscan Chicken\",\n  \"cuisine\": \"Italian\",\n  \"ingredients\": [\n    {\n      \"name\": \"Chicken breasts\",\n      \"quantity\": 4,\n      \"unit\": \"pieces\"\n    },\n    {\n      \"name\": \"Olive oil\",\n      \"quantity\": 2,\n      \"unit\": \"tablespoons\"\n    },\n    {\n      \"name\": \"Garlic, minced\",\n      \"quantity\": 6,\n      \"unit\": \"cloves\"\n    },\n    {\n      \"name\": \"Heavy cream\",\n      \"quantity\": 1,\n      \"unit\": \"cup\"\n    },\n    {\n      \"name\": \"Parmesan cheese, grated\",\n      \"quantity\": 1,\n      \"unit\": \"cup\"\n    },\n    {\n      \"name\": \"Spinach, fresh\",\n      \"quantity\": 2,\n      \"unit\": \"cups\"\n    },\n    {\n      \"name\": \"Sun-dried tomatoes, chopped\",\n      \"quantity\": 1,\n      \"unit\": \"cup\"\n    },\n    {\n      \"name\": \"Italian seasoning\",\n      \"quantity\": 1,\n      \"unit\": \"teaspoon\"\n    },\n    {\n      \"name\": \"Salt\",\n      \"quantity\": 1,\n      \"unit\": \"teaspoon\"\n    },\n    {\n      \"name\": \"Black pepper\",\n      \"quantity\": 1,\n      \"unit\": \"teaspoon\"\n    }\n  ],\n  \"instructions\": [\n    {\n      \"step_number\": 1,\n      \"description\": \"Heat the olive oil in a large skillet over medium-high heat.\"\n    },\n    {\n      \"step_number\": 2,\n      \"description\": \"Season the chicken breasts with salt and black pepper on both sides.\"\n    },\n    {\n      \"step_number\": 3,\n      \"description\": \"Add the chicken breasts to the skillet and cook for about 6-7 minutes per side or until golden brown and cooked through. Remove the chicken from the skillet and set aside.\"\n    },\n    {\n      \"step_number\": 4,\n      \"description\": \"In the same skillet, add the minced garlic and sauté for about 30 seconds until fragrant.\"\n    },\n    {\n      \"step_number\": 5,\n      \"description\": \"Pour in the heavy cream, stirring to combine, and bring to a gentle simmer.\"\n    },\n    {\n      \"step_number\": 6,\n      \"description\": \"Add the grated Parmesan cheese, stirring until melted and the sauce thickens.\"\n    },\n    {\n      \"step_number\": 7,\n      \"description\": \"Stir in the spinach and sun-dried tomatoes, cooking until the spinach wilts.\"\n    },\n    {\n      \"step_number\": 8,\n      \"description\": \"Return the chicken to the skillet, spooning the sauce over the top. Sprinkle with Italian seasoning.\"\n    },\n    {\n      \"step_number\": 9,\n      \"description\": \"Cook for an additional 2-3 minutes until everything is heated through. Serve hot.\"\n    }\n  ],\n  \"total_time_minutes\": 30,\n  \"nutrition\": {\n    \"calories\": 590,\n    \"protein\": 45,\n    \"fat\": 40,\n    \"carbs\": 8\n  }\n}"}
{"input": "You are a professional chef creating detailed recipes. Create a complete recipe with precise measurements and clear instructions.\n### Instructions:\n1. Provide a clear, descriptive title for the recipe.\n2. List all ingredients with exact quantities and units.\n3. Write step-by-step cooking instructions in a logical order.\n4. Include total cooking time in minutes.\n5. Specify the cuisine type.\n6. Include nutrition facts when possible (calories, protein, fat, carbs).\n\n### Format Instructions:\n1. Do NOT include headers, comments, or any additional text—only generate the JSON file.\n2. Strictly adhere to the following JSON format:\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {\"properties\": {\"foo\": {\"title\": \"Foo\", \"description\": \"a list of strings\", \"type\": \"array\", \"items\": {\"type\": \"string\"}}}, \"required\": [\"foo\"]}\nthe object {\"foo\": [\"bar\", \"baz\"]} is a well-formatted instance of the schema. The object {\"properties\": {\"foo\": [\"bar\", \"baz\"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{\"$defs\": {\"Ingredient\": {\"properties\": {\"name\": {\"title\": \"Name\", \"type\": \"string\"}, \"quantity\": {\"title\": \"Quantity\", \"type\": \"number\"}, \"unit\": {\"title\": \"Unit\", \"type\": \"string\"}}, \"required\": [\"name\", \"quantity\", \"unit\"], \"title\": \"Ingredient\", \"type\": \"object\"}, \"Instruction\": {\"properties\": {\"step_number\": {\"title\": \"Step Number\", \"type\": \"integer\"}, \"description\": {\"title\": \"Description\", \"type\": \"string\"}}, \"required\": [\"step_number\", \"description\"], \"title\": \"Instruction\", \"type\": \"object\"}, \"NutritionFacts\": {\"properties\": {\"calories\": {\"title\": \"Calories\", \"type\": \"number\"}, \"protein\": {\"title\": \"Protein\", \"type\": \"number\"}, \"fat\": {\"title\": \"Fat\", \"type\": \"number\"}, \"carbs\": {\"title\": \"Carbs\", \"type\": \"number\"}}, \"required\": [\"calories\", \"protein\", \"fat\", \"carbs\"], \"title\": \"NutritionFacts\", \"type\": \"object\"}}, \"properties\": {\"title\": {\"title\": \"Title\", \"type\": \"string\"}, \"cuisine\": {\"title\": \"Cuisine\", \"type\": \"string\"}, \"ingredients\": {\"items\": {\"$ref\": \"#/$defs/Ingredient\"}, \"title\": \"Ingredients\", \"type\": \"array\"}, \"instructions\": {\"items\": {\"$ref\": \"#/$defs/Instruction\"}, \"title\": \"Instructions\", \"type\": \"array\"}, \"total_time_minutes\": {\"title\": \"Total Time Minutes\", \"type\": \"integer\"}, \"nutrition\": {\"anyOf\": [{\"$ref\": \"#/$defs/NutritionFacts\"}, {\"type\": \"null\"}], \"default\": null}}, \"required\": [\"title\", \"cuisine\", \"ingredients\", \"instructions\", \"total_time_minutes\"]}\n```", "output": "{\n  \"title\": \"Classic Beef Stroganoff\",\n  \"cuisine\": \"Russian\",\n  \"ingredients\": [\n    {\n      \"name\": \"Beef sirloin\",\n      \"quantity\": 1,\n      \"unit\": \"pound\"\n    },\n    {\n      \"name\": \"Mushrooms\",\n      \"quantity\": 8,\n      \"unit\": \"ounces\"\n    },\n    {\n      \"name\": \"Onion\",\n      \"quantity\": 1,\n      \"unit\": \"medium\"\n    },\n    {\n      \"name\": \"Garlic\",\n      \"quantity\": 2,\n      \"unit\": \"cloves\"\n    },\n    {\n      \"name\": \"Beef broth\",\n      \"quantity\": 2,\n      \"unit\": \"cups\"\n    },\n    {\n      \"name\": \"Sour cream\",\n      \"quantity\": 1,\n      \"unit\": \"cup\"\n    },\n    {\n      \"name\": \"Flour\",\n      \"quantity\": 2,\n      \"unit\": \"tablespoons\"\n    },\n    {\n      \"name\": \"Butter\",\n      \"quantity\": 3,\n      \"unit\": \"tablespoons\"\n    },\n    {\n      \"name\": \"Salt\",\n      \"quantity\": 1,\n      \"unit\": \"teaspoon\"\n    },\n    {\n      \"name\": \"Black pepper\",\n      \"quantity\": 1,\n      \"unit\": \"teaspoon\"\n    },\n    {\n      \"name\": \"Egg noodles\",\n      \"quantity\": 8,\n      \"unit\": \"ounces\"\n    },\n    {\n      \"name\": \"Parsley\",\n      \"quantity\": 2,\n      \"unit\": \"tablespoons\"\n    }\n  ],\n  \"instructions\": [\n    {\n      \"step_number\": 1,\n      \"description\": \"Slice the beef sirloin into thin strips and season with salt and black pepper.\"\n    },\n    {\n      \"step_number\": 2,\n      \"description\": \"In a large skillet, melt 1 tablespoon of butter over medium-high heat. Add the beef strips and cook until browned, about 5 minutes. Remove beef and set aside.\"\n    },\n    {\n      \"step_number\": 3,\n      \"description\": \"In the same skillet, add another tablespoon of butter. Add sliced onions and cook until translucent, about 3 minutes.\"\n    },\n    {\n      \"step_number\": 4,\n      \"description\": \"Add sliced mushrooms and minced garlic to the skillet. Cook until mushrooms are tender, about 5 minutes.\"\n    },\n    {\n      \"step_number\": 5,\n      \"description\": \"Sprinkle flour over the mushroom mixture and stir to combine. Cook for 1 minute to eliminate raw flour taste.\"\n    },\n    {\n      \"step_number\": 6,\n      \"description\": \"Slowly add beef broth while stirring constantly to avoid lumps. Bring to a simmer.\"\n    },\n    {\n      \"step_number\": 7,\n      \"description\": \"Reduce heat to low and stir in sour cream and the cooked beef. Allow to simmer for 5-10 minutes.\"\n    },\n    {\n      \"step_number\": 8,\n      \"description\": \"Meanwhile, cook egg noodles according to package instructions. Drain and set aside.\"\n    },\n    {\n      \"step_number\": 9,\n      \"description\": \"Serve the beef stroganoff over egg noodles and garnish with chopped parsley.\"\n    }\n  ],\n  \"total_time_minutes\": 45,\n  \"nutrition\": {\n    \"calories\": 650,\n    \"protein\": 42,\n    \"fat\": 34,\n    \"carbs\": 46\n  }\n}"}
{"input": "You are a professional chef creating detailed recipes. Create a complete recipe with precise measurements and clear instructions.\n### Instructions:\n1. Provide a clear, descriptive title for the recipe.\n2. List all ingredients with exact quantities and units.\n3. Write step-by-step cooking instructions in a logical order.\n4. Include total cooking time in minutes.\n5. Specify the cuisine type.\n6. Include nutrition facts when possible (calories, protein, fat, carbs).\n\n### Format Instructions:\n1. Do NOT include headers, comments, or any additional text—only generate the JSON file.\n2. Strictly adhere to the following JSON format:\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {\"properties\": {\"foo\": {\"title\": \"Foo\", \"description\": \"a list of strings\", \"type\": \"array\", \"items\": {\"type\": \"string\"}}}, \"required\": [\"foo\"]}\nthe object {\"foo\": [\"bar\", \"baz\"]} is a well-formatted instance of the schema. The object {\"properties\": {\"foo\": [\"bar\", \"baz\"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{\"$defs\": {\"Ingredient\": {\"properties\": {\"name\": {\"title\": \"Name\", \"type\": \"string\"}, \"quantity\": {\"title\": \"Quantity\", \"type\": \"number\"}, \"unit\": {\"title\": \"Unit\", \"type\": \"string\"}}, \"required\": [\"name\", \"quantity\", \"unit\"], \"title\": \"Ingredient\", \"type\": \"object\"}, \"Instruction\": {\"properties\": {\"step_number\": {\"title\": \"Step Number\", \"type\": \"integer\"}, \"description\": {\"title\": \"Description\", \"type\": \"string\"}}, \"required\": [\"step_number\", \"description\"], \"title\": \"Instruction\", \"type\": \"object\"}, \"NutritionFacts\": {\"properties\": {\"calories\": {\"title\": \"Calories\", \"type\": \"number\"}, \"protein\": {\"title\": \"Protein\", \"type\": \"number\"}, \"fat\": {\"title\": \"Fat\", \"type\": \"number\"}, \"carbs\": {\"title\": \"Carbs\", \"type\": \"number\"}}, \"required\": [\"calories\", \"protein\", \"fat\", \"carbs\"], \"title\": \"NutritionFacts\", \"type\": \"object\"}}, \"properties\": {\"title\": {\"title\": \"Title\", \"type\": \"string\"}, \"cuisine\": {\"title\": \"Cuisine\", \"type\": \"string\"}, \"ingredients\": {\"items\": {\"$ref\": \"#/$defs/Ingredient\"}, \"title\": \"Ingredients\", \"type\": \"array\"}, \"instructions\": {\"items\": {\"$ref\": \"#/$defs/Instruction\"}, \"title\": \"Instructions\", \"type\": \"array\"}, \"total_time_minutes\": {\"title\": \"Total Time Minutes\", \"type\": \"integer\"}, \"nutrition\": {\"anyOf\": [{\"$ref\": \"#/$defs/NutritionFacts\"}, {\"type\": \"null\"}], \"default\": null}}, \"required\": [\"title\", \"cuisine\", \"ingredients\", \"instructions\", \"total_time_minutes\"]}\n```", "output": "{\n  \"title\": \"Classic Spaghetti Carbonara\",\n  \"cuisine\": \"Italian\",\n  \"ingredients\": [\n    {\n      \"name\": \"spaghetti\",\n      \"quantity\": 400,\n      \"unit\": \"grams\"\n    },\n    {\n      \"name\": \"guanciale\",\n      \"quantity\": 150,\n      \"unit\": \"grams\"\n    },\n    {\n      \"name\": \"large eggs\",\n      \"quantity\": 4,\n      \"unit\": \"pieces\"\n    },\n    {\n      \"name\": \"Parmesan cheese\",\n      \"quantity\": 100,\n      \"unit\": \"grams\"\n    },\n    {\n      \"name\": \"black pepper\",\n      \"quantity\": 1,\n      \"unit\": \"teaspoon\"\n    },\n    {\n      \"name\": \"salt\",\n      \"quantity\": 1,\n      \"unit\": \"teaspoon\"\n    },\n    {\n      \"name\": \"olive oil\",\n      \"quantity\": 1,\n      \"unit\": \"tablespoon\"\n    }\n  ],\n  \"instructions\": [\n    {\n      \"step_number\": 1,\n      \"description\": \"Bring a large pot of salted water to a boil. Add the spaghetti and cook according to package instructions until al dente, usually about 8-10 minutes.\"\n    },\n    {\n      \"step_number\": 2,\n      \"description\": \"While the pasta is cooking, cut the guanciale into small strips or cubes.\"\n    },\n    {\n      \"step_number\": 3,\n      \"description\": \"In a large skillet over medium heat, add the olive oil and guanciale. Cook until the guanciale is crispy and golden brown, about 5-7 minutes. Remove from heat and set aside.\"\n    },\n    {\n      \"step_number\": 4,\n      \"description\": \"In a bowl, whisk together the eggs, grated Parmesan cheese, and black pepper until well combined.\"\n    },\n    {\n      \"step_number\": 5,\n      \"description\": \"Once the spaghetti is cooked, reserve about 1 cup of the pasta water, then drain the spaghetti.\"\n    },\n    {\n      \"step_number\": 6,\n      \"description\": \"Quickly add the hot spaghetti to the skillet with guanciale. Toss to combine.\"\n    },\n    {\n      \"step_number\": 7,\n      \"description\": \"Remove the skillet from heat, and add the egg and cheese mixture to the spaghetti, stirring quickly to create a creamy sauce. If needed, add reserved pasta water a little at a time until desired consistency is reached.\"\n    },\n    {\n      \"step_number\": 8,\n      \"description\": \"Serve immediately with extra Parmesan cheese and more black pepper if desired.\"\n    }\n  ],\n  \"total_time_minutes\": 30,\n  \"nutrition\": {\n    \"calories\": 650,\n    \"protein\": 28,\n    \"fat\": 30,\n    \"carbs\": 70\n  }\n}"}
{"input": "You are an event details extractor. Your task is to identify and extract event information from the given text.\n### Input:\nNone\n\n### Instructions:\n1. Extract the event title, date, start time, end time, and location.\n2. Identify all attendees mentioned in the text, including their names and email addresses.\n3. For each attendee, set has_confirmed to true if their attendance is confirmed, false otherwise.\n\n### Format Instructions:\n1. Do NOT include headers, comments, or any additional text—only generate the JSON file.\n2. Strictly adhere to the following JSON format:\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {\"properties\": {\"foo\": {\"title\": \"Foo\", \"description\": \"a list of strings\", \"type\": \"array\", \"items\": {\"type\": \"string\"}}}, \"required\": [\"foo\"]}\nthe object {\"foo\": [\"bar\", \"baz\"]} is a well-formatted instance of the schema. The object {\"properties\": {\"foo\": [\"bar\", \"baz\"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{\"$defs\": {\"Attendee\": {\"properties\": {\"name\": {\"title\": \"Name\", \"type\": \"string\"}, \"email\": {\"format\": \"email\", \"title\": \"Email\", \"type\": \"string\"}, \"has_confirmed\": {\"title\": \"Has Confirmed\", \"type\": \"boolean\"}}, \"required\": [\"name\", \"email\", \"has_confirmed\"], \"title\": \"Attendee\", \"type\": \"object\"}, \"Event\": {\"properties\": {\"title\": {\"title\": \"Title\", \"type\": \"string\"}, \"date\": {\"title\": \"Date\", \"type\": \"string\"}, \"start_time\": {\"title\": \"Start Time\", \"type\": \"string\"}, \"end_time\": {\"title\": \"End Time\", \"type\": \"string\"}, \"location\": {\"title\": \"Location\", \"type\": \"string\"}, \"attendees\": {\"items\": {\"$ref\": \"#/$defs/Attendee\"}, \"title\": \"Attendees\", \"type\": \"array\"}}, \"required\": [\"title\", \"date\", \"start_time\", \"end_time\", \"location\", \"attendees\"], \"title\": \"Event\", \"type\": \"object\"}}, \"properties\": {\"events\": {\"items\": {\"$ref\": \"#/$defs/Event\"}, \"title\": \"Events\", \"type\": \"array\"}}, \"required\": [\"events\"]}\n```\nPreviously encountered errors:\nFailed to parse Events from completion {\"events\": [{\"title\": \"Garden Tea Party\", \"date\": \"2023-03-15\", \"start_time\": \"15:00\", \"end_time\": \"\", \"location\": \"Sarah's home in Willow Creek\", \"attendees\": [{\"name\": \"Sarah\", \"email\": \"\", \"has_confirmed\": true}, {\"name\": \"Emily\", \"email\": \"\", \"has_confirmed\": true}, {\"name\": \"Jack\", \"email\": \"\", \"has_confirmed\": true}]}, {\"title\": \"Game Night\", \"date\": \"2023-03-22\", \"start_time\": \"18:00\", \"end_time\": \"\", \"location\": \"Tom's apartment downtown\", \"attendees\": [{\"name\": \"Tom\", \"email\": \"\", \"has_confirmed\": true}, {\"name\": \"Ryan\", \"email\": \"\", \"has_confirmed\": false}, {\"name\": \"Lisa\", \"email\": \"\", \"has_confirmed\": true}]}]}. Got: 6 validation errors for Events\nevents.0.attendees.0.email\n  value is not a valid email address: An email address must have an @-sign. [type=value_error, input_value='', input_type=str]\nevents.0.attendees.1.email\n  value is not a valid email address: An email address must have an @-sign. [type=value_error, input_value='', input_type=str]\nevents.0.attendees.2.email\n  value is not a valid email address: An email address must have an @-sign. [type=value_error, input_value='', input_type=str]\nevents.1.attendees.0.email\n  value is not a valid email address: An email address must have an @-sign. [type=value_error, input_value='', input_type=str]\nevents.1.attendees.1.email\n  value is not a valid email address: An email address must have an @-sign. [type=value_error, input_value='', input_type=str]\nevents.1.attendees.2.email\n  value is not a valid email address: An email address must have an @-sign. [type=value_error, input_value='', input_type=str]\nMake sure to fix them and provide correct output.\n", "output": "```json\n{\"events\":[{\"title\":\"Garden Tea Party\",\"date\":\"2023-03-15\",\"start_time\":\"15:00\",\"end_time\":\"17:00\",\"location\":\"Sarah's home in Willow Creek\",\"attendees\":[{\"name\":\"Sarah\",\"email\":\"sarah@example.com\",\"has_confirmed\":true},{\"name\":\"Emily\",\"email\":\"emily@example.com\",\"has_confirmed\":true},{\"name\":\"Jack\",\"email\":\"jack@example.com\",\"has_confirmed\":true}]},{\"title\":\"Game Night\",\"date\":\"2023-03-22\",\"start_time\":\"18:00\",\"end_time\":\"22:00\",\"location\":\"Tom's apartment downtown\",\"attendees\":[{\"name\":\"Tom\",\"email\":\"tom@example.com\",\"has_confirmed\":true},{\"name\":\"Ryan\",\"email\":\"ryan@example.com\",\"has_confirmed\":false},{\"name\":\"Lisa\",\"email\":\"lisa@example.com\",\"has_confirmed\":true}]}]}\n```"}
{"input": "You are an event details extractor. Your task is to identify and extract event information from the given text.\n### Input:\nNone\n\n### Instructions:\n1. Extract the event title, date, start time, end time, and location.\n2. Identify all attendees mentioned in the text, including their names and email addresses.\n3. For each attendee, set has_confirmed to true if their attendance is confirmed, false otherwise.\n\n### Format Instructions:\n1. Do NOT include headers, comments, or any additional text—only generate the JSON file.\n2. Strictly adhere to the following JSON format:\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {\"properties\": {\"foo\": {\"title\": \"Foo\", \"description\": \"a list of strings\", \"type\": \"array\", \"items\": {\"type\": \"string\"}}}, \"required\": [\"foo\"]}\nthe object {\"foo\": [\"bar\", \"baz\"]} is a well-formatted instance of the schema. The object {\"properties\": {\"foo\": [\"bar\", \"baz\"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{\"$defs\": {\"Attendee\": {\"properties\": {\"name\": {\"title\": \"Name\", \"type\": \"string\"}, \"email\": {\"format\": \"email\", \"title\": \"Email\", \"type\": \"string\"}, \"has_confirmed\": {\"title\": \"Has Confirmed\", \"type\": \"boolean\"}}, \"required\": [\"name\", \"email\", \"has_confirmed\"], \"title\": \"Attendee\", \"type\": \"object\"}, \"Event\": {\"properties\": {\"title\": {\"title\": \"Title\", \"type\": \"string\"}, \"date\": {\"title\": \"Date\", \"type\": \"string\"}, \"start_time\": {\"title\": \"Start Time\", \"type\": \"string\"}, \"end_time\": {\"title\": \"End Time\", \"type\": \"string\"}, \"location\": {\"title\": \"Location\", \"type\": \"string\"}, \"attendees\": {\"items\": {\"$ref\": \"#/$defs/Attendee\"}, \"title\": \"Attendees\", \"type\": \"array\"}}, \"required\": [\"title\", \"date\", \"start_time\", \"end_time\", \"location\", \"attendees\"], \"title\": \"Event\", \"type\": \"object\"}}, \"properties\": {\"events\": {\"items\": {\"$ref\": \"#/$defs/Event\"}, \"title\": \"Events\", \"type\": \"array\"}}, \"required\": [\"events\"]}\n```\nPreviously encountered errors:\nFailed to parse Events from completion {\"events\": [{\"title\": \"Garden Tea Party\", \"date\": \"2024-06-15\", \"start_time\": \"15:00\", \"end_time\": null, \"location\": \"Sarah's home in Willow Creek\", \"attendees\": [{\"name\": \"Emily\", \"email\": \"emily@example.com\", \"has_confirmed\": true}, {\"name\": \"Jake\", \"email\": \"jake@example.com\", \"has_confirmed\": true}, {\"name\": \"Mia\", \"email\": \"mia@example.com\", \"has_confirmed\": true}]}, {\"title\": \"Board Game Night\", \"date\": \"2024-07-08\", \"start_time\": \"19:00\", \"end_time\": null, \"location\": \"Jake's apartment downtown\", \"attendees\": [{\"name\": \"Kevin\", \"email\": \"kevin@example.com\", \"has_confirmed\": false}, {\"name\": \"Lila\", \"email\": \"lila@example.com\", \"has_confirmed\": false}, {\"name\": \"Aidan\", \"email\": \"aidan@example.com\", \"has_confirmed\": false}]}, {\"title\": \"Hiking Trip\", \"date\": \"2024-08-22\", \"start_time\": \"08:00\", \"end_time\": null, \"location\": \"Pine Ridge Trail\", \"attendees\": [{\"name\": \"Sarah\", \"email\": \"sarah@example.com\", \"has_confirmed\": true}, {\"name\": \"Emily\", \"email\": \"emily@example.com\", \"has_confirmed\": true}]}]}. Got: 3 validation errors for Events\nevents.0.end_time\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.8/v/string_type\nevents.1.end_time\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.8/v/string_type\nevents.2.end_time\n  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]\n    For further information visit https://errors.pydantic.dev/2.8/v/string_type\nMake sure to fix them and provide correct output.\n", "output": "```json\n{\"events\":[{\"title\":\"Garden Tea Party\",\"date\":\"2024-06-15\",\"start_time\":\"15:00\",\"end_time\":\"17:00\",\"location\":\"Sarah's home in Willow Creek\",\"attendees\":[{\"name\":\"Emily\",\"email\":\"emily@example.com\",\"has_confirmed\":true},{\"name\":\"Jake\",\"email\":\"jake@example.com\",\"has_confirmed\":true},{\"name\":\"Mia\",\"email\":\"mia@example.com\",\"has_confirmed\":true}]},{\"title\":\"Board Game Night\",\"date\":\"2024-07-08\",\"start_time\":\"19:00\",\"end_time\":\"23:00\",\"location\":\"Jake's apartment downtown\",\"attendees\":[{\"name\":\"Kevin\",\"email\":\"kevin@example.com\",\"has_confirmed\":false},{\"name\":\"Lila\",\"email\":\"lila@example.com\",\"has_confirmed\":false},{\"name\":\"Aidan\",\"email\":\"aidan@example.com\",\"has_confirmed\":false}]},{\"title\":\"Hiking Trip\",\"date\":\"2024-08-22\",\"start_time\":\"08:00\",\"end_time\":\"17:00\",\"location\":\"Pine Ridge Trail\",\"attendees\":[{\"name\":\"Sarah\",\"email\":\"sarah@example.com\",\"has_confirmed\":true},{\"name\":\"Emily\",\"email\":\"emily@example.com\",\"has_confirmed\":true}]}]}\n```"}
{"input": "You are an event details extractor. Your task is to identify and extract event information from the given text.\n### Input:\nOn Saturday, March 10, 2024, at 3 PM, Sarah is hosting a spring garden party at her home in Maplewood. “I’m excited to have my closest friends, Julia and Tom, over to enjoy the blooming flowers,” she said. Tom added, “I’m bringing my famous lemon tart!” Meanwhile, Julia commented, “I can’t wait to catch up with everyone and soak up some sun!” Unexpectedly, their neighbor Mr. Henderson will join, hoping to share stories from his travels. The day promises laughter, good food, and cherished memories under the warm afternoon sun.\n\n### Instructions:\n1. Extract the event title, date, start time, end time, and location.\n2. Identify all attendees mentioned in the text, including their names and email addresses.\n3. For each attendee, set has_confirmed to true if their attendance is confirmed, false otherwise.\n\n### Format Instructions:\n1. Do NOT include headers, comments, or any additional text—only generate the JSON file.\n2. Strictly adhere to the following JSON format:\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {\"properties\": {\"foo\": {\"title\": \"Foo\", \"description\": \"a list of strings\", \"type\": \"array\", \"items\": {\"type\": \"string\"}}}, \"required\": [\"foo\"]}\nthe object {\"foo\": [\"bar\", \"baz\"]} is a well-formatted instance of the schema. The object {\"properties\": {\"foo\": [\"bar\", \"baz\"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{\"$defs\": {\"Attendee\": {\"properties\": {\"name\": {\"title\": \"Name\", \"type\": \"string\"}, \"email\": {\"format\": \"email\", \"title\": \"Email\", \"type\": \"string\"}, \"has_confirmed\": {\"title\": \"Has Confirmed\", \"type\": \"boolean\"}}, \"required\": [\"name\", \"email\", \"has_confirmed\"], \"title\": \"Attendee\", \"type\": \"object\"}, \"Event\": {\"properties\": {\"title\": {\"title\": \"Title\", \"type\": \"string\"}, \"date\": {\"title\": \"Date\", \"type\": \"string\"}, \"start_time\": {\"title\": \"Start Time\", \"type\": \"string\"}, \"end_time\": {\"title\": \"End Time\", \"type\": \"string\"}, \"location\": {\"title\": \"Location\", \"type\": \"string\"}, \"attendees\": {\"items\": {\"$ref\": \"#/$defs/Attendee\"}, \"title\": \"Attendees\", \"type\": \"array\"}}, \"required\": [\"title\", \"date\", \"start_time\", \"end_time\", \"location\", \"attendees\"], \"title\": \"Event\", \"type\": \"object\"}}, \"properties\": {\"events\": {\"items\": {\"$ref\": \"#/$defs/Event\"}, \"title\": \"Events\", \"type\": \"array\"}}, \"required\": [\"events\"]}\n```", "output": "{\n  \"events\": [\n    {\n      \"title\": \"Spring Garden Party\",\n      \"date\": \"2024-03-10\",\n      \"start_time\": \"15:00\",\n      \"end_time\": \"16:00\",\n      \"location\": \"Sarah's home in Maplewood\",\n      \"attendees\": [\n        {\n          \"name\": \"Sarah\",\n          \"email\": \"sarah@example.com\",\n          \"has_confirmed\": true\n        },\n        {\n          \"name\": \"Julia\",\n          \"email\": \"julia@example.com\",\n          \"has_confirmed\": true\n        },\n        {\n          \"name\": \"Tom\",\n          \"email\": \"tom@example.com\",\n          \"has_confirmed\": true\n        },\n        {\n          \"name\": \"Mr. Henderson\",\n          \"email\": \"mr.henderson@example.com\",\n          \"has_confirmed\": false\n        }\n      ]\n    }\n  ]\n}"}
{"input": "You are a resume information extractor. Your task is to identify and extract resume details from the given text.\n### Input:\n**Sophia J. Rivers**  \nsophia.rivers@email.com | (555) 123-4567  \n\n**Education:**  \nB.A. in Creative Marketing, University of Miami, 2022  \n\n**Work Experience:**  \nMarketing Intern, Bright Ideas Agency, Miami, FL (2021-2022)  \n- Crafted engaging social media campaigns boosting client engagement by 30%.\n\n**Skills:**  \n- Digital Marketing  \n- Content Creation  \n- Social Media Strategy  \n- Graphic Design  \n\nAn innovative thinker with a passion for storytelling and a knack for making brands shine!\n\n### Instructions:\n1. Extract the person's full name, email, and phone number if provided.\n2. Identify all education entries, including institution, degree, and graduation year.\n3. Extract work experience details, including company, role, and years.\n4. List all mentioned skills.\n\n### Format Instructions:\n1. Do NOT include headers, comments, or any additional text—only generate the JSON file.\n2. Strictly adhere to the following JSON format:\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {\"properties\": {\"foo\": {\"title\": \"Foo\", \"description\": \"a list of strings\", \"type\": \"array\", \"items\": {\"type\": \"string\"}}}, \"required\": [\"foo\"]}\nthe object {\"foo\": [\"bar\", \"baz\"]} is a well-formatted instance of the schema. The object {\"properties\": {\"foo\": [\"bar\", \"baz\"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{\"$defs\": {\"Education\": {\"properties\": {\"institution\": {\"title\": \"Institution\", \"type\": \"string\"}, \"degree\": {\"title\": \"Degree\", \"type\": \"string\"}, \"graduation_year\": {\"title\": \"Graduation Year\", \"type\": \"integer\"}}, \"required\": [\"institution\", \"degree\", \"graduation_year\"], \"title\": \"Education\", \"type\": \"object\"}, \"WorkExperience\": {\"properties\": {\"company\": {\"title\": \"Company\", \"type\": \"string\"}, \"role\": {\"title\": \"Role\", \"type\": \"string\"}, \"start_year\": {\"title\": \"Start Year\", \"type\": \"integer\"}, \"end_year\": {\"anyOf\": [{\"type\": \"integer\"}, {\"type\": \"null\"}], \"default\": null, \"title\": \"End Year\"}}, \"required\": [\"company\", \"role\", \"start_year\"], \"title\": \"WorkExperience\", \"type\": \"object\"}}, \"properties\": {\"full_name\": {\"title\": \"Full Name\", \"type\": \"string\"}, \"email\": {\"format\": \"email\", \"title\": \"Email\", \"type\": \"string\"}, \"phone_number\": {\"anyOf\": [{\"type\": \"string\"}, {\"type\": \"null\"}], \"default\": null, \"title\": \"Phone Number\"}, \"education\": {\"items\": {\"$ref\": \"#/$defs/Education\"}, \"title\": \"Education\", \"type\": \"array\"}, \"work_experience\": {\"items\": {\"$ref\": \"#/$defs/WorkExperience\"}, \"title\": \"Work Experience\", \"type\": \"array\"}, \"skills\": {\"items\": {\"type\": \"string\"}, \"title\": \"Skills\", \"type\": \"array\"}}, \"required\": [\"full_name\", \"email\", \"education\", \"work_experience\", \"skills\"]}\n```", "output": "```json\n{\n  \"full_name\": \"Sophia J. Rivers\",\n  \"email\": \"sophia.rivers@email.com\",\n  \"phone_number\": \"(555) 123-4567\",\n  \"education\": [\n    {\n      \"institution\": \"University of Miami\",\n      \"degree\": \"B.A. in Creative Marketing\",\n      \"graduation_year\": 2022\n    }\n  ],\n  \"work_experience\": [\n    {\n      \"company\": \"Bright Ideas Agency\",\n      \"role\": \"Marketing Intern\",\n      \"start_year\": 2021,\n      \"end_year\": 2022\n    }\n  ],\n  \"skills\": [\n    \"Digital Marketing\",\n    \"Content Creation\",\n    \"Social Media Strategy\",\n    \"Graphic Design\"\n  ]\n}\n```"}
{"input": "You are a resume information extractor. Your task is to identify and extract resume details from the given text.\n### Input:\n**Luna Harper**  \nlunaharper@email.com | (555) 123-4567  \n\n**Education**  \nB.A. in Creative Writing, University of Fictionland | 2021  \n\n**Work Experience**  \n- **Content Creator** | StorySpark Media | 2022-Present | Crafted engaging narratives, boosting audience engagement by 40%.  \n- **Intern** | The Wordsmith Company | 2020-2021 | Assisted in editing and developing content strategies for blogs and social media.  \n\n**Skills**  \nStorytelling, SEO Optimization, Social Media Strategy, Editing, Team Collaboration, Adaptability  \n\n### Instructions:\n1. Extract the person's full name, email, and phone number if provided.\n2. Identify all education entries, including institution, degree, and graduation year.\n3. Extract work experience details, including company, role, and years.\n4. List all mentioned skills.\n\n### Format Instructions:\n1. Do NOT include headers, comments, or any additional text—only generate the JSON file.\n2. Strictly adhere to the following JSON format:\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {\"properties\": {\"foo\": {\"title\": \"Foo\", \"description\": \"a list of strings\", \"type\": \"array\", \"items\": {\"type\": \"string\"}}}, \"required\": [\"foo\"]}\nthe object {\"foo\": [\"bar\", \"baz\"]} is a well-formatted instance of the schema. The object {\"properties\": {\"foo\": [\"bar\", \"baz\"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{\"$defs\": {\"Education\": {\"properties\": {\"institution\": {\"title\": \"Institution\", \"type\": \"string\"}, \"degree\": {\"title\": \"Degree\", \"type\": \"string\"}, \"graduation_year\": {\"title\": \"Graduation Year\", \"type\": \"integer\"}}, \"required\": [\"institution\", \"degree\", \"graduation_year\"], \"title\": \"Education\", \"type\": \"object\"}, \"WorkExperience\": {\"properties\": {\"company\": {\"title\": \"Company\", \"type\": \"string\"}, \"role\": {\"title\": \"Role\", \"type\": \"string\"}, \"start_year\": {\"title\": \"Start Year\", \"type\": \"integer\"}, \"end_year\": {\"anyOf\": [{\"type\": \"integer\"}, {\"type\": \"null\"}], \"default\": null, \"title\": \"End Year\"}}, \"required\": [\"company\", \"role\", \"start_year\"], \"title\": \"WorkExperience\", \"type\": \"object\"}}, \"properties\": {\"full_name\": {\"title\": \"Full Name\", \"type\": \"string\"}, \"email\": {\"format\": \"email\", \"title\": \"Email\", \"type\": \"string\"}, \"phone_number\": {\"anyOf\": [{\"type\": \"string\"}, {\"type\": \"null\"}], \"default\": null, \"title\": \"Phone Number\"}, \"education\": {\"items\": {\"$ref\": \"#/$defs/Education\"}, \"title\": \"Education\", \"type\": \"array\"}, \"work_experience\": {\"items\": {\"$ref\": \"#/$defs/WorkExperience\"}, \"title\": \"Work Experience\", \"type\": \"array\"}, \"skills\": {\"items\": {\"type\": \"string\"}, \"title\": \"Skills\", \"type\": \"array\"}}, \"required\": [\"full_name\", \"email\", \"education\", \"work_experience\", \"skills\"]}\n```", "output": "{\n  \"full_name\": \"Luna Harper\",\n  \"email\": \"lunaharper@email.com\",\n  \"phone_number\": \"(555) 123-4567\",\n  \"education\": [\n    {\n      \"institution\": \"University of Fictionland\",\n      \"degree\": \"B.A. in Creative Writing\",\n      \"graduation_year\": 2021\n    }\n  ],\n  \"work_experience\": [\n    {\n      \"company\": \"StorySpark Media\",\n      \"role\": \"Content Creator\",\n      \"start_year\": 2022,\n      \"end_year\": null\n    },\n    {\n      \"company\": \"The Wordsmith Company\",\n      \"role\": \"Intern\",\n      \"start_year\": 2020,\n      \"end_year\": 2021\n    }\n  ],\n  \"skills\": [\n    \"Storytelling\",\n    \"SEO Optimization\",\n    \"Social Media Strategy\",\n    \"Editing\",\n    \"Team Collaboration\",\n    \"Adaptability\"\n  ]\n}"}
{"input": "You are a resume information extractor. Your task is to identify and extract resume details from the given text.\n### Input:\n**Samara Lane**  \n📧 samara.lane@email.com | 📞 (555) 123-4567  \n\n**Education:**  \nB.A. in Creative Writing, University of Arts, 2021  \n\n**Experience:**  \n*Content Creator, Dreamscape Media* - 2022-Present  \nCraft compelling narratives for digital platforms, enhancing user engagement.  \n*Freelance Writer* - 2020-2022  \nProduced articles and stories for various clients, honing adaptability in writing styles.  \n\n**Skills:**  \nWordsmithing, Digital Marketing, Social Media Strategy, Project Management, Team Collaboration.  \n\nLet’s weave your ideas into words!\n\n### Instructions:\n1. Extract the person's full name, email, and phone number if provided.\n2. Identify all education entries, including institution, degree, and graduation year.\n3. Extract work experience details, including company, role, and years.\n4. List all mentioned skills.\n\n### Format Instructions:\n1. Do NOT include headers, comments, or any additional text—only generate the JSON file.\n2. Strictly adhere to the following JSON format:\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {\"properties\": {\"foo\": {\"title\": \"Foo\", \"description\": \"a list of strings\", \"type\": \"array\", \"items\": {\"type\": \"string\"}}}, \"required\": [\"foo\"]}\nthe object {\"foo\": [\"bar\", \"baz\"]} is a well-formatted instance of the schema. The object {\"properties\": {\"foo\": [\"bar\", \"baz\"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{\"$defs\": {\"Education\": {\"properties\": {\"institution\": {\"title\": \"Institution\", \"type\": \"string\"}, \"degree\": {\"title\": \"Degree\", \"type\": \"string\"}, \"graduation_year\": {\"title\": \"Graduation Year\", \"type\": \"integer\"}}, \"required\": [\"institution\", \"degree\", \"graduation_year\"], \"title\": \"Education\", \"type\": \"object\"}, \"WorkExperience\": {\"properties\": {\"company\": {\"title\": \"Company\", \"type\": \"string\"}, \"role\": {\"title\": \"Role\", \"type\": \"string\"}, \"start_year\": {\"title\": \"Start Year\", \"type\": \"integer\"}, \"end_year\": {\"anyOf\": [{\"type\": \"integer\"}, {\"type\": \"null\"}], \"default\": null, \"title\": \"End Year\"}}, \"required\": [\"company\", \"role\", \"start_year\"], \"title\": \"WorkExperience\", \"type\": \"object\"}}, \"properties\": {\"full_name\": {\"title\": \"Full Name\", \"type\": \"string\"}, \"email\": {\"format\": \"email\", \"title\": \"Email\", \"type\": \"string\"}, \"phone_number\": {\"anyOf\": [{\"type\": \"string\"}, {\"type\": \"null\"}], \"default\": null, \"title\": \"Phone Number\"}, \"education\": {\"items\": {\"$ref\": \"#/$defs/Education\"}, \"title\": \"Education\", \"type\": \"array\"}, \"work_experience\": {\"items\": {\"$ref\": \"#/$defs/WorkExperience\"}, \"title\": \"Work Experience\", \"type\": \"array\"}, \"skills\": {\"items\": {\"type\": \"string\"}, \"title\": \"Skills\", \"type\": \"array\"}}, \"required\": [\"full_name\", \"email\", \"education\", \"work_experience\", \"skills\"]}\n```", "output": "{\n  \"full_name\": \"Samara Lane\",\n  \"email\": \"samara.lane@email.com\",\n  \"phone_number\": \"(555) 123-4567\",\n  \"education\": [\n    {\n      \"institution\": \"University of Arts\",\n      \"degree\": \"B.A. in Creative Writing\",\n      \"graduation_year\": 2021\n    }\n  ],\n  \"work_experience\": [\n    {\n      \"company\": \"Dreamscape Media\",\n      \"role\": \"Content Creator\",\n      \"start_year\": 2022,\n      \"end_year\": null\n    },\n    {\n      \"company\": \"Freelance Writer\",\n      \"role\": \"Freelance Writer\",\n      \"start_year\": 2020,\n      \"end_year\": 2022\n    }\n  ],\n  \"skills\": [\n    \"Wordsmithing\",\n    \"Digital Marketing\",\n    \"Social Media Strategy\",\n    \"Project Management\",\n    \"Team Collaboration\"\n  ]\n}"}
{"input": "You are a legendary artificer crafting unique magical items and artifacts. Create an extraordinary artifact for a fantasy game world.\n### Instructions:\n1. Create a powerful and unique artifact with an intriguing name and compelling description.\n2. Define its location in a way that ties into the artifact's lore.\n3. Design meaningful buffs that enhance the wielder's capabilities.\n4. Balance the artifact with interesting defuffs or drawbacks.\n5. Consider the artifact's type (weapon, armor, accessory, etc.) and its rarity level.\n6. Determine if it's unique (one of a kind) and if it can be traded between players.\n7. Set an appropriate value that reflects its power and rarity.\n\n### Format Instructions:\n1. Do NOT include headers, comments, or any additional text—only generate the JSON file.\n2. Strictly adhere to the following JSON format:\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {\"properties\": {\"foo\": {\"title\": \"Foo\", \"description\": \"a list of strings\", \"type\": \"array\", \"items\": {\"type\": \"string\"}}}, \"required\": [\"foo\"]}\nthe object {\"foo\": [\"bar\", \"baz\"]} is a well-formatted instance of the schema. The object {\"properties\": {\"foo\": [\"bar\", \"baz\"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{\"$defs\": {\"Buff\": {\"properties\": {\"name\": {\"title\": \"Name\", \"type\": \"string\"}, \"description\": {\"title\": \"Description\", \"type\": \"string\"}}, \"required\": [\"name\", \"description\"], \"title\": \"Buff\", \"type\": \"object\"}, \"Defuff\": {\"properties\": {\"name\": {\"title\": \"Name\", \"type\": \"string\"}, \"description\": {\"title\": \"Description\", \"type\": \"string\"}}, \"required\": [\"name\", \"description\"], \"title\": \"Defuff\", \"type\": \"object\"}}, \"properties\": {\"name\": {\"description\": \"Name of the artifact\", \"title\": \"Name\", \"type\": \"string\"}, \"location\": {\"description\": \"Location of the artifact\", \"title\": \"Location\", \"type\": \"string\"}, \"buffs\": {\"description\": \"Buffs of the artifact\", \"items\": {\"$ref\": \"#/$defs/Buff\"}, \"title\": \"Buffs\", \"type\": \"array\"}, \"defuffs\": {\"description\": \"Defuffs of the artifact\", \"items\": {\"$ref\": \"#/$defs/Defuff\"}, \"title\": \"Defuffs\", \"type\": \"array\"}, \"description\": {\"description\": \"Description of the artifact\", \"title\": \"Description\", \"type\": \"string\"}, \"type\": {\"description\": \"Type of the artifact\", \"title\": \"Type\", \"type\": \"string\"}, \"rarity\": {\"description\": \"Rarity of the artifact\", \"title\": \"Rarity\", \"type\": \"string\"}, \"value\": {\"description\": \"Value of the artifact\", \"title\": \"Value\", \"type\": \"integer\"}, \"is_unique\": {\"description\": \"Is the artifact unique\", \"title\": \"Is Unique\", \"type\": \"boolean\"}, \"is_tradable\": {\"description\": \"Is the artifact tradable\", \"title\": \"Is Tradable\", \"type\": \"boolean\"}}, \"required\": [\"name\", \"location\", \"buffs\", \"defuffs\", \"description\", \"type\", \"rarity\", \"value\", \"is_unique\", \"is_tradable\"]}\n```", "output": "{\n  \"name\": \"Heart of the Etherstorm\",\n  \"location\": \"The Tempest Spire, a towering fortress shrouded in perpetual storm clouds, where the fabric of reality is thin and the winds howl with the voices of the ancients.\",\n  \"buffs\": [\n    {\n      \"name\": \"Stormcaller\",\n      \"description\": \"Grants the wielder the ability to summon a tempest, dealing lightning damage to all enemies within a 30-foot radius and stunning them for 1 round.\"\n    },\n    {\n      \"name\": \"Warped Resilience\",\n      \"description\": \"Increases the wielder's resistance to elemental damage by 50%, making them nearly impervious to fire, ice, and lightning attacks.\"\n    },\n    {\n      \"name\": \"Arcane Insight\",\n      \"description\": \"Enhances the wielder's intelligence, granting a +4 bonus to spellcasting ability checks and increasing the effectiveness of spells by 25%.\"\n    }\n  ],\n  \"defuffs\": [\n    {\n      \"name\": \"Etheric Drain\",\n      \"description\": \"Each use of the artifact’s abilities consumes a part of the wielder's life force, reducing maximum hit points by 1 for each use until a long rest is taken.\"\n    },\n    {\n      \"name\": \"Stormbound\",\n      \"description\": \"The wielder becomes increasingly unstable during thunderstorms, suffering a -2 penalty to all saving throws while in stormy weather.\"\n    }\n  ],\n  \"description\": \"A swirling orb of pure energy, encased in a crystalline shell that crackles with arcane power. The Heart of the Etherstorm pulses with the rhythm of the storm, its surface reflecting the chaotic beauty of lightning and thunder. Legends say it contains the essence of a long-lost storm deity, granting unimaginable power to its wielder, but at a steep price.\",\n  \"type\": \"Accessory\",\n  \"rarity\": \"Legendary\",\n  \"value\": 25000,\n  \"is_unique\": true,\n  \"is_tradable\": false\n}"}
{"input": "You are a legendary artificer crafting unique magical items and artifacts. Create an extraordinary artifact for a fantasy game world.\n### Instructions:\n1. Create a powerful and unique artifact with an intriguing name and compelling description.\n2. Define its location in a way that ties into the artifact's lore.\n3. Design meaningful buffs that enhance the wielder's capabilities.\n4. Balance the artifact with interesting defuffs or drawbacks.\n5. Consider the artifact's type (weapon, armor, accessory, etc.) and its rarity level.\n6. Determine if it's unique (one of a kind) and if it can be traded between players.\n7. Set an appropriate value that reflects its power and rarity.\n\n### Format Instructions:\n1. Do NOT include headers, comments, or any additional text—only generate the JSON file.\n2. Strictly adhere to the following JSON format:\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {\"properties\": {\"foo\": {\"title\": \"Foo\", \"description\": \"a list of strings\", \"type\": \"array\", \"items\": {\"type\": \"string\"}}}, \"required\": [\"foo\"]}\nthe object {\"foo\": [\"bar\", \"baz\"]} is a well-formatted instance of the schema. The object {\"properties\": {\"foo\": [\"bar\", \"baz\"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{\"$defs\": {\"Buff\": {\"properties\": {\"name\": {\"title\": \"Name\", \"type\": \"string\"}, \"description\": {\"title\": \"Description\", \"type\": \"string\"}}, \"required\": [\"name\", \"description\"], \"title\": \"Buff\", \"type\": \"object\"}, \"Defuff\": {\"properties\": {\"name\": {\"title\": \"Name\", \"type\": \"string\"}, \"description\": {\"title\": \"Description\", \"type\": \"string\"}}, \"required\": [\"name\", \"description\"], \"title\": \"Defuff\", \"type\": \"object\"}}, \"properties\": {\"name\": {\"description\": \"Name of the artifact\", \"title\": \"Name\", \"type\": \"string\"}, \"location\": {\"description\": \"Location of the artifact\", \"title\": \"Location\", \"type\": \"string\"}, \"buffs\": {\"description\": \"Buffs of the artifact\", \"items\": {\"$ref\": \"#/$defs/Buff\"}, \"title\": \"Buffs\", \"type\": \"array\"}, \"defuffs\": {\"description\": \"Defuffs of the artifact\", \"items\": {\"$ref\": \"#/$defs/Defuff\"}, \"title\": \"Defuffs\", \"type\": \"array\"}, \"description\": {\"description\": \"Description of the artifact\", \"title\": \"Description\", \"type\": \"string\"}, \"type\": {\"description\": \"Type of the artifact\", \"title\": \"Type\", \"type\": \"string\"}, \"rarity\": {\"description\": \"Rarity of the artifact\", \"title\": \"Rarity\", \"type\": \"string\"}, \"value\": {\"description\": \"Value of the artifact\", \"title\": \"Value\", \"type\": \"integer\"}, \"is_unique\": {\"description\": \"Is the artifact unique\", \"title\": \"Is Unique\", \"type\": \"boolean\"}, \"is_tradable\": {\"description\": \"Is the artifact tradable\", \"title\": \"Is Tradable\", \"type\": \"boolean\"}}, \"required\": [\"name\", \"location\", \"buffs\", \"defuffs\", \"description\", \"type\", \"rarity\", \"value\", \"is_unique\", \"is_tradable\"]}\n```", "output": "{\n  \"name\": \"Heart of the Storm\",\n  \"location\": \"The Tempest Spire, a towering peak perpetually shrouded in thunderclouds and lightning storms, known to be the resting place of ancient storm elementals.\",\n  \"buffs\": [\n    {\n      \"name\": \"Stormcaller\",\n      \"description\": \"The wielder can summon a storm once per day, creating a localized tempest that deals lightning damage and confuses enemies.\"\n    },\n    {\n      \"name\": \"Thunderous Resilience\",\n      \"description\": \"The wielder gains resistance to lightning and thunder damage and an increase in movement speed during stormy weather.\"\n    },\n    {\n      \"name\": \"Electromagnetic Aura\",\n      \"description\": \"Enemies within 10 feet of the wielder suffer disadvantage on attack rolls due to the crackling energy surrounding them.\"\n    }\n  ],\n  \"defuffs\": [\n    {\n      \"name\": \"Stormbound\",\n      \"description\": \"The wielder becomes vulnerable to cold damage, as the constant exposure to storms drains their warmth.\"\n    },\n    {\n      \"name\": \"Flashback\",\n      \"description\": \"Once per long rest, the wielder must make a Wisdom saving throw when casting a storm-related spell; failure leads to a brief but disorienting flashback, causing them to lose their next action.\"\n    }\n  ],\n  \"description\": \"A radiant crystal pulsating with the energy of tempestuous storms, the Heart of the Storm grants its wielder unparalleled control over lightning and thunder. Legends say it was forged in the eye of a hurricane by the first storm druids, allowing its bearer to command the fury of nature.\",\n  \"type\": \"Accessory\",\n  \"rarity\": \"Legendary\",\n  \"value\": 15000,\n  \"is_unique\": true,\n  \"is_tradable\": false\n}"}
{"input": "You are a legendary artificer crafting unique magical items and artifacts. Create an extraordinary artifact for a fantasy game world.\n### Instructions:\n1. Create a powerful and unique artifact with an intriguing name and compelling description.\n2. Define its location in a way that ties into the artifact's lore.\n3. Design meaningful buffs that enhance the wielder's capabilities.\n4. Balance the artifact with interesting defuffs or drawbacks.\n5. Consider the artifact's type (weapon, armor, accessory, etc.) and its rarity level.\n6. Determine if it's unique (one of a kind) and if it can be traded between players.\n7. Set an appropriate value that reflects its power and rarity.\n\n### Format Instructions:\n1. Do NOT include headers, comments, or any additional text—only generate the JSON file.\n2. Strictly adhere to the following JSON format:\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {\"properties\": {\"foo\": {\"title\": \"Foo\", \"description\": \"a list of strings\", \"type\": \"array\", \"items\": {\"type\": \"string\"}}}, \"required\": [\"foo\"]}\nthe object {\"foo\": [\"bar\", \"baz\"]} is a well-formatted instance of the schema. The object {\"properties\": {\"foo\": [\"bar\", \"baz\"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{\"$defs\": {\"Buff\": {\"properties\": {\"name\": {\"title\": \"Name\", \"type\": \"string\"}, \"description\": {\"title\": \"Description\", \"type\": \"string\"}}, \"required\": [\"name\", \"description\"], \"title\": \"Buff\", \"type\": \"object\"}, \"Defuff\": {\"properties\": {\"name\": {\"title\": \"Name\", \"type\": \"string\"}, \"description\": {\"title\": \"Description\", \"type\": \"string\"}}, \"required\": [\"name\", \"description\"], \"title\": \"Defuff\", \"type\": \"object\"}}, \"properties\": {\"name\": {\"description\": \"Name of the artifact\", \"title\": \"Name\", \"type\": \"string\"}, \"location\": {\"description\": \"Location of the artifact\", \"title\": \"Location\", \"type\": \"string\"}, \"buffs\": {\"description\": \"Buffs of the artifact\", \"items\": {\"$ref\": \"#/$defs/Buff\"}, \"title\": \"Buffs\", \"type\": \"array\"}, \"defuffs\": {\"description\": \"Defuffs of the artifact\", \"items\": {\"$ref\": \"#/$defs/Defuff\"}, \"title\": \"Defuffs\", \"type\": \"array\"}, \"description\": {\"description\": \"Description of the artifact\", \"title\": \"Description\", \"type\": \"string\"}, \"type\": {\"description\": \"Type of the artifact\", \"title\": \"Type\", \"type\": \"string\"}, \"rarity\": {\"description\": \"Rarity of the artifact\", \"title\": \"Rarity\", \"type\": \"string\"}, \"value\": {\"description\": \"Value of the artifact\", \"title\": \"Value\", \"type\": \"integer\"}, \"is_unique\": {\"description\": \"Is the artifact unique\", \"title\": \"Is Unique\", \"type\": \"boolean\"}, \"is_tradable\": {\"description\": \"Is the artifact tradable\", \"title\": \"Is Tradable\", \"type\": \"boolean\"}}, \"required\": [\"name\", \"location\", \"buffs\", \"defuffs\", \"description\", \"type\", \"rarity\", \"value\", \"is_unique\", \"is_tradable\"]}\n```", "output": "{\n  \"name\": \"The Celestial Prism\",\n  \"location\": \"The Shattered Spire, a floating island above the Astral Sea\",\n  \"buffs\": [\n    {\n      \"name\": \"Astral Insight\",\n      \"description\": \"Grants the wielder the ability to see into the ethereal plane, allowing them to detect invisible creatures and hidden portals.\"\n    },\n    {\n      \"name\": \"Radiant Shield\",\n      \"description\": \"Creates a shimmering barrier of light that absorbs up to 30 damage from any source before dissipating.\"\n    },\n    {\n      \"name\": \"Starlight Manifestation\",\n      \"description\": \"Enables the wielder to summon a burst of radiant energy, dealing 4d6 radiant damage to all enemies within a 20-foot radius once per long rest.\"\n    }\n  ],\n  \"defuffs\": [\n    {\n      \"name\": \"Overwhelming Light\",\n      \"description\": \"The wielder is blinded for 1 round after using Starlight Manifestation due to the intense brightness.\"\n    },\n    {\n      \"name\": \"Astral Drift\",\n      \"description\": \"The wielder's connection to the material plane weakens, causing a -2 penalty to Constitution saving throws while attuned to the artifact.\"\n    }\n  ],\n  \"description\": \"Forged by celestial architects, the Celestial Prism is a multifaceted crystal that refracts light into brilliant colors. It is said to contain the essence of fallen stars, granting its wielder access to powers beyond the mortal realm. Many have sought its light, but few have returned from the Shattered Spire to tell the tale.\",\n  \"type\": \"Accessory\",\n  \"rarity\": \"Legendary\",\n  \"value\": 15000,\n  \"is_unique\": true,\n  \"is_tradable\": false\n}"}
{"input": "You are a book review information extractor. Your task is to identify and extract book review details from the given text.\n### Input:\n**Book Review**  \n**Title:** The Midnight Library  \n**Author:** Matt Haig  \n**Publication Year:** 2020  \n**Genre:** Fiction  \n\n**Reviewer:** Sarah Thompson  \n**Email:** sarah.thompson@email.com  \n**Rating:** ★★★★★  \n\nMatt Haig’s \"The Midnight Library\" is a philosophical tour de force that expertly navigates the complexities of choice and regret. The novel follows Nora Seed, a woman disillusioned with her life, who finds herself in a magical library filled with books representing alternate lives she could have lived had she made different choices. \n\nHaig brilliantly intertwines elements of magical realism with profound themes of mental health and the value of existence. The narrative is poignant and thought-provoking, encouraging readers to reflect on their own life decisions while exploring the idea that every choice opens up a universe of possibilities. \n\nThe characters are richly developed, and the emotional depth of Nora's journey is both captivating and relatable. Haig’s storytelling is immersive, keeping readers engaged from the first page to the last. With a blend of humor and heartbreak, \"The Midnight Library\" is not just a story about exploring alternate realities, but also a celebration of the life we lead and the importance of resilience. Highly recommended for anyone seeking a compelling yet introspective read.\n\n### Instructions:\n1. Extract the book details (title, author, publication year, genre).\n2. Extract the reviewer's information (name, email).\n3. Identify the rating given by the reviewer (must be a number).\n4. Extract the detailed review text.\n\n### Format Instructions:\n1. Do NOT include headers, comments, or any additional text—only generate the JSON file.\n2. Strictly adhere to the following JSON format:\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {\"properties\": {\"foo\": {\"title\": \"Foo\", \"description\": \"a list of strings\", \"type\": \"array\", \"items\": {\"type\": \"string\"}}}, \"required\": [\"foo\"]}\nthe object {\"foo\": [\"bar\", \"baz\"]} is a well-formatted instance of the schema. The object {\"properties\": {\"foo\": [\"bar\", \"baz\"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{\"$defs\": {\"Reviewer\": {\"properties\": {\"name\": {\"description\": \"Name of the reviewer\", \"title\": \"Name\", \"type\": \"string\"}, \"email\": {\"description\": \"Email of the reviewer\", \"format\": \"email\", \"title\": \"Email\", \"type\": \"string\"}, \"rating\": {\"description\": \"Rating of the reviewer\", \"title\": \"Rating\", \"type\": \"integer\"}, \"review\": {\"description\": \"Review of the reviewer\", \"title\": \"Review\", \"type\": \"string\"}}, \"required\": [\"name\", \"email\", \"rating\", \"review\"], \"title\": \"Reviewer\", \"type\": \"object\"}}, \"properties\": {\"title\": {\"description\": \"Title of the book\", \"title\": \"Title\", \"type\": \"string\"}, \"author\": {\"description\": \"Author of the book\", \"title\": \"Author\", \"type\": \"string\"}, \"publication_year\": {\"description\": \"Publication year of the book\", \"title\": \"Publication Year\", \"type\": \"integer\"}, \"genre\": {\"description\": \"Genre of the book\", \"title\": \"Genre\", \"type\": \"string\"}, \"reviewer\": {\"allOf\": [{\"$ref\": \"#/$defs/Reviewer\"}], \"description\": \"Reviewer of the book\"}}, \"required\": [\"title\", \"author\", \"publication_year\", \"genre\", \"reviewer\"]}\n```", "output": "{\n  \"title\": \"The Midnight Library\",\n  \"author\": \"Matt Haig\",\n  \"publication_year\": 2020,\n  \"genre\": \"Fiction\",\n  \"reviewer\": {\n    \"name\": \"Sarah Thompson\",\n    \"email\": \"sarah.thompson@email.com\",\n    \"rating\": 5,\n    \"review\": \"Matt Haig’s 'The Midnight Library' is a philosophical tour de force that expertly navigates the complexities of choice and regret. The novel follows Nora Seed, a woman disillusioned with her life, who finds herself in a magical library filled with books representing alternate lives she could have lived had she made different choices. Haig brilliantly intertwines elements of magical realism with profound themes of mental health and the value of existence. The narrative is poignant and thought-provoking, encouraging readers to reflect on their own life decisions while exploring the idea that every choice opens up a universe of possibilities. The characters are richly developed, and the emotional depth of Nora's journey is both captivating and relatable. Haig’s storytelling is immersive, keeping readers engaged from the first page to the last. With a blend of humor and heartbreak, 'The Midnight Library' is not just a story about exploring alternate realities, but also a celebration of the life we lead and the importance of resilience. Highly recommended for anyone seeking a compelling yet introspective read.\"\n  }\n}"}
{"input": "You are a book review information extractor. Your task is to identify and extract book review details from the given text.\n### Input:\n**Book Review**\n\n**Title:** The Midnight Library  \n**Author:** Matt Haig  \n**Publication Year:** 2020  \n**Genre:** Fiction  \n\n**Reviewer:** Alice Thompson  \n**Email:** alicethompson@example.com  \n**Rating:** ⭐⭐⭐⭐⭐  \n\nMatt Haig’s *The Midnight Library* masterfully explores the complexities of regret and the beauty of choices through the lens of a fantastical library filled with infinite lives. Our protagonist, Nora Seed, grapples with her decisions after a pivotal crisis leads her to a library where each book represents a different path her life could have taken.\n\nHaig’s prose is both lyrical and accessible, making deep philosophical questions resonate on a personal level. The concept of parallel lives is captivating, and the narrative seamlessly weaves joy and sorrow, challenging readers to reflect on their own decisions. \n\nWhat struck me most was the balance between hope and despair; Haig doesn’t shy away from the heaviness of existence but also illuminates the possibility of rebirth. Each borrowed life unfolds with rich imagination, leaving the reader pondering the roads not taken.\n\nA poignant reminder that every choice holds potential, *The Midnight Library* will linger in your heart long after the last page. It’s a must-read for anyone seeking inspiration and a deeper understanding of life’s possibilities. Highly recommended!\n\n### Instructions:\n1. Extract the book details (title, author, publication year, genre).\n2. Extract the reviewer's information (name, email).\n3. Identify the rating given by the reviewer (must be a number).\n4. Extract the detailed review text.\n\n### Format Instructions:\n1. Do NOT include headers, comments, or any additional text—only generate the JSON file.\n2. Strictly adhere to the following JSON format:\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {\"properties\": {\"foo\": {\"title\": \"Foo\", \"description\": \"a list of strings\", \"type\": \"array\", \"items\": {\"type\": \"string\"}}}, \"required\": [\"foo\"]}\nthe object {\"foo\": [\"bar\", \"baz\"]} is a well-formatted instance of the schema. The object {\"properties\": {\"foo\": [\"bar\", \"baz\"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{\"$defs\": {\"Reviewer\": {\"properties\": {\"name\": {\"description\": \"Name of the reviewer\", \"title\": \"Name\", \"type\": \"string\"}, \"email\": {\"description\": \"Email of the reviewer\", \"format\": \"email\", \"title\": \"Email\", \"type\": \"string\"}, \"rating\": {\"description\": \"Rating of the reviewer\", \"title\": \"Rating\", \"type\": \"integer\"}, \"review\": {\"description\": \"Review of the reviewer\", \"title\": \"Review\", \"type\": \"string\"}}, \"required\": [\"name\", \"email\", \"rating\", \"review\"], \"title\": \"Reviewer\", \"type\": \"object\"}}, \"properties\": {\"title\": {\"description\": \"Title of the book\", \"title\": \"Title\", \"type\": \"string\"}, \"author\": {\"description\": \"Author of the book\", \"title\": \"Author\", \"type\": \"string\"}, \"publication_year\": {\"description\": \"Publication year of the book\", \"title\": \"Publication Year\", \"type\": \"integer\"}, \"genre\": {\"description\": \"Genre of the book\", \"title\": \"Genre\", \"type\": \"string\"}, \"reviewer\": {\"allOf\": [{\"$ref\": \"#/$defs/Reviewer\"}], \"description\": \"Reviewer of the book\"}}, \"required\": [\"title\", \"author\", \"publication_year\", \"genre\", \"reviewer\"]}\n```", "output": "{\n  \"title\": \"The Midnight Library\",\n  \"author\": \"Matt Haig\",\n  \"publication_year\": 2020,\n  \"genre\": \"Fiction\",\n  \"reviewer\": {\n    \"name\": \"Alice Thompson\",\n    \"email\": \"alicethompson@example.com\",\n    \"rating\": 5,\n    \"review\": \"Matt Haig’s *The Midnight Library* masterfully explores the complexities of regret and the beauty of choices through the lens of a fantastical library filled with infinite lives. Our protagonist, Nora Seed, grapples with her decisions after a pivotal crisis leads her to a library where each book represents a different path her life could have taken.\\n\\nHaig’s prose is both lyrical and accessible, making deep philosophical questions resonate on a personal level. The concept of parallel lives is captivating, and the narrative seamlessly weaves joy and sorrow, challenging readers to reflect on their own decisions.\\n\\nWhat struck me most was the balance between hope and despair; Haig doesn’t shy away from the heaviness of existence but also illuminates the possibility of rebirth. Each borrowed life unfolds with rich imagination, leaving the reader pondering the roads not taken.\\n\\nA poignant reminder that every choice holds potential, *The Midnight Library* will linger in your heart long after the last page. It’s a must-read for anyone seeking inspiration and a deeper understanding of life’s possibilities. Highly recommended!\"\n  }\n}"}
{"input": "You are a book review information extractor. Your task is to identify and extract book review details from the given text.\n### Input:\n**Book Review**\n\n**Title**: *The Midnight Library*  \n**Author**: Matt Haig  \n**Publication Year**: 2020  \n**Genre**: Fiction  \n\n**Reviewer**: Laura Thompson  \n**Email**: laura.thompson@email.com  \n**Rating**: ★★★★☆\n\n*The Midnight Library* explores the labyrinth of choices and regrets through the captivating premise of a library that exists between life and death. Haig weaves a poignant narrative, inviting readers to ponder what could have been through the eyes of Nora Seed, a woman whose life feels riddled with disappointment. \n\nThe book’s charm lies in its heartwarming take on existentialism, presenting an enriching dialogue on the importance of embracing life’s uncertainties. Haig's lyrical prose skillfully intertwines hope and despair, encouraging readers to reflect on their own choices.\n\nWhile some may find the concept of parallel lives overwhelming, Haig strikes a delicate balance, leaving room for profound contemplation without veering into despair. The engaging character development and fantastical elements ensure that the story remains both relatable and thought-provoking. \n\nUltimately, *The Midnight Library* delivers an inspiring message that underscores the beauty of life in all its imperfections, making it a must-read for anyone seeking a blend of introspection and hope.\n\n### Instructions:\n1. Extract the book details (title, author, publication year, genre).\n2. Extract the reviewer's information (name, email).\n3. Identify the rating given by the reviewer (must be a number).\n4. Extract the detailed review text.\n\n### Format Instructions:\n1. Do NOT include headers, comments, or any additional text—only generate the JSON file.\n2. Strictly adhere to the following JSON format:\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {\"properties\": {\"foo\": {\"title\": \"Foo\", \"description\": \"a list of strings\", \"type\": \"array\", \"items\": {\"type\": \"string\"}}}, \"required\": [\"foo\"]}\nthe object {\"foo\": [\"bar\", \"baz\"]} is a well-formatted instance of the schema. The object {\"properties\": {\"foo\": [\"bar\", \"baz\"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{\"$defs\": {\"Reviewer\": {\"properties\": {\"name\": {\"description\": \"Name of the reviewer\", \"title\": \"Name\", \"type\": \"string\"}, \"email\": {\"description\": \"Email of the reviewer\", \"format\": \"email\", \"title\": \"Email\", \"type\": \"string\"}, \"rating\": {\"description\": \"Rating of the reviewer\", \"title\": \"Rating\", \"type\": \"integer\"}, \"review\": {\"description\": \"Review of the reviewer\", \"title\": \"Review\", \"type\": \"string\"}}, \"required\": [\"name\", \"email\", \"rating\", \"review\"], \"title\": \"Reviewer\", \"type\": \"object\"}}, \"properties\": {\"title\": {\"description\": \"Title of the book\", \"title\": \"Title\", \"type\": \"string\"}, \"author\": {\"description\": \"Author of the book\", \"title\": \"Author\", \"type\": \"string\"}, \"publication_year\": {\"description\": \"Publication year of the book\", \"title\": \"Publication Year\", \"type\": \"integer\"}, \"genre\": {\"description\": \"Genre of the book\", \"title\": \"Genre\", \"type\": \"string\"}, \"reviewer\": {\"allOf\": [{\"$ref\": \"#/$defs/Reviewer\"}], \"description\": \"Reviewer of the book\"}}, \"required\": [\"title\", \"author\", \"publication_year\", \"genre\", \"reviewer\"]}\n```", "output": "{\n  \"title\": \"The Midnight Library\",\n  \"author\": \"Matt Haig\",\n  \"publication_year\": 2020,\n  \"genre\": \"Fiction\",\n  \"reviewer\": {\n    \"name\": \"Laura Thompson\",\n    \"email\": \"laura.thompson@email.com\",\n    \"rating\": 4,\n    \"review\": \"*The Midnight Library* explores the labyrinth of choices and regrets through the captivating premise of a library that exists between life and death. Haig weaves a poignant narrative, inviting readers to ponder what could have been through the eyes of Nora Seed, a woman whose life feels riddled with disappointment.\\n\\nThe book’s charm lies in its heartwarming take on existentialism, presenting an enriching dialogue on the importance of embracing life’s uncertainties. Haig's lyrical prose skillfully intertwines hope and despair, encouraging readers to reflect on their own choices.\\n\\nWhile some may find the concept of parallel lives overwhelming, Haig strikes a delicate balance, leaving room for profound contemplation without veering into despair. The engaging character development and fantastical elements ensure that the story remains both relatable and thought-provoking.\\n\\nUltimately, *The Midnight Library* delivers an inspiring message that underscores the beauty of life in all its imperfections, making it a must-read for anyone seeking a blend of introspection and hope.\"\n  }\n}"}
{"input": "You are a text summarizer. Your task is to analyze and summarize the given text.\n### Input:\nIn the serene embrace of dawn, a symphony of colors fills the sky, each hue telling a story of the night’s quiet retreat. Birds awaken, their melodic calls echoing through the crisp air, heralding the promise of a new day. The world stirs from slumber, and the dew-kissed grass glistens in the gentle light. As sunlight spills over the horizon, it weaves through the leaves of ancient trees, creating patterns that dance on the forest floor. Here, every moment is a reminder of nature's beauty—a fleeting miracle that invites us to pause, breathe, and appreciate the tranquility of life unfolding anew.\n\n### Instructions:\n1. Create a concise summary that captures the main points of the text.\n2. The summary should be no more than 25% of the original text length.\n3. Extract 1-10 relevant keywords that represent the key concepts.\n\n### Format Instructions:\n1. Do NOT include headers, comments, or any additional text—only generate the JSON file.\n2. Strictly adhere to the following JSON format:\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {\"properties\": {\"foo\": {\"title\": \"Foo\", \"description\": \"a list of strings\", \"type\": \"array\", \"items\": {\"type\": \"string\"}}}, \"required\": [\"foo\"]}\nthe object {\"foo\": [\"bar\", \"baz\"]} is a well-formatted instance of the schema. The object {\"properties\": {\"foo\": [\"bar\", \"baz\"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{\"properties\": {\"text\": {\"description\": \"Text to summarize\", \"title\": \"Text\", \"type\": \"string\"}, \"summary\": {\"description\": \"Summary of the text\", \"title\": \"Summary\", \"type\": \"string\"}, \"keywords\": {\"description\": \"Keywords of the text\", \"items\": {\"type\": \"string\"}, \"maxItems\": 10, \"minItems\": 1, \"title\": \"Keywords\", \"type\": \"array\"}}, \"required\": [\"text\", \"summary\", \"keywords\"]}\n```", "output": "{\n  \"text\": \"In the serene embrace of dawn, a symphony of colors fills the sky, each hue telling a story of the night’s quiet retreat. Birds awaken, their melodic calls echoing through the crisp air, heralding the promise of a new day. The world stirs from slumber, and the dew-kissed grass glistens in the gentle light. As sunlight spills over the horizon, it weaves through the leaves of ancient trees, creating patterns that dance on the forest floor. Here, every moment is a reminder of nature's beauty—a fleeting miracle that invites us to pause, breathe, and appreciate the tranquility of life unfolding anew.\",\n  \"summary\": \"At dawn, the sky transforms with colors as birds sing, signaling a new day. The dew-covered grass sparkles while sunlight dances through the trees, reminding us to appreciate the fleeting beauty of nature and the tranquility of life.\",\n  \"keywords\": [\"dawn\", \"colors\", \"birds\", \"nature\", \"tranquility\", \"sunlight\", \"beauty\", \"forest\", \"life\", \"morning\"]\n}"}
{"input": "You are a text summarizer. Your task is to analyze and summarize the given text.\n### Input:\nIn the heart of an ancient forest, where sunlight filters through a canopy of emerald leaves, whispers of forgotten tales linger on the breeze. Here, time dances differently; each rustling leaf holds the essence of countless seasons. Amidst the gnarled roots, a delicate wildflower blooms, defying the shadows around it. Its vibrant petals, kissed by dew, tell a story of resilience and hope. Wandering deeper, one might stumble upon a hidden glade, where the air hums with the melody of chirping crickets and distant water. This enchanted realm reminds us that nature’s beauty often thrives in the places left unseen.\n\n### Instructions:\n1. Create a concise summary that captures the main points of the text.\n2. The summary should be no more than 25% of the original text length.\n3. Extract 1-10 relevant keywords that represent the key concepts.\n\n### Format Instructions:\n1. Do NOT include headers, comments, or any additional text—only generate the JSON file.\n2. Strictly adhere to the following JSON format:\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {\"properties\": {\"foo\": {\"title\": \"Foo\", \"description\": \"a list of strings\", \"type\": \"array\", \"items\": {\"type\": \"string\"}}}, \"required\": [\"foo\"]}\nthe object {\"foo\": [\"bar\", \"baz\"]} is a well-formatted instance of the schema. The object {\"properties\": {\"foo\": [\"bar\", \"baz\"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{\"properties\": {\"text\": {\"description\": \"Text to summarize\", \"title\": \"Text\", \"type\": \"string\"}, \"summary\": {\"description\": \"Summary of the text\", \"title\": \"Summary\", \"type\": \"string\"}, \"keywords\": {\"description\": \"Keywords of the text\", \"items\": {\"type\": \"string\"}, \"maxItems\": 10, \"minItems\": 1, \"title\": \"Keywords\", \"type\": \"array\"}}, \"required\": [\"text\", \"summary\", \"keywords\"]}\n```", "output": "{\n  \"text\": \"In the heart of an ancient forest, where sunlight filters through a canopy of emerald leaves, whispers of forgotten tales linger on the breeze. Here, time dances differently; each rustling leaf holds the essence of countless seasons. Amidst the gnarled roots, a delicate wildflower blooms, defying the shadows around it. Its vibrant petals, kissed by dew, tell a story of resilience and hope. Wandering deeper, one might stumble upon a hidden glade, where the air hums with the melody of chirping crickets and distant water. This enchanted realm reminds us that nature’s beauty often thrives in the places left unseen.\",\n  \"summary\": \"An ancient forest, filled with whispers of forgotten tales, hosts a resilient wildflower blooming amidst shadows. This enchanted realm, rich with nature's beauty and melodies, emphasizes how beauty often thrives in unseen places.\",\n  \"keywords\": [\"ancient forest\", \"wildflower\", \"resilience\", \"hope\", \"nature\", \"beauty\", \"hidden glade\", \"melody\", \"forgotten tales\", \"emerald leaves\"]\n}"}
{"input": "You are a text summarizer. Your task is to analyze and summarize the given text.\n### Input:\nIn the heart of a bustling city, where skyscrapers touch the clouds, there exists a hidden garden known only to a few. This verdant oasis, filled with vibrant flowers and ancient trees, offers a serene escape from urban chaos. Sunlight filters through the leaves, casting dappled shadows on the ground, while the gentle murmur of a nearby stream sings a soothing melody. Here, time seems to stand still, inviting visitors to pause, reflect, and connect with nature. As twilight descends, fireflies dance in the air, illuminating the garden with a magical glow, reminding all who enter of the beauty still found amidst the concrete jungle.\n\n### Instructions:\n1. Create a concise summary that captures the main points of the text.\n2. The summary should be no more than 25% of the original text length.\n3. Extract 1-10 relevant keywords that represent the key concepts.\n\n### Format Instructions:\n1. Do NOT include headers, comments, or any additional text—only generate the JSON file.\n2. Strictly adhere to the following JSON format:\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {\"properties\": {\"foo\": {\"title\": \"Foo\", \"description\": \"a list of strings\", \"type\": \"array\", \"items\": {\"type\": \"string\"}}}, \"required\": [\"foo\"]}\nthe object {\"foo\": [\"bar\", \"baz\"]} is a well-formatted instance of the schema. The object {\"properties\": {\"foo\": [\"bar\", \"baz\"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{\"properties\": {\"text\": {\"description\": \"Text to summarize\", \"title\": \"Text\", \"type\": \"string\"}, \"summary\": {\"description\": \"Summary of the text\", \"title\": \"Summary\", \"type\": \"string\"}, \"keywords\": {\"description\": \"Keywords of the text\", \"items\": {\"type\": \"string\"}, \"maxItems\": 10, \"minItems\": 1, \"title\": \"Keywords\", \"type\": \"array\"}}, \"required\": [\"text\", \"summary\", \"keywords\"]}\n```", "output": "{\n  \"text\": \"In the heart of a bustling city, where skyscrapers touch the clouds, there exists a hidden garden known only to a few. This verdant oasis, filled with vibrant flowers and ancient trees, offers a serene escape from urban chaos. Sunlight filters through the leaves, casting dappled shadows on the ground, while the gentle murmur of a nearby stream sings a soothing melody. Here, time seems to stand still, inviting visitors to pause, reflect, and connect with nature. As twilight descends, fireflies dance in the air, illuminating the garden with a magical glow, reminding all who enter of the beauty still found amidst the concrete jungle.\",\n  \"summary\": \"A hidden garden in a bustling city serves as a serene escape filled with vibrant flowers and ancient trees. Sunlight and a nearby stream create a calming atmosphere, encouraging reflection and connection with nature. Twilight brings fireflies that enhance the garden's magical beauty amidst urban chaos.\",\n  \"keywords\": [\"hidden garden\", \"city\", \"oasis\", \"nature\", \"serene escape\", \"twilight\", \"fireflies\", \"urban chaos\", \"reflection\", \"beauty\"]\n}"}
{"input": "You are a visionary game designer tasked with creating an innovative and engaging game concept.\n### Instructions:\n1. Create a unique game concept that combines compelling gameplay mechanics with an engaging narrative.\n2. Design 2-5 memorable characters with distinct personalities, motivations, and story arcs.\n3. Craft a rich setting that enhances the game's atmosphere and influences gameplay.\n4. Develop an intriguing plot with meaningful conflicts and satisfying resolution.\n5. Consider the game's genre and how it affects the overall experience.\n6. Specify the target platform(s) and technical requirements.\n7. Ensure the game idea is feasible and marketable while maintaining creativity.\n\n### Format Instructions:\n1. Do NOT include headers, comments, or any additional text—only generate the JSON file.\n2. Strictly adhere to the following JSON format:\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {\"properties\": {\"foo\": {\"title\": \"Foo\", \"description\": \"a list of strings\", \"type\": \"array\", \"items\": {\"type\": \"string\"}}}, \"required\": [\"foo\"]}\nthe object {\"foo\": [\"bar\", \"baz\"]} is a well-formatted instance of the schema. The object {\"properties\": {\"foo\": [\"bar\", \"baz\"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{\"$defs\": {\"Character\": {\"properties\": {\"name\": {\"description\": \"Name of the character\", \"title\": \"Name\", \"type\": \"string\"}, \"age\": {\"description\": \"Age of the character\", \"title\": \"Age\", \"type\": \"integer\"}, \"gender\": {\"description\": \"Gender of the character\", \"title\": \"Gender\", \"type\": \"string\"}, \"role\": {\"description\": \"Role of the character\", \"title\": \"Role\", \"type\": \"string\"}, \"biography\": {\"description\": \"Biography of the character\", \"title\": \"Biography\", \"type\": \"string\"}}, \"required\": [\"name\", \"age\", \"gender\", \"role\", \"biography\"], \"title\": \"Character\", \"type\": \"object\"}, \"Conflict\": {\"properties\": {\"name\": {\"description\": \"Name of the conflict\", \"title\": \"Name\", \"type\": \"string\"}, \"description\": {\"description\": \"Description of the conflict\", \"title\": \"Description\", \"type\": \"string\"}}, \"required\": [\"name\", \"description\"], \"title\": \"Conflict\", \"type\": \"object\"}, \"Genre\": {\"enum\": [\"action\", \"comedy\", \"drama\", \"horror\", \"mystery\"], \"title\": \"Genre\", \"type\": \"string\"}, \"Plot\": {\"properties\": {\"title\": {\"description\": \"Title of the plot\", \"title\": \"Title\", \"type\": \"string\"}, \"description\": {\"description\": \"Description of the plot\", \"title\": \"Description\", \"type\": \"string\"}}, \"required\": [\"title\", \"description\"], \"title\": \"Plot\", \"type\": \"object\"}, \"Resolution\": {\"properties\": {\"name\": {\"description\": \"Name of the resolution\", \"title\": \"Name\", \"type\": \"string\"}, \"description\": {\"description\": \"Description of the resolution\", \"title\": \"Description\", \"type\": \"string\"}}, \"required\": [\"name\", \"description\"], \"title\": \"Resolution\", \"type\": \"object\"}, \"Setting\": {\"properties\": {\"name\": {\"description\": \"Name of the setting\", \"title\": \"Name\", \"type\": \"string\"}, \"description\": {\"description\": \"Description of the setting\", \"title\": \"Description\", \"type\": \"string\"}}, \"required\": [\"name\", \"description\"], \"title\": \"Setting\", \"type\": \"object\"}}, \"properties\": {\"genre\": {\"allOf\": [{\"$ref\": \"#/$defs/Genre\"}], \"description\": \"Genre of the game\"}, \"characters\": {\"description\": \"Characters of the game\", \"items\": {\"$ref\": \"#/$defs/Character\"}, \"title\": \"Characters\", \"type\": \"array\"}, \"setting\": {\"allOf\": [{\"$ref\": \"#/$defs/Setting\"}], \"description\": \"Setting of the game\"}, \"plot\": {\"allOf\": [{\"$ref\": \"#/$defs/Plot\"}], \"description\": \"Plot of the game\"}, \"conflict\": {\"allOf\": [{\"$ref\": \"#/$defs/Conflict\"}], \"description\": \"Conflict of the game\"}, \"resolution\": {\"allOf\": [{\"$ref\": \"#/$defs/Resolution\"}], \"description\": \"Resolution of the game\"}, \"description\": {\"description\": \"Description of the game\", \"title\": \"Description\", \"type\": \"string\"}, \"type\": {\"description\": \"Type of the game\", \"title\": \"Type\", \"type\": \"string\"}, \"platform\": {\"description\": \"Platform of the game\", \"title\": \"Platform\", \"type\": \"string\"}, \"release_date\": {\"description\": \"Release date of the game\", \"title\": \"Release Date\", \"type\": \"string\"}, \"rating\": {\"description\": \"Rating of the game\", \"title\": \"Rating\", \"type\": \"number\"}}, \"required\": [\"genre\", \"characters\", \"setting\", \"plot\", \"conflict\", \"resolution\", \"description\", \"type\", \"platform\", \"release_date\", \"rating\"]}\n```", "output": "{\n  \"genre\": \"action\",\n  \"characters\": [\n    {\n      \"name\": \"Elysia\",\n      \"age\": 28,\n      \"gender\": \"female\",\n      \"role\": \"Protagonist\",\n      \"biography\": \"Elysia is a skilled hacker with a mysterious past. Raised in the underbelly of a futuristic city, she uses her talents to uncover hidden truths while seeking revenge for her brother's disappearance.\"\n    },\n    {\n      \"name\": \"Riven\",\n      \"age\": 35,\n      \"gender\": \"male\",\n      \"role\": \"Antagonist\",\n      \"biography\": \"Riven is a corporate mogul with a ruthless reputation. Driven by ambition and a desire for power, he will stop at nothing to eliminate threats to his empire, including Elysia.\"\n    },\n    {\n      \"name\": \"Kai\",\n      \"age\": 30,\n      \"gender\": \"non-binary\",\n      \"role\": \"Ally\",\n      \"biography\": \"Kai is a skilled mechanic and Elysia's closest friend. With a passion for technology and a heart of gold, they assist Elysia in her quest, providing gadgets and moral support.\"\n    },\n    {\n      \"name\": \"Juno\",\n      \"age\": 24,\n      \"gender\": \"female\",\n      \"role\": \"Informant\",\n      \"biography\": \"Juno is a street-smart informant who knows the city's secrets. She walks a fine line between the law and the underground, helping Elysia gather intel about Riven's operations.\"\n    }\n  ],\n  \"setting\": {\n    \"name\": \"Neo-Terra\",\n    \"description\": \"A sprawling, neon-lit metropolis filled with towering skyscrapers, dark alleys, and a stark divide between the wealthy elite and the struggling masses. Technology permeates every aspect of life, creating a rich environment for exploration and conflict.\"\n  },\n  \"plot\": {\n    \"title\": \"Echoes of the Past\",\n    \"description\": \"As Elysia uncovers the truth behind her brother's disappearance, she discovers a conspiracy that ties Riven to a series of dark experiments. With the help of her allies, she must navigate the treacherous landscape of Neo-Terra, facing off against Riven's corporate forces while unraveling the mystery of her brother's fate.\"\n  },\n  \"conflict\": {\n    \"name\": \"Corporate Conspiracy\",\n    \"description\": \"Elysia must confront Riven and his powerful corporation, which seeks to silence anyone who threatens their secrets. The battle between individual freedom and corporate control forms the core of the narrative.\"\n  },\n  \"resolution\": {\n    \"name\": \"Unveiling the Truth\",\n    \"description\": \"In a climactic showdown, Elysia confronts Riven, revealing the truth behind the experiments and her brother's fate. The conflict leads to a public uprising against the corporation, resulting in a new era of transparency and accountability in Neo-Terra.\"\n  },\n  \"description\": \"Echoes of the Past is an action-adventure game that combines hacking mechanics with exploration and combat. Players take on the role of Elysia, navigating a richly detailed world while unraveling a personal and corporate conspiracy.\",\n  \"type\": \"single-player\",\n  \"platform\": \"PC, PlayStation 5, Xbox Series X\",\n  \"release_date\": \"2025-06-15\",\n  \"rating\": 9.5\n}"}
{"input": "You are a visionary game designer tasked with creating an innovative and engaging game concept.\n### Instructions:\n1. Create a unique game concept that combines compelling gameplay mechanics with an engaging narrative.\n2. Design 2-5 memorable characters with distinct personalities, motivations, and story arcs.\n3. Craft a rich setting that enhances the game's atmosphere and influences gameplay.\n4. Develop an intriguing plot with meaningful conflicts and satisfying resolution.\n5. Consider the game's genre and how it affects the overall experience.\n6. Specify the target platform(s) and technical requirements.\n7. Ensure the game idea is feasible and marketable while maintaining creativity.\n\n### Format Instructions:\n1. Do NOT include headers, comments, or any additional text—only generate the JSON file.\n2. Strictly adhere to the following JSON format:\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {\"properties\": {\"foo\": {\"title\": \"Foo\", \"description\": \"a list of strings\", \"type\": \"array\", \"items\": {\"type\": \"string\"}}}, \"required\": [\"foo\"]}\nthe object {\"foo\": [\"bar\", \"baz\"]} is a well-formatted instance of the schema. The object {\"properties\": {\"foo\": [\"bar\", \"baz\"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{\"$defs\": {\"Character\": {\"properties\": {\"name\": {\"description\": \"Name of the character\", \"title\": \"Name\", \"type\": \"string\"}, \"age\": {\"description\": \"Age of the character\", \"title\": \"Age\", \"type\": \"integer\"}, \"gender\": {\"description\": \"Gender of the character\", \"title\": \"Gender\", \"type\": \"string\"}, \"role\": {\"description\": \"Role of the character\", \"title\": \"Role\", \"type\": \"string\"}, \"biography\": {\"description\": \"Biography of the character\", \"title\": \"Biography\", \"type\": \"string\"}}, \"required\": [\"name\", \"age\", \"gender\", \"role\", \"biography\"], \"title\": \"Character\", \"type\": \"object\"}, \"Conflict\": {\"properties\": {\"name\": {\"description\": \"Name of the conflict\", \"title\": \"Name\", \"type\": \"string\"}, \"description\": {\"description\": \"Description of the conflict\", \"title\": \"Description\", \"type\": \"string\"}}, \"required\": [\"name\", \"description\"], \"title\": \"Conflict\", \"type\": \"object\"}, \"Genre\": {\"enum\": [\"action\", \"comedy\", \"drama\", \"horror\", \"mystery\"], \"title\": \"Genre\", \"type\": \"string\"}, \"Plot\": {\"properties\": {\"title\": {\"description\": \"Title of the plot\", \"title\": \"Title\", \"type\": \"string\"}, \"description\": {\"description\": \"Description of the plot\", \"title\": \"Description\", \"type\": \"string\"}}, \"required\": [\"title\", \"description\"], \"title\": \"Plot\", \"type\": \"object\"}, \"Resolution\": {\"properties\": {\"name\": {\"description\": \"Name of the resolution\", \"title\": \"Name\", \"type\": \"string\"}, \"description\": {\"description\": \"Description of the resolution\", \"title\": \"Description\", \"type\": \"string\"}}, \"required\": [\"name\", \"description\"], \"title\": \"Resolution\", \"type\": \"object\"}, \"Setting\": {\"properties\": {\"name\": {\"description\": \"Name of the setting\", \"title\": \"Name\", \"type\": \"string\"}, \"description\": {\"description\": \"Description of the setting\", \"title\": \"Description\", \"type\": \"string\"}}, \"required\": [\"name\", \"description\"], \"title\": \"Setting\", \"type\": \"object\"}}, \"properties\": {\"genre\": {\"allOf\": [{\"$ref\": \"#/$defs/Genre\"}], \"description\": \"Genre of the game\"}, \"characters\": {\"description\": \"Characters of the game\", \"items\": {\"$ref\": \"#/$defs/Character\"}, \"title\": \"Characters\", \"type\": \"array\"}, \"setting\": {\"allOf\": [{\"$ref\": \"#/$defs/Setting\"}], \"description\": \"Setting of the game\"}, \"plot\": {\"allOf\": [{\"$ref\": \"#/$defs/Plot\"}], \"description\": \"Plot of the game\"}, \"conflict\": {\"allOf\": [{\"$ref\": \"#/$defs/Conflict\"}], \"description\": \"Conflict of the game\"}, \"resolution\": {\"allOf\": [{\"$ref\": \"#/$defs/Resolution\"}], \"description\": \"Resolution of the game\"}, \"description\": {\"description\": \"Description of the game\", \"title\": \"Description\", \"type\": \"string\"}, \"type\": {\"description\": \"Type of the game\", \"title\": \"Type\", \"type\": \"string\"}, \"platform\": {\"description\": \"Platform of the game\", \"title\": \"Platform\", \"type\": \"string\"}, \"release_date\": {\"description\": \"Release date of the game\", \"title\": \"Release Date\", \"type\": \"string\"}, \"rating\": {\"description\": \"Rating of the game\", \"title\": \"Rating\", \"type\": \"number\"}}, \"required\": [\"genre\", \"characters\", \"setting\", \"plot\", \"conflict\", \"resolution\", \"description\", \"type\", \"platform\", \"release_date\", \"rating\"]}\n```", "output": "{\n  \"genre\": \"mystery\",\n  \"characters\": [\n    {\n      \"name\": \"Elara Quinn\",\n      \"age\": 28,\n      \"gender\": \"female\",\n      \"role\": \"protagonist\",\n      \"biography\": \"A determined investigative journalist with a knack for uncovering hidden truths. Elara is haunted by the mysterious disappearance of her younger brother, which drives her relentless pursuit of justice.\"\n    },\n    {\n      \"name\": \"Victor Armitage\",\n      \"age\": 35,\n      \"gender\": \"male\",\n      \"role\": \"antagonist\",\n      \"biography\": \"A charismatic but morally ambiguous detective who believes the ends justify the means. Victor is on a personal quest for redemption after a case went horribly wrong, leading him to cross paths with Elara.\"\n    },\n    {\n      \"name\": \"Maya Chen\",\n      \"age\": 24,\n      \"gender\": \"female\",\n      \"role\": \"sidekick\",\n      \"biography\": \"Elara's tech-savvy friend who provides crucial support and comic relief. Maya is fiercely loyal and uses her hacking skills to expose corrupt individuals, but struggles with her own insecurities.\"\n    },\n    {\n      \"name\": \"Inspector Raymond Hargrove\",\n      \"age\": 50,\n      \"gender\": \"male\",\n      \"role\": \"mentor\",\n      \"biography\": \"A seasoned police inspector who becomes an unlikely ally for Elara. He is skeptical of her methods but ultimately respects her passion and commitment to finding the truth.\"\n    }\n  ],\n  \"setting\": {\n    \"name\": \"The City of Shadows\",\n    \"description\": \"A sprawling metropolis filled with hidden secrets and dark alleys. The city is divided into wealthy districts and neglected neighborhoods, with a constant undercurrent of tension between its inhabitants. Rain-soaked streets and flickering neon lights create a moody atmosphere that enhances the mystery.\"\n  },\n  \"plot\": {\n    \"title\": \"Echoes of the Past\",\n    \"description\": \"Elara Quinn returns to her hometown to investigate her brother's disappearance, uncovering a web of deceit that implicates powerful figures in the city. As she digs deeper, she finds herself in a dangerous game of cat and mouse with Victor Armitage, who has his own motives tied to her brother's fate.\"\n  },\n  \"conflict\": {\n    \"name\": \"Truth vs. Deception\",\n    \"description\": \"Elara's quest for the truth leads her into conflict with Victor, who has his own agenda. As they both chase after the same clues, their paths intertwine, revealing deeper secrets that challenge their moral compasses and force them to confront their pasts.\"\n  },\n  \"resolution\": {\n    \"name\": \"Revelation and Redemption\",\n    \"description\": \"In a climactic showdown, Elara uncovers the truth about her brother's fate, leading to a confrontation with Victor. Both characters must make choices that will define their futures, ultimately leading to a resolution that brings closure to their personal stories while leaving room for potential sequels.\"\n  },\n  \"description\": \"Echoes of the Past is a narrative-driven mystery game that combines investigative gameplay with character-driven storytelling. Players will navigate the complex relationships between characters, solve puzzles, and make choices that affect the outcome of the story.\",\n  \"type\": \"adventure\",\n  \"platform\": \"PC, PlayStation, Xbox\",\n  \"release_date\": \"2025-05-15\",\n  \"rating\": 9.0\n}"}
{"input": "You are a visionary game designer tasked with creating an innovative and engaging game concept.\n### Instructions:\n1. Create a unique game concept that combines compelling gameplay mechanics with an engaging narrative.\n2. Design 2-5 memorable characters with distinct personalities, motivations, and story arcs.\n3. Craft a rich setting that enhances the game's atmosphere and influences gameplay.\n4. Develop an intriguing plot with meaningful conflicts and satisfying resolution.\n5. Consider the game's genre and how it affects the overall experience.\n6. Specify the target platform(s) and technical requirements.\n7. Ensure the game idea is feasible and marketable while maintaining creativity.\n\n### Format Instructions:\n1. Do NOT include headers, comments, or any additional text—only generate the JSON file.\n2. Strictly adhere to the following JSON format:\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {\"properties\": {\"foo\": {\"title\": \"Foo\", \"description\": \"a list of strings\", \"type\": \"array\", \"items\": {\"type\": \"string\"}}}, \"required\": [\"foo\"]}\nthe object {\"foo\": [\"bar\", \"baz\"]} is a well-formatted instance of the schema. The object {\"properties\": {\"foo\": [\"bar\", \"baz\"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{\"$defs\": {\"Character\": {\"properties\": {\"name\": {\"description\": \"Name of the character\", \"title\": \"Name\", \"type\": \"string\"}, \"age\": {\"description\": \"Age of the character\", \"title\": \"Age\", \"type\": \"integer\"}, \"gender\": {\"description\": \"Gender of the character\", \"title\": \"Gender\", \"type\": \"string\"}, \"role\": {\"description\": \"Role of the character\", \"title\": \"Role\", \"type\": \"string\"}, \"biography\": {\"description\": \"Biography of the character\", \"title\": \"Biography\", \"type\": \"string\"}}, \"required\": [\"name\", \"age\", \"gender\", \"role\", \"biography\"], \"title\": \"Character\", \"type\": \"object\"}, \"Conflict\": {\"properties\": {\"name\": {\"description\": \"Name of the conflict\", \"title\": \"Name\", \"type\": \"string\"}, \"description\": {\"description\": \"Description of the conflict\", \"title\": \"Description\", \"type\": \"string\"}}, \"required\": [\"name\", \"description\"], \"title\": \"Conflict\", \"type\": \"object\"}, \"Genre\": {\"enum\": [\"action\", \"comedy\", \"drama\", \"horror\", \"mystery\"], \"title\": \"Genre\", \"type\": \"string\"}, \"Plot\": {\"properties\": {\"title\": {\"description\": \"Title of the plot\", \"title\": \"Title\", \"type\": \"string\"}, \"description\": {\"description\": \"Description of the plot\", \"title\": \"Description\", \"type\": \"string\"}}, \"required\": [\"title\", \"description\"], \"title\": \"Plot\", \"type\": \"object\"}, \"Resolution\": {\"properties\": {\"name\": {\"description\": \"Name of the resolution\", \"title\": \"Name\", \"type\": \"string\"}, \"description\": {\"description\": \"Description of the resolution\", \"title\": \"Description\", \"type\": \"string\"}}, \"required\": [\"name\", \"description\"], \"title\": \"Resolution\", \"type\": \"object\"}, \"Setting\": {\"properties\": {\"name\": {\"description\": \"Name of the setting\", \"title\": \"Name\", \"type\": \"string\"}, \"description\": {\"description\": \"Description of the setting\", \"title\": \"Description\", \"type\": \"string\"}}, \"required\": [\"name\", \"description\"], \"title\": \"Setting\", \"type\": \"object\"}}, \"properties\": {\"genre\": {\"allOf\": [{\"$ref\": \"#/$defs/Genre\"}], \"description\": \"Genre of the game\"}, \"characters\": {\"description\": \"Characters of the game\", \"items\": {\"$ref\": \"#/$defs/Character\"}, \"title\": \"Characters\", \"type\": \"array\"}, \"setting\": {\"allOf\": [{\"$ref\": \"#/$defs/Setting\"}], \"description\": \"Setting of the game\"}, \"plot\": {\"allOf\": [{\"$ref\": \"#/$defs/Plot\"}], \"description\": \"Plot of the game\"}, \"conflict\": {\"allOf\": [{\"$ref\": \"#/$defs/Conflict\"}], \"description\": \"Conflict of the game\"}, \"resolution\": {\"allOf\": [{\"$ref\": \"#/$defs/Resolution\"}], \"description\": \"Resolution of the game\"}, \"description\": {\"description\": \"Description of the game\", \"title\": \"Description\", \"type\": \"string\"}, \"type\": {\"description\": \"Type of the game\", \"title\": \"Type\", \"type\": \"string\"}, \"platform\": {\"description\": \"Platform of the game\", \"title\": \"Platform\", \"type\": \"string\"}, \"release_date\": {\"description\": \"Release date of the game\", \"title\": \"Release Date\", \"type\": \"string\"}, \"rating\": {\"description\": \"Rating of the game\", \"title\": \"Rating\", \"type\": \"number\"}}, \"required\": [\"genre\", \"characters\", \"setting\", \"plot\", \"conflict\", \"resolution\", \"description\", \"type\", \"platform\", \"release_date\", \"rating\"]}\n```", "output": "{\n  \"genre\": \"mystery\",\n  \"characters\": [\n    {\n      \"name\": \"Elara Winters\",\n      \"age\": 28,\n      \"gender\": \"Female\",\n      \"role\": \"Protagonist\",\n      \"biography\": \"A determined investigative journalist who seeks to uncover the truth behind her brother's disappearance. Elara is known for her tenacity and resourcefulness, often pushing boundaries in her pursuit of justice.\"\n    },\n    {\n      \"name\": \"Marcus Grey\",\n      \"age\": 35,\n      \"gender\": \"Male\",\n      \"role\": \"Antagonist\",\n      \"biography\": \"A former detective turned private investigator with a dark past. Marcus has a personal vendetta against Elara, believing she is responsible for the downfall of his career. He is cunning and manipulative, often using psychological tricks to outsmart his opponents.\"\n    },\n    {\n      \"name\": \"Nina Reyes\",\n      \"age\": 40,\n      \"gender\": \"Female\",\n      \"role\": \"Ally\",\n      \"biography\": \"A tech-savvy hacker with a mysterious background. Nina assists Elara by providing crucial information and technological support. She is fiercely loyal but harbors her own secrets that could jeopardize their mission.\"\n    },\n    {\n      \"name\": \"Victor Hale\",\n      \"age\": 50,\n      \"gender\": \"Male\",\n      \"role\": \"Mysterious Mentor\",\n      \"biography\": \"An enigmatic figure with connections to the criminal underworld. Victor provides Elara with guidance but has ulterior motives. His past is shrouded in mystery, and his true intentions are never clear.\"\n    }\n  ],\n  \"setting\": {\n    \"name\": \"The Shattered City\",\n    \"description\": \"A sprawling metropolis filled with dark alleys and hidden secrets. The city is divided into zones, each with its own unique atmosphere ranging from opulent high-rises to rundown districts. The contrast between wealth and poverty is stark, and the environment plays a crucial role in the narrative as Elara navigates through its dangers.\"\n  },\n  \"plot\": {\n    \"title\": \"Echoes of the Past\",\n    \"description\": \"Elara Winters returns to her hometown to investigate the mysterious disappearance of her brother, only to find herself entangled in a web of corruption and deceit. As Elara uncovers the truth, she must confront her own past and the choices that have led her to this point, which ultimately intertwine with the fates of those around her.\"\n  },\n  \"conflict\": {\n    \"name\": \"The Hunt for Truth\",\n    \"description\": \"Elara must navigate a dangerous game of cat and mouse with Marcus Grey, who seeks to thwart her investigation at every turn. The conflict intensifies as both characters reveal hidden motivations and personal stakes in the unfolding drama, leading to a climactic confrontation.\"\n  },\n  \"resolution\": {\n    \"name\": \"Revelation and Redemption\",\n    \"description\": \"Elara uncovers the truth about her brother's disappearance and Marcus's dark secrets, leading to a final showdown that tests her resolve. In the end, she must make a choice that could redeem her brother's legacy and alter the course of her own life.\"\n  },\n  \"description\": \"Echoes of the Past is a narrative-driven mystery game that combines investigative gameplay mechanics with character-driven storytelling. Players will gather clues, engage in dialogue, and solve puzzles while exploring the richly detailed environment of The Shattered City.\",\n  \"type\": \"narrative adventure\",\n  \"platform\": \"PC, PlayStation, Xbox\",\n  \"release_date\": \"2025-09-15\",\n  \"rating\": 4.5\n}"}
{"input": "You are a visionary architect and real estate expert tasked with creating a detailed description of a unique property.\n### Instructions:\n1. Create a distinctive house with compelling architectural features and a cohesive design theme.\n2. Design multiple rooms that flow together logically and serve clear purposes.\n3. Craft rich descriptions that highlight unique features, materials, and design elements.\n4. Consider the property's location and how it influences the design and value.\n5. Include both practical amenities and luxurious or unexpected features.\n6. Ensure room sizes are realistic and proportional.\n7. Set an appropriate price based on features, location, and market conditions.\n\n### Format Instructions:\n1. Do NOT include headers, comments, or any additional text—only generate the JSON file.\n2. Strictly adhere to the following JSON format:\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {\"properties\": {\"foo\": {\"title\": \"Foo\", \"description\": \"a list of strings\", \"type\": \"array\", \"items\": {\"type\": \"string\"}}}, \"required\": [\"foo\"]}\nthe object {\"foo\": [\"bar\", \"baz\"]} is a well-formatted instance of the schema. The object {\"properties\": {\"foo\": [\"bar\", \"baz\"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{\"$defs\": {\"Room\": {\"properties\": {\"name\": {\"description\": \"Name of the room\", \"title\": \"Name\", \"type\": \"string\"}, \"description\": {\"description\": \"Description of the room\", \"title\": \"Description\", \"type\": \"string\"}, \"area\": {\"description\": \"Area of the room\", \"title\": \"Area\", \"type\": \"number\"}, \"type\": {\"allOf\": [{\"$ref\": \"#/$defs/Type\"}], \"description\": \"Type of the room\"}}, \"required\": [\"name\", \"description\", \"area\", \"type\"], \"title\": \"Room\", \"type\": \"object\"}, \"Type\": {\"enum\": [\"bedroom\", \"living_room\", \"kitchen\", \"bathroom\", \"office\", \"garage\"], \"title\": \"Type\", \"type\": \"string\"}}, \"properties\": {\"name\": {\"description\": \"Name of the house\", \"title\": \"Name\", \"type\": \"string\"}, \"rooms\": {\"description\": \"Rooms of the house\", \"items\": {\"$ref\": \"#/$defs/Room\"}, \"title\": \"Rooms\", \"type\": \"array\"}, \"description\": {\"description\": \"Description of the house\", \"title\": \"Description\", \"type\": \"string\"}, \"location\": {\"description\": \"Location of the house\", \"title\": \"Location\", \"type\": \"string\"}, \"price\": {\"description\": \"Price of the house\", \"title\": \"Price\", \"type\": \"integer\"}, \"is_unique\": {\"description\": \"Is the house unique\", \"title\": \"Is Unique\", \"type\": \"boolean\"}, \"is_tradable\": {\"description\": \"Is the house tradable\", \"title\": \"Is Tradable\", \"type\": \"boolean\"}}, \"required\": [\"name\", \"rooms\", \"description\", \"location\", \"price\", \"is_unique\", \"is_tradable\"]}\n```", "output": "{\n  \"name\": \"The Horizon House\",\n  \"rooms\": [\n    {\n      \"name\": \"Grand Living Room\",\n      \"description\": \"A spacious living area with floor-to-ceiling windows that offer breathtaking views of the ocean. The room features a stunning stone fireplace, custom wood paneling, and a blend of modern and rustic furnishings.\",\n      \"area\": 600,\n      \"type\": \"living_room\"\n    },\n    {\n      \"name\": \"Gourmet Kitchen\",\n      \"description\": \"An expansive kitchen equipped with high-end stainless steel appliances, a large central island with bar seating, and custom cabinetry. The kitchen opens to a dining area with panoramic views, making it perfect for entertaining.\",\n      \"area\": 400,\n      \"type\": \"kitchen\"\n    },\n    {\n      \"name\": \"Master Suite\",\n      \"description\": \"A luxurious master bedroom featuring a private balcony overlooking the sea, a walk-in closet, and an en-suite bathroom with a soaking tub and rainfall shower. The room is designed with calming colors and natural materials.\",\n      \"area\": 500,\n      \"type\": \"bedroom\"\n    },\n    {\n      \"name\": \"Guest Bedroom\",\n      \"description\": \"A cozy guest room with an ensuite bathroom, featuring warm wood accents and large windows that fill the space with natural light. This room provides a tranquil retreat for visitors.\",\n      \"area\": 300,\n      \"type\": \"bedroom\"\n    },\n    {\n      \"name\": \"Home Office\",\n      \"description\": \"A bright and airy office space with built-in shelving and a large desk positioned by a window, offering inspiring views. The room is designed for productivity and comfort.\",\n      \"area\": 250,\n      \"type\": \"office\"\n    },\n    {\n      \"name\": \"Spa-like Bathroom\",\n      \"description\": \"An elegant bathroom designed as a personal spa, featuring a double vanity, heated floors, and a spacious walk-in shower. The materials used include marble and teak for a sophisticated touch.\",\n      \"area\": 200,\n      \"type\": \"bathroom\"\n    },\n    {\n      \"name\": \"Garage\",\n      \"description\": \"A two-car garage with ample storage space and direct access to the main house. Designed with modern finishes, it includes an electric vehicle charging station.\",\n      \"area\": 400,\n      \"type\": \"garage\"\n    }\n  ],\n  \"description\": \"The Horizon House is a breathtaking coastal retreat that seamlessly combines modern sophistication with natural beauty. Nestled on a hillside with panoramic views of the ocean, this home features expansive living spaces, luxurious amenities, and eco-friendly design elements. Surrounded by lush landscaping and easy access to the beach, this property is perfect for those seeking tranquility and style.\",\n  \"location\": \"Malibu, California\",\n  \"price\": 4800000,\n  \"is_unique\": true,\n  \"is_tradable\": true\n}"}
{"input": "You are a visionary architect and real estate expert tasked with creating a detailed description of a unique property.\n### Instructions:\n1. Create a distinctive house with compelling architectural features and a cohesive design theme.\n2. Design multiple rooms that flow together logically and serve clear purposes.\n3. Craft rich descriptions that highlight unique features, materials, and design elements.\n4. Consider the property's location and how it influences the design and value.\n5. Include both practical amenities and luxurious or unexpected features.\n6. Ensure room sizes are realistic and proportional.\n7. Set an appropriate price based on features, location, and market conditions.\n\n### Format Instructions:\n1. Do NOT include headers, comments, or any additional text—only generate the JSON file.\n2. Strictly adhere to the following JSON format:\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {\"properties\": {\"foo\": {\"title\": \"Foo\", \"description\": \"a list of strings\", \"type\": \"array\", \"items\": {\"type\": \"string\"}}}, \"required\": [\"foo\"]}\nthe object {\"foo\": [\"bar\", \"baz\"]} is a well-formatted instance of the schema. The object {\"properties\": {\"foo\": [\"bar\", \"baz\"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{\"$defs\": {\"Room\": {\"properties\": {\"name\": {\"description\": \"Name of the room\", \"title\": \"Name\", \"type\": \"string\"}, \"description\": {\"description\": \"Description of the room\", \"title\": \"Description\", \"type\": \"string\"}, \"area\": {\"description\": \"Area of the room\", \"title\": \"Area\", \"type\": \"number\"}, \"type\": {\"allOf\": [{\"$ref\": \"#/$defs/Type\"}], \"description\": \"Type of the room\"}}, \"required\": [\"name\", \"description\", \"area\", \"type\"], \"title\": \"Room\", \"type\": \"object\"}, \"Type\": {\"enum\": [\"bedroom\", \"living_room\", \"kitchen\", \"bathroom\", \"office\", \"garage\"], \"title\": \"Type\", \"type\": \"string\"}}, \"properties\": {\"name\": {\"description\": \"Name of the house\", \"title\": \"Name\", \"type\": \"string\"}, \"rooms\": {\"description\": \"Rooms of the house\", \"items\": {\"$ref\": \"#/$defs/Room\"}, \"title\": \"Rooms\", \"type\": \"array\"}, \"description\": {\"description\": \"Description of the house\", \"title\": \"Description\", \"type\": \"string\"}, \"location\": {\"description\": \"Location of the house\", \"title\": \"Location\", \"type\": \"string\"}, \"price\": {\"description\": \"Price of the house\", \"title\": \"Price\", \"type\": \"integer\"}, \"is_unique\": {\"description\": \"Is the house unique\", \"title\": \"Is Unique\", \"type\": \"boolean\"}, \"is_tradable\": {\"description\": \"Is the house tradable\", \"title\": \"Is Tradable\", \"type\": \"boolean\"}}, \"required\": [\"name\", \"rooms\", \"description\", \"location\", \"price\", \"is_unique\", \"is_tradable\"]}\n```", "output": "{\n  \"name\": \"The Horizon Retreat\",\n  \"rooms\": [\n    {\n      \"name\": \"Great Room\",\n      \"description\": \"An expansive, sunlit space featuring floor-to-ceiling windows that offer panoramic views of the coastline. The open layout seamlessly integrates the living area with the dining space, adorned with natural wood beams and a stone fireplace that serves as the focal point.\",\n      \"area\": 450,\n      \"type\": \"living_room\"\n    },\n    {\n      \"name\": \"Chef's Kitchen\",\n      \"description\": \"A gourmet kitchen equipped with high-end stainless steel appliances, a large island with quartz countertops, and custom cabinetry crafted from reclaimed wood. The kitchen also features a walk-in pantry and a breakfast nook that overlooks the garden.\",\n      \"area\": 300,\n      \"type\": \"kitchen\"\n    },\n    {\n      \"name\": \"Master Suite\",\n      \"description\": \"A luxurious master bedroom that provides a sanctuary of tranquility, complete with a private terrace. The suite includes a spacious walk-in closet and an en-suite bathroom featuring a soaking tub, dual vanities, and a rain shower, all accented with marble finishes.\",\n      \"area\": 400,\n      \"type\": \"bedroom\"\n    },\n    {\n      \"name\": \"Guest Bedroom\",\n      \"description\": \"A comfortable guest bedroom designed with minimalist aesthetics and large windows that invite natural light. It comes with an en-suite bathroom, ensuring privacy for visitors.\",\n      \"area\": 250,\n      \"type\": \"bedroom\"\n    },\n    {\n      \"name\": \"Home Office\",\n      \"description\": \"A dedicated workspace featuring built-in shelves and a large desk positioned to take advantage of the inspiring views. The office is designed for productivity, with soundproofing and ample electrical outlets.\",\n      \"area\": 200,\n      \"type\": \"office\"\n    },\n    {\n      \"name\": \"Spa Bathroom\",\n      \"description\": \"A luxurious spa-like bathroom that includes a steam shower, heated floors, and a freestanding soaking tub positioned under a skylight, allowing for a relaxing bathing experience.\",\n      \"area\": 180,\n      \"type\": \"bathroom\"\n    },\n    {\n      \"name\": \"Garage\",\n      \"description\": \"A spacious two-car garage with additional storage space and an electric vehicle charging station, designed for convenience and functionality.\",\n      \"area\": 400,\n      \"type\": \"garage\"\n    }\n  ],\n  \"description\": \"The Horizon Retreat is a masterpiece of modern architecture, seamlessly blending indoor and outdoor spaces. Located on a cliff overlooking the ocean, this home offers a unique combination of luxury, comfort, and breathtaking views. The use of sustainable materials and energy-efficient design features makes this property not only beautiful but also environmentally conscious.\",\n  \"location\": \"Pacific Coastal Highway, California\",\n  \"price\": 3500000,\n  \"is_unique\": true,\n  \"is_tradable\": true\n}"}
{"input": "You are a visionary architect and real estate expert tasked with creating a detailed description of a unique property.\n### Instructions:\n1. Create a distinctive house with compelling architectural features and a cohesive design theme.\n2. Design multiple rooms that flow together logically and serve clear purposes.\n3. Craft rich descriptions that highlight unique features, materials, and design elements.\n4. Consider the property's location and how it influences the design and value.\n5. Include both practical amenities and luxurious or unexpected features.\n6. Ensure room sizes are realistic and proportional.\n7. Set an appropriate price based on features, location, and market conditions.\n\n### Format Instructions:\n1. Do NOT include headers, comments, or any additional text—only generate the JSON file.\n2. Strictly adhere to the following JSON format:\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {\"properties\": {\"foo\": {\"title\": \"Foo\", \"description\": \"a list of strings\", \"type\": \"array\", \"items\": {\"type\": \"string\"}}}, \"required\": [\"foo\"]}\nthe object {\"foo\": [\"bar\", \"baz\"]} is a well-formatted instance of the schema. The object {\"properties\": {\"foo\": [\"bar\", \"baz\"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{\"$defs\": {\"Room\": {\"properties\": {\"name\": {\"description\": \"Name of the room\", \"title\": \"Name\", \"type\": \"string\"}, \"description\": {\"description\": \"Description of the room\", \"title\": \"Description\", \"type\": \"string\"}, \"area\": {\"description\": \"Area of the room\", \"title\": \"Area\", \"type\": \"number\"}, \"type\": {\"allOf\": [{\"$ref\": \"#/$defs/Type\"}], \"description\": \"Type of the room\"}}, \"required\": [\"name\", \"description\", \"area\", \"type\"], \"title\": \"Room\", \"type\": \"object\"}, \"Type\": {\"enum\": [\"bedroom\", \"living_room\", \"kitchen\", \"bathroom\", \"office\", \"garage\"], \"title\": \"Type\", \"type\": \"string\"}}, \"properties\": {\"name\": {\"description\": \"Name of the house\", \"title\": \"Name\", \"type\": \"string\"}, \"rooms\": {\"description\": \"Rooms of the house\", \"items\": {\"$ref\": \"#/$defs/Room\"}, \"title\": \"Rooms\", \"type\": \"array\"}, \"description\": {\"description\": \"Description of the house\", \"title\": \"Description\", \"type\": \"string\"}, \"location\": {\"description\": \"Location of the house\", \"title\": \"Location\", \"type\": \"string\"}, \"price\": {\"description\": \"Price of the house\", \"title\": \"Price\", \"type\": \"integer\"}, \"is_unique\": {\"description\": \"Is the house unique\", \"title\": \"Is Unique\", \"type\": \"boolean\"}, \"is_tradable\": {\"description\": \"Is the house tradable\", \"title\": \"Is Tradable\", \"type\": \"boolean\"}}, \"required\": [\"name\", \"rooms\", \"description\", \"location\", \"price\", \"is_unique\", \"is_tradable\"]}\n```", "output": "{\n  \"name\": \"The Cliffside Retreat\",\n  \"rooms\": [\n    {\n      \"name\": \"Master Bedroom\",\n      \"description\": \"A spacious 400 sq ft master bedroom featuring panoramic ocean views through floor-to-ceiling windows, adorned with warm wood paneling and a private balcony. The room includes a king-sized bed, a walk-in closet, and an en-suite bathroom.\",\n      \"area\": 400,\n      \"type\": \"bedroom\"\n    },\n    {\n      \"name\": \"Guest Bedroom\",\n      \"description\": \"A cozy 250 sq ft guest bedroom with a queen-sized bed, large windows offering sunset views, and tasteful decor. The room features a built-in wardrobe and a serene reading nook, perfect for relaxation.\",\n      \"area\": 250,\n      \"type\": \"bedroom\"\n    },\n    {\n      \"name\": \"Living Room\",\n      \"description\": \"An expansive 600 sq ft living room with vaulted ceilings and a stunning stone fireplace as the centerpiece. Large, sliding glass doors lead to a wraparound deck, seamlessly blending indoor and outdoor living spaces.\",\n      \"area\": 600,\n      \"type\": \"living_room\"\n    },\n    {\n      \"name\": \"Kitchen\",\n      \"description\": \"A modern 300 sq ft kitchen equipped with top-of-the-line appliances, an oversized island with seating for four, and custom cabinetry made from reclaimed wood. The space is both functional and inviting, perfect for entertaining.\",\n      \"area\": 300,\n      \"type\": \"kitchen\"\n    },\n    {\n      \"name\": \"Dining Room\",\n      \"description\": \"A formal 200 sq ft dining room featuring a large oak table that seats eight, accented by a contemporary chandelier. This room offers gorgeous views through expansive windows that invite natural light.\",\n      \"area\": 200,\n      \"type\": \"living_room\"\n    },\n    {\n      \"name\": \"Home Office\",\n      \"description\": \"A quiet 150 sq ft home office with built-in bookshelves and a large desk overlooking the garden. The room is designed for productivity, featuring soundproof walls and ample natural light.\",\n      \"area\": 150,\n      \"type\": \"office\"\n    },\n    {\n      \"name\": \"Main Bathroom\",\n      \"description\": \"A luxurious 200 sq ft main bathroom with a soaking tub overlooking the ocean, a separate walk-in shower, and double sinks. High-end finishes and natural stone tiles create a spa-like atmosphere.\",\n      \"area\": 200,\n      \"type\": \"bathroom\"\n    },\n    {\n      \"name\": \"Garage\",\n      \"description\": \"A spacious 400 sq ft garage with room for two vehicles and additional storage space. Equipped with an electric car charger and a workbench area, it combines practicality with efficiency.\",\n      \"area\": 400,\n      \"type\": \"garage\"\n    }\n  ],\n  \"description\": \"The Cliffside Retreat is a stunning modern home perched on the edge of a cliff, offering unparalleled views of the ocean and surrounding landscape. Designed with eco-friendly materials and energy-efficient technology, this property seamlessly integrates luxury with sustainability. The open-concept layout promotes a natural flow between spaces, creating a welcoming environment for both relaxation and entertainment.\",\n  \"location\": \"Big Sur, California\",\n  \"price\": 2950000,\n  \"is_unique\": true,\n  \"is_tradable\": true\n}"}
{"input": "You are a cosmic architect tasked with designing an extraordinary and unique solar system.\n### Instructions:\n1. Create a distinctive star system with compelling astronomical features and coherent cosmic dynamics.\n2. Design a central star with unique properties that influence the entire system.\n3. Craft 2-8 diverse planets with fascinating characteristics, atmospheres, and potential for life.\n4. Consider the system's location in the galaxy and how it affects its development.\n5. Include both common astronomical phenomena and unexpected cosmic features.\n6. Ensure planetary distances and sizes follow basic astronomical principles.\n7. Make the system scientifically plausible while maintaining creativity.\n\n### Format Instructions:\n1. Do NOT include headers, comments, or any additional text—only generate the JSON file.\n2. Strictly adhere to the following JSON format:\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {\"properties\": {\"foo\": {\"title\": \"Foo\", \"description\": \"a list of strings\", \"type\": \"array\", \"items\": {\"type\": \"string\"}}}, \"required\": [\"foo\"]}\nthe object {\"foo\": [\"bar\", \"baz\"]} is a well-formatted instance of the schema. The object {\"properties\": {\"foo\": [\"bar\", \"baz\"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{\"$defs\": {\"Planet\": {\"properties\": {\"name\": {\"description\": \"Name of the planet\", \"title\": \"Name\", \"type\": \"string\"}, \"description\": {\"description\": \"Description of the planet\", \"title\": \"Description\", \"type\": \"string\"}, \"size\": {\"description\": \"Size of the planet\", \"title\": \"Size\", \"type\": \"number\"}, \"population\": {\"description\": \"Population of the planet\", \"title\": \"Population\", \"type\": \"integer\"}, \"distance_from_sun\": {\"description\": \"Distance from the sun\", \"title\": \"Distance From Sun\", \"type\": \"number\"}}, \"required\": [\"name\", \"description\", \"size\", \"population\", \"distance_from_sun\"], \"title\": \"Planet\", \"type\": \"object\"}, \"Star\": {\"properties\": {\"name\": {\"description\": \"Name of the star\", \"title\": \"Name\", \"type\": \"string\"}, \"description\": {\"description\": \"Description of the star\", \"title\": \"Description\", \"type\": \"string\"}, \"size\": {\"description\": \"Size of the star\", \"title\": \"Size\", \"type\": \"number\"}, \"temperature\": {\"description\": \"Temperature of the star\", \"title\": \"Temperature\", \"type\": \"number\"}, \"radius\": {\"description\": \"Radius of the star\", \"title\": \"Radius\", \"type\": \"number\"}}, \"required\": [\"name\", \"description\", \"size\", \"temperature\", \"radius\"], \"title\": \"Star\", \"type\": \"object\"}}, \"properties\": {\"name\": {\"description\": \"Name of the solar system\", \"title\": \"Name\", \"type\": \"string\"}, \"description\": {\"description\": \"Description of the solar system\", \"title\": \"Description\", \"type\": \"string\"}, \"planets\": {\"description\": \"Planets of the solar system\", \"items\": {\"$ref\": \"#/$defs/Planet\"}, \"title\": \"Planets\", \"type\": \"array\"}, \"central_star\": {\"allOf\": [{\"$ref\": \"#/$defs/Star\"}], \"description\": \"Central star of the solar system\"}}, \"required\": [\"name\", \"description\", \"planets\", \"central_star\"]}\n```", "output": "{\n  \"name\": \"The Lumina System\",\n  \"description\": \"A vibrant solar system located in the Orion Arm of the Milky Way, known for its unique star and diverse planetary environments.\",\n  \"planets\": [\n    {\n      \"name\": \"Aetheris\",\n      \"description\": \"A gas giant adorned with vibrant, swirling storms and luminous clouds, Aetheris has a faint ring system made of icy particles.\",\n      \"size\": 120000,\n      \"population\": 0,\n      \"distance_from_sun\": 10\n    },\n    {\n      \"name\": \"Virelia\",\n      \"description\": \"A terrestrial planet with a rich, breathable atmosphere and vast oceans. It is home to diverse ecosystems and intelligent life forms.\",\n      \"size\": 8000,\n      \"population\": 3000000000,\n      \"distance_from_sun\": 7\n    },\n    {\n      \"name\": \"Pyronis\",\n      \"description\": \"A volcanic world with rivers of lava and a thick, toxic atmosphere. Despite its harsh conditions, extremophiles thrive near volcanic vents.\",\n      \"size\": 6000,\n      \"population\": 0,\n      \"distance_from_sun\": 5\n    },\n    {\n      \"name\": \"Glacius\",\n      \"description\": \"An icy planet covered in glaciers and frozen seas, Glacius has subsurface oceans that may harbor life beneath its thick ice crust.\",\n      \"size\": 7000,\n      \"population\": 0,\n      \"distance_from_sun\": 15\n    },\n    {\n      \"name\": \"Florus\",\n      \"description\": \"A lush, verdant world with sprawling forests and diverse wildlife, Florus has a unique bioluminescent flora that illuminates the night.\",\n      \"size\": 9000,\n      \"population\": 2000000000,\n      \"distance_from_sun\": 12\n    },\n    {\n      \"name\": \"Solistra\",\n      \"description\": \"An oceanic planet with a thin atmosphere, Solistra is known for its massive tidal forces and beautiful coral-like formations.\",\n      \"size\": 8500,\n      \"population\": 1000000000,\n      \"distance_from_sun\": 9\n    }\n  ],\n  \"central_star\": {\n    \"name\": \"Helios Prime\",\n    \"description\": \"A bright, blue-white star that emits a unique spectrum of light, Helios Prime influences the climates of its planets and supports a vibrant network of ecosystems.\",\n    \"size\": 150000,\n    \"temperature\": 12000,\n    \"radius\": 2.5\n  }\n}"}
{"input": "You are a cosmic architect tasked with designing an extraordinary and unique solar system.\n### Instructions:\n1. Create a distinctive star system with compelling astronomical features and coherent cosmic dynamics.\n2. Design a central star with unique properties that influence the entire system.\n3. Craft 2-8 diverse planets with fascinating characteristics, atmospheres, and potential for life.\n4. Consider the system's location in the galaxy and how it affects its development.\n5. Include both common astronomical phenomena and unexpected cosmic features.\n6. Ensure planetary distances and sizes follow basic astronomical principles.\n7. Make the system scientifically plausible while maintaining creativity.\n\n### Format Instructions:\n1. Do NOT include headers, comments, or any additional text—only generate the JSON file.\n2. Strictly adhere to the following JSON format:\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {\"properties\": {\"foo\": {\"title\": \"Foo\", \"description\": \"a list of strings\", \"type\": \"array\", \"items\": {\"type\": \"string\"}}}, \"required\": [\"foo\"]}\nthe object {\"foo\": [\"bar\", \"baz\"]} is a well-formatted instance of the schema. The object {\"properties\": {\"foo\": [\"bar\", \"baz\"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{\"$defs\": {\"Planet\": {\"properties\": {\"name\": {\"description\": \"Name of the planet\", \"title\": \"Name\", \"type\": \"string\"}, \"description\": {\"description\": \"Description of the planet\", \"title\": \"Description\", \"type\": \"string\"}, \"size\": {\"description\": \"Size of the planet\", \"title\": \"Size\", \"type\": \"number\"}, \"population\": {\"description\": \"Population of the planet\", \"title\": \"Population\", \"type\": \"integer\"}, \"distance_from_sun\": {\"description\": \"Distance from the sun\", \"title\": \"Distance From Sun\", \"type\": \"number\"}}, \"required\": [\"name\", \"description\", \"size\", \"population\", \"distance_from_sun\"], \"title\": \"Planet\", \"type\": \"object\"}, \"Star\": {\"properties\": {\"name\": {\"description\": \"Name of the star\", \"title\": \"Name\", \"type\": \"string\"}, \"description\": {\"description\": \"Description of the star\", \"title\": \"Description\", \"type\": \"string\"}, \"size\": {\"description\": \"Size of the star\", \"title\": \"Size\", \"type\": \"number\"}, \"temperature\": {\"description\": \"Temperature of the star\", \"title\": \"Temperature\", \"type\": \"number\"}, \"radius\": {\"description\": \"Radius of the star\", \"title\": \"Radius\", \"type\": \"number\"}}, \"required\": [\"name\", \"description\", \"size\", \"temperature\", \"radius\"], \"title\": \"Star\", \"type\": \"object\"}}, \"properties\": {\"name\": {\"description\": \"Name of the solar system\", \"title\": \"Name\", \"type\": \"string\"}, \"description\": {\"description\": \"Description of the solar system\", \"title\": \"Description\", \"type\": \"string\"}, \"planets\": {\"description\": \"Planets of the solar system\", \"items\": {\"$ref\": \"#/$defs/Planet\"}, \"title\": \"Planets\", \"type\": \"array\"}, \"central_star\": {\"allOf\": [{\"$ref\": \"#/$defs/Star\"}], \"description\": \"Central star of the solar system\"}}, \"required\": [\"name\", \"description\", \"planets\", \"central_star\"]}\n```", "output": "{\n  \"name\": \"Zyphora System\",\n  \"description\": \"The Zyphora System is a vibrant solar system located in the Orion Arm of the Milky Way, characterized by a unique star and a diverse array of planets, some with potential for life.\",\n  \"planets\": [\n    {\n      \"name\": \"Thalassa\",\n      \"description\": \"An ocean world covered in deep, sapphire oceans with floating islands. Thalassa has a breathable atmosphere rich in oxygen and water vapor, supporting diverse marine life.\",\n      \"size\": 1.0,\n      \"population\": 2000000000,\n      \"distance_from_sun\": 0.5\n    },\n    {\n      \"name\": \"Pyros\",\n      \"description\": \"A volcanic planet with a thick atmosphere of sulfur dioxide and nitrogen. Pyros is home to extreme geothermal activity, creating a landscape of lava rivers and sulfuric geysers.\",\n      \"size\": 0.8,\n      \"population\": 0,\n      \"distance_from_sun\": 0.8\n    },\n    {\n      \"name\": \"Aetheria\",\n      \"description\": \"A gas giant with a stunning array of rings and numerous moons. Aetheria has a turbulent atmosphere with colorful storms and is a hotspot for exploration.\",\n      \"size\": 10.0,\n      \"population\": 0,\n      \"distance_from_sun\": 1.5\n    },\n    {\n      \"name\": \"Verdis\",\n      \"description\": \"A terrestrial planet covered in lush forests and vibrant life. Verdis has a mild climate and a rich biodiversity, making it a candidate for human colonization.\",\n      \"size\": 1.2,\n      \"population\": 500000000,\n      \"distance_from_sun\": 1.2\n    },\n    {\n      \"name\": \"Glimmer\",\n      \"description\": \"An icy world that reflects sunlight with a beautiful sheen, Glimmer has a thin atmosphere and subglacial oceans. Potential for extremophile life exists beneath the ice.\",\n      \"size\": 0.7,\n      \"population\": 0,\n      \"distance_from_sun\": 2.5\n    },\n    {\n      \"name\": \"Noxis\",\n      \"description\": \"A dark, rocky planet known for its extensive cave systems. Noxis has a nitrogen-rich atmosphere and is thought to harbor unique subterranean life forms.\",\n      \"size\": 0.9,\n      \"population\": 0,\n      \"distance_from_sun\": 3.0\n    }\n  ],\n  \"central_star\": {\n    \"name\": \"Zyphor\",\n    \"description\": \"A blue-white star that burns hotter than typical stars, Zyphor has a high luminosity and a rapid rotation, creating intense solar winds that shape the system's dynamics.\",\n    \"size\": 1.8,\n    \"temperature\": 12000,\n    \"radius\": 2.5\n  }\n}"}
{"input": "You are a cosmic architect tasked with designing an extraordinary and unique solar system.\n### Instructions:\n1. Create a distinctive star system with compelling astronomical features and coherent cosmic dynamics.\n2. Design a central star with unique properties that influence the entire system.\n3. Craft 2-8 diverse planets with fascinating characteristics, atmospheres, and potential for life.\n4. Consider the system's location in the galaxy and how it affects its development.\n5. Include both common astronomical phenomena and unexpected cosmic features.\n6. Ensure planetary distances and sizes follow basic astronomical principles.\n7. Make the system scientifically plausible while maintaining creativity.\n\n### Format Instructions:\n1. Do NOT include headers, comments, or any additional text—only generate the JSON file.\n2. Strictly adhere to the following JSON format:\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {\"properties\": {\"foo\": {\"title\": \"Foo\", \"description\": \"a list of strings\", \"type\": \"array\", \"items\": {\"type\": \"string\"}}}, \"required\": [\"foo\"]}\nthe object {\"foo\": [\"bar\", \"baz\"]} is a well-formatted instance of the schema. The object {\"properties\": {\"foo\": [\"bar\", \"baz\"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{\"$defs\": {\"Planet\": {\"properties\": {\"name\": {\"description\": \"Name of the planet\", \"title\": \"Name\", \"type\": \"string\"}, \"description\": {\"description\": \"Description of the planet\", \"title\": \"Description\", \"type\": \"string\"}, \"size\": {\"description\": \"Size of the planet\", \"title\": \"Size\", \"type\": \"number\"}, \"population\": {\"description\": \"Population of the planet\", \"title\": \"Population\", \"type\": \"integer\"}, \"distance_from_sun\": {\"description\": \"Distance from the sun\", \"title\": \"Distance From Sun\", \"type\": \"number\"}}, \"required\": [\"name\", \"description\", \"size\", \"population\", \"distance_from_sun\"], \"title\": \"Planet\", \"type\": \"object\"}, \"Star\": {\"properties\": {\"name\": {\"description\": \"Name of the star\", \"title\": \"Name\", \"type\": \"string\"}, \"description\": {\"description\": \"Description of the star\", \"title\": \"Description\", \"type\": \"string\"}, \"size\": {\"description\": \"Size of the star\", \"title\": \"Size\", \"type\": \"number\"}, \"temperature\": {\"description\": \"Temperature of the star\", \"title\": \"Temperature\", \"type\": \"number\"}, \"radius\": {\"description\": \"Radius of the star\", \"title\": \"Radius\", \"type\": \"number\"}}, \"required\": [\"name\", \"description\", \"size\", \"temperature\", \"radius\"], \"title\": \"Star\", \"type\": \"object\"}}, \"properties\": {\"name\": {\"description\": \"Name of the solar system\", \"title\": \"Name\", \"type\": \"string\"}, \"description\": {\"description\": \"Description of the solar system\", \"title\": \"Description\", \"type\": \"string\"}, \"planets\": {\"description\": \"Planets of the solar system\", \"items\": {\"$ref\": \"#/$defs/Planet\"}, \"title\": \"Planets\", \"type\": \"array\"}, \"central_star\": {\"allOf\": [{\"$ref\": \"#/$defs/Star\"}], \"description\": \"Central star of the solar system\"}}, \"required\": [\"name\", \"description\", \"planets\", \"central_star\"]}\n```", "output": "{\n  \"name\": \"Elysium Nexus\",\n  \"description\": \"A vibrant solar system located in the Orion Arm of the Milky Way, characterized by its unique star and a diverse array of planets that exhibit a fascinating range of environments and potential for life.\",\n  \"planets\": [\n    {\n      \"name\": \"Zephyra\",\n      \"description\": \"A gas giant with swirling pastel clouds and a faint ring system, known for its high-speed winds and lightning storms.\",\n      \"size\": 120000,\n      \"population\": 0,\n      \"distance_from_sun\": 5.0\n    },\n    {\n      \"name\": \"Aqualis\",\n      \"description\": \"An oceanic world covered entirely by water, featuring floating islands and thriving marine ecosystems, with bioluminescent flora and fauna.\",\n      \"size\": 8000,\n      \"population\": 5000000,\n      \"distance_from_sun\": 2.5\n    },\n    {\n      \"name\": \"Terranova\",\n      \"description\": \"A rocky planet with a diverse landscape of mountains, forests, and deserts, supporting a multitude of life forms and advanced civilizations.\",\n      \"size\": 6000,\n      \"population\": 2000000000,\n      \"distance_from_sun\": 1.0\n    },\n    {\n      \"name\": \"Solara\",\n      \"description\": \"A small, arid planet with vast deserts and occasional oases, known for its ancient ruins and mysterious artifacts left by a lost civilization.\",\n      \"size\": 3000,\n      \"population\": 10000,\n      \"distance_from_sun\": 1.5\n    },\n    {\n      \"name\": \"Cryon\",\n      \"description\": \"An icy world with a thick atmosphere and subsurface oceans, home to unique life forms that thrive in extreme cold and darkness.\",\n      \"size\": 4000,\n      \"population\": 0,\n      \"distance_from_sun\": 7.0\n    },\n    {\n      \"name\": \"Volcanis\",\n      \"description\": \"A volcanic planet with an inhospitable surface, characterized by active lava flows and ash clouds, but with potential for extremophilic life.\",\n      \"size\": 3500,\n      \"population\": 0,\n      \"distance_from_sun\": 4.0\n    }\n  ],\n  \"central_star\": {\n    \"name\": \"Helios Nova\",\n    \"description\": \"A bright, blue supergiant star that emits intense radiation and has a complex magnetic field, influencing the orbits and atmospheres of its planets.\",\n    \"size\": 30000,\n    \"temperature\": 25000,\n    \"radius\": 35\n  }\n}"}
